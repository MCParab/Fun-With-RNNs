/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package atcinfomgmtsystem;

import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.TimeZone;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ABC
 */
public class ATCHomeInterface extends javax.swing.JFrame {

    /**
     * Creates new form ATCHomeInterface
     */
    public ATCHomeInterface() {
        initComponents();
    }

    
    
     public void displayInfo(){
        DefaultTableModel model = (DefaultTableModel) atctable.getModel();
        try{
            
           Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");  // load the driver
     // line below needs to be modified to include the database name, user, and password (if any)
  Connection con = DriverManager.getConnection("jdbc:sqlserver://localhost:1433;databaseName=ATC_Project;user=leo;password=123");
            Statement stmt =con.createStatement();
           
          String Query ="SELECT * FROM ATC_Tb order by SrNo desc  ;";
          System.out.println("connected");
          ResultSet rs =stmt.executeQuery(Query);
            
            while(rs.next()){
                int sno=rs.getInt("SrNo");
             
                String snn=rs.getString("Stn_Name");
                String sda=rs.getString("Send_date");
                String msg=rs.getString("Message");
            
                
                
                model.addRow(new Object[] {sno,snn,sda,msg});
                
            }
            rs.close();
            stmt.close();
           con.close();  
           
        }catch(Exception e){
            e.printStackTrace();
        }
        
     }
    
      final DateFormat dateFormat = new SimpleDateFormat(" HH:mm:ss");
    /**
     * Creates new form DigitalClock
     */
    public void  DigitalClock() {
        
       new Thread(){
            public void run(){
                while(true){
                    
                   //Date with return local time in java 
                   Date localTime =new Date();
                   //creating DateFormat for converting time from local timezone to GMT
                   DateFormat converter =new SimpleDateFormat(" HH:mm:ss");
                   //getting GMT timezone , you can get any timezone e.g. UTC 
                   converter.setTimeZone(TimeZone.getTimeZone("GMT"));
                   //clock display in clocklbl 
                   clklbl.setText( converter.format(localTime)); 
                   
                }
            }
        }.start();

   
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        atctable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        msgta = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        clklbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 153));
        jLabel1.setText("ATC INFORMATION MANAGEMENT SYSTEM ");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/atcinfomgmtsystem/aailogo.jpg"))); // NOI18N

        atctable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        atctable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sr No ", "Stn_Name", "Send_Date", "Message"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        atctable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                atctableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(atctable);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("REFRESH");

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setText("SEARCH");

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        msgta.setColumns(20);
        msgta.setRows(5);
        jScrollPane2.setViewportView(msgta);

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setText("CLEAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setText("PRINT");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(112, Short.MAX_VALUE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(71, 71, 71)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addContainerGap())
        );

        clklbl.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        clklbl.setForeground(new java.awt.Color(0, 0, 204));
        clklbl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 721, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(159, 159, 159)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(81, 81, 81)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(clklbl, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(67, 67, 67))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(147, 147, 147)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(clklbl, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void atctableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_atctableMouseClicked
        // TODO add your handling code here:
          msgta.setText("");
        DefaultTableModel model = (DefaultTableModel) atctable.getModel();
        String setStation = atctable.getValueAt(atctable.getSelectedRow(), 1).toString();
        String setDate = atctable.getValueAt(atctable.getSelectedRow(), 2).toString();
        String setMessage = atctable.getValueAt(atctable.getSelectedRow(), 3).toString();
        msgta.append(""+setStation+" "+setDate+'\n'+""+setMessage);
    }//GEN-LAST:event_atctableMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
          msgta.setText(" ");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
           
        if(msgta.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Please , select some message from the table given ........ ");
        }
        else{
             try 
               {
                  msgta.print(null, null, true, null, null, true);
                    }
                catch(PrinterException pe)
                {
                 JOptionPane.showMessageDialog(this,"Printer Exception");
                   }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ATCHomeInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ATCHomeInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ATCHomeInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ATCHomeInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ATCHomeInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable atctable;
    private javax.swing.JLabel clklbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea msgta;
    // End of variables declaration//GEN-END:variables
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package atcinfomgmtsystem;

/**
 *
 * @author ABC
 */
public class ATCInfoMgmtSystem {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               ATCHomeInterface obj= new ATCHomeInterface();
               obj.setVisible(true);
               obj.displayInfo();
                 obj.DigitalClock();
            }
        });
    }
    
}

package Arrays;

public class ArrayApp {
    public static void main(String args[]){
        int maxSize=20;
        long[] arr;
        arr=new long[maxSize];
        int nElems=0;
        int j;
        long searchKey;
        //----------------------------------------------------------------------
        System.out.print("A = ");
        for(int i=0;i<maxSize;i++){
            long n=(int)(java.lang.Math.random()*99);
            arr[i]=n;
            System.out.print(arr[i]+" ");
        }
        System.out.println(" ");
        //----------------------------------------------------------------------
        searchKey=66;
        for(j=0;j<nElems;j++)
            if(arr[j]==searchKey)
                break;
        if(j==nElems)
            System.out.println("Can't find "+ searchKey);
        else
            System.out.println("Found "+ searchKey);
        //----------------------------------------------------------------------
        System.out.print("A = ");
        for(j=0;j<nElems;j++)
            System.out.print(arr[j]+" ");
        System.out.println("");
        //----------------------------------------------------------------------
    }
}
//------------------------------------------------------------------------------

package Arrays;

import java.util.Scanner;

public class BinarySearchApp {
    public static void main(String args[]){
        int c, first, last, middle, n, search, array[];
        
        Scanner in =new Scanner(System.in);
        System.out.println("Enter number of elements");
        
        n=in.nextInt();
        array=new int[n];
        
        System.out.println("Enter "+n+" integers");
        
        for(c=0;c<n;c++)
            array[c]=in.nextInt();
        
        System.out.println("Enter value to find");
        search=in.nextInt();
        
        first=0;
        last=n-1;
        middle=(first+last)/2;
        
        while(first<=last){
            if(array[middle]<search)
                first=middle+1;
            else
                if(array[middle]==search){
                    System.out.println(search+" found at location "+(middle+1)+".");
                    break;
                }
            else
                    last=middle-1;
            middle=(first+last)/2;
        }
        if(first>last)
            System.out.println(search+" is not present in the list.\n");
    }
}

package Arrays;
////////////////////////////////////////////////////////////////////////////////
public class ClassDataApp {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        int maxSize=100;
        ClassDataArray arr;
        arr=new ClassDataArray(maxSize);
        
        arr.insert("Evans", "Patty", 24);
        arr.insert("Smith", "Lorraine", 37);
        arr.insert("Yee", "Tom", 63);
        arr.insert("Adams", "Henry", 21);
        arr.insert("Hashinoto", "Sato", 21);
        arr.insert("Stimson", "Henry", 29);
        arr.insert("Lamarque", "Henry", 54);
        arr.insert("Vang", "Mint", 22);
        arr.insert("Velasquez", "Jose", 72);
        arr.insert("Creswell", "Lucinda", 18);
        
        arr.displayA();
        
        String searchKey="Stimson";
        Person found;
        found=arr.find(searchKey);
        
        if(found!=null){
            System.out.print("Found ");
            found.displayPerson();
        }
        else
            System.out.println("Can't find "+searchKey);
        
        System.out.println("deleting Vang Velasquez Creswell");
        arr.delete("Vang");
        arr.delete("Velasquez");
        arr.delete("Creswell");
        
        arr.displayA();
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////

/*
OUTPUT 

 Last Name Evans, FIrst Name Patty, Age 24
 Last Name Smith, FIrst Name Lorraine, Age 37
 Last Name Yee, FIrst Name Tom, Age 63
 Last Name Adams, FIrst Name Henry, Age 21
 Last Name Hashinoto, FIrst Name Sato, Age 21
 Last Name Stimson, FIrst Name Henry, Age 29
 Last Name Lamarque, FIrst Name Henry, Age 54
 Last Name Vang, FIrst Name Mint, Age 22
 Last Name Velasquez, FIrst Name Jose, Age 72
 Last Name Creswell, FIrst Name Lucinda, Age 18
Found  Last Name Stimson, FIrst Name Henry, Age 29
deleting Vang Velasquez Creswell
 Last Name Evans, FIrst Name Patty, Age 24
 Last Name Smith, FIrst Name Lorraine, Age 37
 Last Name Yee, FIrst Name Tom, Age 63
 Last Name Adams, FIrst Name Henry, Age 21
 Last Name Hashinoto, FIrst Name Sato, Age 21
 Last Name Stimson, FIrst Name Henry, Age 29
 Last Name Lamarque, FIrst Name Henry, Age 54


*/

package Arrays;
////////////////////////////////////////////////////////////////////////////////
public class ClassDataArray {
    private Person[] a;
    private int nElems;
    //--------------------------------------------------------------------------
    public ClassDataArray(int max){
        a=new Person[max];
        nElems=0;
    }
    //--------------------------------------------------------------------------
    public Person find(String searchName){
        int j;
        for(j=0;j<nElems;j++)
            if(a[j].getLast().equals(searchName))
                break;
        if(j==nElems)
            return null;
        else
            return a[j];
    }
    //--------------------------------------------------------------------------
    public void insert(String last,String first,int age){
        a[nElems]=new Person(last, first, age);
        nElems++;
    }
    //--------------------------------------------------------------------------
    public boolean delete(String searchName){
        int j;
        for(j=0;j<nElems;j++)
            if(a[j].getLast().equals(searchName))
                break;
        if(j==nElems)
            return false;
        else{
            for(int k=j;k<nElems;k++)
                a[k]=a[k+1];
            nElems--;
            return true;           
        }
    }
    //--------------------------------------------------------------------------
    public void displayA(){
        for(int j=0;j<nElems;j++)
            a[j].displayPerson();
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
package Arrays;
////////////////////////////////////////////////////////////////////////////////
public class HighArray {
    private long[] a;
    private int nElems;
    //--------------------------------------------------------------------------
    public HighArray(int max){
        a=new long[max];
        nElems=0;
    }
    //--------------------------------------------------------------------------
    public boolean find(long searchKey){
        int j;
        for(j=0;j<nElems;j++)
            if(a[j]==searchKey)
                break;
        if(j==nElems)
            return false;
        else
            return true;
    }
    //--------------------------------------------------------------------------
    public void insert(long value){
        a[nElems]=value;
        nElems++;
    }
    //--------------------------------------------------------------------------
    public boolean delete(long value){
        int j;
        for(j=0;j<nElems;j++)
            if(value==a[j])
                break;
        if(j==nElems)
            return false;
        else{
            for(int k=j;k<nElems;k++)
                a[k]=a[k+1];
            nElems--;
            return true;
        }
    }
    //--------------------------------------------------------------------------
    public void display(){
        for(int i=0;i<nElems;i++)
            System.out.print(a[i]+" ");
        System.out.println("");
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////

package Arrays;
////////////////////////////////////////////////////////////////////////////////
public class HighArrayApp {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        int maxSize=100;
        HighArray arr;
        arr=new HighArray(maxSize);
        
        arr.insert(77);
        arr.insert(99);
        arr.insert(44);
        arr.insert(55);
        arr.insert(22);
        arr.insert(88);
        arr.insert(11);
        arr.insert(00);
        arr.insert(66);
        arr.insert(33);
        
        arr.display();
        
        int searchKey=35;
        
        if(arr.find(searchKey))
            System.out.println("Found "+searchKey);
        else
            System.out.println("Can't find "+searchKey);
        
        arr.delete(00);
        arr.delete(55);
        arr.delete(99);
        
        arr.display();
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
/*Linear Search */
package Arrays;
import java.util.Scanner;

public class LinearSearch {
    
     int len,valueToSearch;
     Scanner linearscn=new Scanner(System.in);
     
     //-------------------------------------------------------------------------------------------------------
    LinearSearch(){
        
        System.out.println("*******Linear Search********");
        
        System.out.println("Enter number of elements");
        len=linearscn.nextInt();
        System.out.println("Enter the array elements");
        int thearray[]=new int[len+1];
        for(int i=0;i<len;i++){
            
            thearray[i]=linearscn.nextInt();
        }
        
        System.out.println("Array created. Enter the value to search using linear search :");
        valueToSearch=linearscn.nextInt();
        this.linearSearch(thearray, valueToSearch,len);
        
    }
    
    //-------------------------------------------------------------------------------------------------------
    private void linearSearch(int array[],int value,int len){
        int count=0;
        for(int i=0;i<len;i++){
            if(array[i]==value){
                System.out.println("Element found at "+(i+1)+"th position");
                count++;
            }
        }rohansonawane 
        if(count==0){
            System.out.println("Element Not found !!!");
        }
    }
    //-------------------------------------------------------------------------------------------------------
    public static void main(String args[]){
        LinearSearch lsr=new LinearSearch();
        
    }
}
/* OUTPUT
*******Linear Search********
Enter number of elements
5
Enter the array elements
2
3
5
1
7
Array created. Enter the value to search using linear search :
3
Element found at 2th position
*/

package Arrays;
////////////////////////////////////////////////////////////////////////////////
public class LowArray {
    private long[] a;
    //--------------------------------------------------------------------------
    public LowArray(int size){
        a=new long[size];
    }
    //--------------------------------------------------------------------------
    public void setElem(int index,long value){
        a[index]=value;
    }
    //--------------------------------------------------------------------------
    public long getElem(int index){
        return a[index];
    }
    //--------------------------------------------------------------------------
}

package Arrays;
////////////////////////////////////////////////////////////////////////////////
public class LowArrayApp {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        LowArray arr;
        arr=new LowArray(100);
        int nELems=0;
        int j;
        
        arr.setElem(0, 77);
        arr.setElem(1, 99);
        arr.setElem(2, 44);
        arr.setElem(3, 55);
        arr.setElem(4, 22);
        arr.setElem(5, 88);
        arr.setElem(6, 11);
        arr.setElem(7, 00);
        arr.setElem(8, 66);
        arr.setElem(9, 33);
        nELems=10;
        
        for(j=0;j<nELems;j++)
            System.out.print(arr.getElem(j)+" ");
        System.out.println("");
        
        int searchKey=26;
        for(j=0;j<nELems;j++)
            if(arr.getElem(j)==searchKey)
                break;
        if(j==nELems)
            System.out.println("Can't find "+searchKey);
        else
            System.out.println("Found "+searchKey);
        
        for(j=0;j<nELems;j++)
            if(arr.getElem(j)==55)
                break;
        for(int k=j;k<=nELems;k++)
            arr.setElem(k, arr.getElem(k+1));
        nELems--;
        
        for(j=0;j<nELems;j++)
            System.out.print(arr.getElem(j)+" ");
        System.out.println("");
        
    }
    //--------------------------------------------------------------------------
}


package Arrays;
////////////////////////////////////////////////////////////////////////////////
public class OrdArray {
    private long[] a;
    private int nElems;
    //--------------------------------------------------------------------------
    public OrdArray(int max){
        a=new long[max];
        nElems=0;
    }
    //--------------------------------------------------------------------------
    public int size(){
        return nElems;
    }
    //--------------------------------------------------------------------------
    public int find(long searchKey){
        int lowerBound=0;
        int upperBound=nElems-1;
        int curIn;
        
        while(true){
            curIn=(lowerBound+upperBound)/2;
            if(a[curIn]==searchKey)
                return curIn;
            else if(lowerBound>upperBound)
                return nElems;
            else{
                if(a[curIn]<searchKey)
                    lowerBound=curIn+1;
                else
                    upperBound=curIn-1;
            }
        }
    }
    //--------------------------------------------------------------------------
    public void insert(long value){
        int j;
        for(j=0;j<nElems;j++)
            if(a[j]>value)
                break;
        for(int k=nElems;k>j;k--)
            a[k]=a[k-1];
        a[j]=value;
        nElems++;
    }
    //--------------------------------------------------------------------------
    public boolean delete(long value){
        int j=find(value);
        if(j==nElems)
            return false;
        else{
            for(int k=j;k<nElems;k++)
                a[k]=a[k+1];
            nElems--;
            return true;
        }
    }
    //--------------------------------------------------------------------------
    public void display(){
        for(int j=0;j<nElems;j++)
            System.out.print(a[j]+" ");
        System.out.println("");
    }
package Arrays;
////////////////////////////////////////////////////////////////////////////////
public class OrdArray {
    private long[] a;
    private int nElems;
    //--------------------------------------------------------------------------
    public OrdArray(int max){
        a=new long[max];
        nElems=0;
    }
    //--------------------------------------------------------------------------
    public int size(){
        return nElems;
    }
    //--------------------------------------------------------------------------
    public int find(long searchKey){
        int lowerBound=0;
        int upperBound=nElems-1;
        int curIn;
        
        while(true){
            curIn=(lowerBound+upperBound)/2;
            if(a[curIn]==searchKey)
                return curIn;
            else if(lowerBound>upperBound)
                return nElems;
            else{
                if(a[curIn]<searchKey)
                    lowerBound=curIn+1;
                else
                    upperBound=curIn-1;
            }
        }
    }
    //--------------------------------------------------------------------------
    public void insert(long value){
        int j;
        for(j=0;j<nElems;j++)
            if(a[j]>value)
                break;
        for(int k=nElems;k>j;k--)
            a[k]=a[k-1];
        a[j]=value;
        nElems++;
    }
    //--------------------------------------------------------------------------
    public boolean delete(long value){
        int j=find(value);
        if(j==nElems)
            return false;
        else{
            for(int k=j;k<nElems;k++)
                a[k]=a[k+1];
            nElems--;
            return true;
        }
    }
    //--------------------------------------------------------------------------
    public void display(){
        for(int j=0;j<nElems;j++)
            System.out.print(a[j]+" ");
        System.out.println("");
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////

    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////

package Arrays;
////////////////////////////////////////////////////////////////////////////////
public class OrderedArrApp {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        int maxSIze=100;
        OrdArray arr;
        arr=new OrdArray(maxSIze);
        
        arr.insert(77);
        arr.insert(99);
        arr.insert(44);
        arr.insert(55);
        arr.insert(22);
        arr.insert(00);
        arr.insert(11);
        arr.insert(66);
        arr.insert(88);
        arr.insert(33);
        
        arr.display();
        
        int searchKey=55;
        if(arr.find(searchKey)!=arr.size())
            System.out.println("Found "+searchKey);
        else
            System.out.println("Can't find "+searchKey);
        
        arr.display();
        
        arr.delete(00);
        arr.delete(55);
        arr.delete(99);
        
        arr.display();
    }
   //---------------------------------------------------------------------------         
}
////////////////////////////////////////////////////////////////////////////////

package Arrays;
////////////////////////////////////////////////////////////////////////////////
public class Person {
    private String lasName;
    private String firstName;
    private int age;
    //--------------------------------------------------------------------------
    public Person(String last,String first,int a){
        lasName=last;
        firstName=first;
        age=a;
    }
    //--------------------------------------------------------------------------
    public void displayPerson(){
        System.out.print(" Last Name "+lasName);
        System.out.print(", FIrst Name "+firstName);
        System.out.print(", Age "+age);
        System.out.println("");
    }
    //--------------------------------------------------------------------------
    public String getLast(){
        return lasName;
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////

public class BreadthFirstSearch {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        Graph theGraph=new Graph();
        
        theGraph.addVertex('A');
        theGraph.addVertex('B');
        theGraph.addVertex('C');
        theGraph.addVertex('D');
        theGraph.addVertex('E');
        
        theGraph.addEdge(0, 1);
        theGraph.addEdge(1, 2);
        theGraph.addEdge(0, 3);
        theGraph.addEdge(3, 4);
        
        System.out.print("Visits :");
        theGraph.bfs();
        System.out.println();
        
    }
    
}

public class Graph {
    
    
    private final int MAX_VERTS=20;
    private Vertex vertexList[];
    private int adjMat[][];
    private int nVerts;
    private Queue theQueue;
    
    public Graph(){
        vertexList=new Vertex[MAX_VERTS];
        adjMat=new int[MAX_VERTS][MAX_VERTS];
        nVerts=0;
        for(int j=0;j<MAX_VERTS;j++)
            for(int k=0;k<MAX_VERTS;k++)
                adjMat[j][k]=0;
        theQueue=new Queue();
    }
    
    
    public void addVertex(char lab){
        vertexList[nVerts++]=new Vertex(lab);
    }
    
    public void addEdge(int start,int end){
        adjMat[start][end]=1;
        adjMat[end][start]=1;
    }
    
    public void displayVertex(int v){
        System.out.println(vertexList[v].label);
    }
    
    public int getAdjUnvisitedVertex(int v){
        for(int j=0;j<nVerts;j++)
            if(adjMat[v][j]==1 && vertexList[j].wasVisited==false)
                   return j;
        return -1;
    }
    
    public void bfs(){
        vertexList[0].wasVisited=true;
        displayVertex(0);
        theQueue.insert(0);
        int v2;
        
        while(!theQueue.isEmpty()){
            int v1=theQueue.remove();
            while((v2=getAdjUnvisitedVertex(v1))!=-1){
                vertexList[v2].wasVisited=true;
                displayVertex(v2);
                theQueue.insert(v2);
            }
        }
        
        for(int j=0;j<nVerts;j++)
            vertexList[j].wasVisited=false;
    }
    
}

public class Queue {
    
    private final int SIZE=20;
    private int[] queueArray;
    private int front ;
    private int rear;
    
    public Queue(){
        queueArray = new int[SIZE];
        front=0;
        rear=-1;
    }
    
    public void insert(int j){
        if(rear==(SIZE-1))
            rear=-1;
       queueArray[++rear]=j;
    }
    
    public int remove(){
        int temp=queueArray[front++];
        if(front==SIZE)
            front=0;
        return temp;
    }
    
    public boolean isEmpty(){
        return (rear+1==front ||(front+SIZE-1==rear));
    }
    
}

public class Vertex {
    public char label;
    public boolean wasVisited;
    
    public Vertex(char lab){
        label=lab;
        wasVisited=false;
    }
}

public class DepthFirstSearch {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        Graph theGraph=new Graph();
        
        theGraph.addVertex('A');
        theGraph.addVertex('B');
        theGraph.addVertex('C');
        theGraph.addVertex('D');
        theGraph.addVertex('E');
        
        theGraph.addEdge(0, 1);
        theGraph.addEdge(1, 2);
        theGraph.addEdge(0, 3);
        theGraph.addEdge(3, 4);
        
        System.out.println("Visits :");
        theGraph.dfs();
        System.out.println();
        
        
        
        
    }
    
}

public class Graph {
    
    private final int MAX_VERTS=20;
    private Vertex vertexList[];
    private int adjMat[][];
    private int nVerts;
    private StackX theStack;
    
    public Graph(){
        vertexList=new Vertex[MAX_VERTS];
        adjMat=new int[MAX_VERTS][MAX_VERTS];
        nVerts=0;
        
        for(int j=0;j<MAX_VERTS;j++)
            for(int k=0;k<MAX_VERTS;k++)
                adjMat[j][k]=0;
        theStack =new StackX();
        
    }
    
    
    public void addVertex(char lab){
        vertexList[nVerts++]=new Vertex(lab);
    }
    
    public void addEdge(int start,int end){
        adjMat[start][end]=1;
        adjMat[end][start]=1;
    }
    
    public void displayVertex(int v){
        System.out.println(vertexList[v].label);
    }
    
    public int getAdjUnVisitedVertex(int v){
        for(int j=0;j<nVerts;j++)
            if(adjMat[v][j]==1 && vertexList[j].wasVisited==false)
                return j;
        return -1;
    }
    
    public void dfs(){
        vertexList[0].wasVisited=true;
        displayVertex(0);
        theStack.push(0);
        
        while(!theStack.isEmpty()){
            int v=getAdjUnVisitedVertex(theStack.peek());
            if(v==-1)
                theStack.pop();
            else{
                vertexList[v].wasVisited=true;
                displayVertex(v);
                theStack.push(v);
            }
        }
        
        for(int j=0;j<nVerts;j++)
            vertexList[j].wasVisited=false;
    }
    
    
}

public class StackX {
    
    private final int SIZE=20;
    private int[] st;
    private int top;
    
    public StackX(){
        st=new int[SIZE];
        top=-1;
    }
    
    public void push(int j){
        st[++top]=j;
    }
    
    public int pop(){
        return st[top--];
    }
    
    public int peek(){
        return st[top];
    }
    
    public boolean isEmpty(){
        return (top==-1);
    }
    
    
}

public class Vertex {
    
    public char label;
    public boolean wasVisited;
    
    public Vertex(char label){
        this.label=label;
        wasVisited=false;
    }
    
}

package MinimumSpanningTrees;

public class Graph {
    
    private final int MAX_VERTS=20;
    private Vertex vertexList[];  //list of vertices
    private int adjMat[][];       // adjacency matrix
    private int nVerts;           // current number of Vertices
    private StackX stack;
    
    //----------------------------------------------------------
    public Graph(){               //constructor
        vertexList =new Vertex[MAX_VERTS];
        adjMat=new int[MAX_VERTS][MAX_VERTS];
        nVerts=0;
        for(int j=0;j<MAX_VERTS;j++)          //set adjacency 
            for(int k=0;k<MAX_VERTS;k++)
                adjMat[j][k]=0;
        stack=new StackX();
    }
    //----------------------------------------------------------
    public void addVertex(char lab){
        vertexList[nVerts++]=new Vertex(lab);
    }
    //----------------------------------------------------------
    public void addEdge(int start,int end){
        adjMat[start][end]=1;
        adjMat[end][start]=1;
    }
    //----------------------------------------------------------
    public void displayVertex(int v){
        System.out.print(vertexList[v].label);
    }
    //----------------------------------------------------------
    public void mst(){      // Minimum Spanning Tree (Depth First)
        vertexList[0].wasVisited=true;
        stack.push(0);
        
        while(!stack.isEmpty()){ 
            int currentVertex=stack.peek();
            //get next unvisited neighbour 
            int v=getAdjUnvisitedVertex(currentVertex);
            if(v==-1)
                stack.pop();
            else{
                vertexList[v].wasVisited=true;
                stack.push(v);
                
                displayVertex(currentVertex);
                displayVertex(v);
                System.out.print(" ");
            }
        } // end of while loop
        
        //stack is empty, so we are done 
        for(int j=0;j<nVerts;j++)
            vertexList[j].wasVisited=false;
    }
    //----------------------------------------------------------
    // return an invisited vertes adjacent to v
    public int getAdjUnvisitedVertex(int v){
        for(int j=0;j<nVerts;j++)
            if(adjMat[v][j]==1 && vertexList[j].wasVisited==false)
                return j;
        return -1;         
               
    
    
    } 
}
/*
   -----------MINIMUM SPANNING TREES--------------

The algorithms is used to minimise the connections of the given Graph, such that the 
graph contains minimum number of edges necessary to connect the vertices.The algorithm
for creating the minimum spanning tree is almost identical to that used for searching.
It can be based on both BFS or DFS.

 */
package MinimumSpanningTrees;

public class MinimumSpanningTrees {

    public static void main(String[] args) {
        // TODO code application logic here
        Graph theGraph=new Graph();
        theGraph.addVertex('A');
        theGraph.addVertex('B');
        theGraph.addVertex('C');
        theGraph.addVertex('D');
        theGraph.addVertex('E');
        
        theGraph.addEdge(0, 1);
        theGraph.addEdge(0, 2);
        theGraph.addEdge(0, 3);
        theGraph.addEdge(0, 4);
        theGraph.addEdge(1, 2);
        theGraph.addEdge(1, 3);
        theGraph.addEdge(1, 4);
        theGraph.addEdge(2, 3);
        theGraph.addEdge(2, 4);
        theGraph.addEdge(3, 4);
        
        System.out.print("Minimum spanning tree :");
        theGraph.mst();
        System.out.println();
    }
}


/*
OUTPUT : Minimum spanning tree :AB BC CD DE 
*/
package MinimumSpanningTrees;

public class StackX {
    private final int SIZE=20;
    private int[] st;
    private int top;
    //-------------------------------------
    public StackX(){          //Constructor
        st=new int[SIZE];
        top=-1;
    }
    // -------------------------------------
    public void push(int j){
        st[++top]=j;
    }
    //--------------------------------------
    
    public int pop(){
        return st[top--];
    }
    //-------------------------------------
    public int peek(){
        return st[top];
    }
    //-------------------------------------
    public boolean isEmpty(){
        return (top==-1);
    }  
}

package MinimumSpanningTrees;

public class Vertex {
    public char label;
    public boolean wasVisited;
    //-----------------------------------
    public Vertex(char lab){
        label=lab;
        wasVisited=false;
    }
}
/*
Heaps:
  A heap is a binary tree with following characteristics:
    1. It's completely filled in, reading from left to right across each row.
       Although last row need not be full.
    2. It's (usually) implemented in an array.
    3. Each node in a heap satisfy heap condition, which states that every node's
       key is larger than (or equal to) the keys of its children.
    4. Heap is a kind of tree, it offers both insertion and deletion in O(logN)
       time.
Example of Heap :
................................................................................
                                100
                90                              80
        30              60              50              70
    20      10      40
................................................................................

Heaps are mostly used to implement priority queues.

Weakly Ordered :
    1. A heap is weakly ordered compared to binary search tree. Traversing the 
       node in order is difficult because organizing principle is not strong as
       the organizing principle in tree.
    2. Because Heaps are weakly ordered some of the operations are difficult or
       impossible. Heaps does not allow convenient searching for a specified
       key. Hence, Node with specified key can't be deleted in O(logN) time.
       These operations are carried out by O(N) time.
    3. The ordering is sufficient to allow fast removal of the maximum node and 
       fast insertion of new nodes. These operations are needed to use heaps as
       a priority queue.

Removal : Removal means removing the node with maximum key (root node). The root 
is always at index 0 od the heap array.
maxNode=heapArray[0];
Steps for rmoving the maximum node :
    1. Remove the root 
    2. Move the last node into the root
    3. Trickle the last node down until it's below a larger node and above a 
       smaller one.
    4. Removal decreases the array soze by 1.

Insertion : Insertion uses trickle up. Initially, the node to be inserted is 
placed in the first open position at the end of the array, increasing the array 
size by one:
heapArray[N]=newNode;
N++;
These will destroy the heap condition, then trickle up algorithm is used to 
satisfy the condition using appropriate swaping.
*/
package Heaps;
////////////////////////////////////////////////////////////////////////////////
public class Heap {
    private Node[] heapArray;
    private int maxSize;
    private int currentSize;
    //--------------------------------------------------------------------------
    public Heap(int mx){
        maxSize=mx;
        currentSize=0;
        heapArray=new Node[maxSize];
    }
    //--------------------------------------------------------------------------
    public boolean isEmpty(){
        return currentSize==0;
    }
    //--------------------------------------------------------------------------
    public boolean insert(int key){
        if(currentSize==maxSize)            //if array id full,
            return false;                   //Failure
        Node newNode =new Node(key);        //make a newNode 
        heapArray[currentSize]=newNode;     //put it at the end
        trickleUp(currentSize++);           // trickle it up
        return true;                        //success
    }
    //--------------------------------------------------------------------------
    /*`1. find the parent of the index position, and save the node in a variable 
          bottom. 
       2. Inside the while loop the variable index will trickle up the 
          path towards the root, pointing to each node in turn.
       3. loop runs as long as we haven't reached the root and the key index's
          parent is less than the new node.
    */
    public void trickleUp(int index){
        int parent=(index-1)/2;
        Node bottom=heapArray[index];
        while(index>0 && 
                heapArray[parent].getKey()<bottom.getKey()){
            heapArray[index]=heapArray[parent];     //move node down
            index=parent;                           //move index up
            parent=(parent-1)/2;                    //parent<- it's parent 
        }
        heapArray[index]=bottom;
    }
    //--------------------------------------------------------------------------
    public Node remove(){
        Node root=heapArray[0];
        heapArray[0]=heapArray[--currentSize];
        trickleDown(0);
        return root;
    }
    //--------------------------------------------------------------------------
    public void trickleDown(int index){
        int largerChild;
        Node top=heapArray[index];
        while(index<currentSize/2){
            int leftChild=2*index+1;
            int rightChild=leftChild+1;
            
            if(rightChild<currentSize &&
                    heapArray[leftChild].getKey()<
                    heapArray[rightChild].getKey())
                largerChild=rightChild;
            else
                largerChild=leftChild;
            
            if(top.getKey()>=heapArray[largerChild].getKey())
                break;
            
            heapArray[index]=heapArray[largerChild];
            index=largerChild;
        }
        heapArray[index]=top;
    }
    //--------------------------------------------------------------------------
    public boolean change(int index,int newValue){
        if(index<0 || index>=currentSize)
            return false;
        int oldValue=heapArray[index].getKey();
        heapArray[index].setKey(newValue);
        
        if(oldValue<newValue)
            trickleUp(index);
        else
            trickleDown(index);
        return true;
    }
    //--------------------------------------------------------------------------
    public void displayHeap(){
        System.out.print("Heap Array : ");
        for(int m=0;m<currentSize;m++)
            if(heapArray[m]!=null)
                System.out.print(heapArray[m].getKey()+" ");
            else
                System.out.print("--");
        System.out.println("");
        
        int nBlanks=32;
        int itemPerRow=1;
        int column=0;
        int j=0;
        String dots="..............................................";
        System.out.println(dots+dots);
        
        while(currentSize>0){
            if(column ==0 )
                for(int k=0;k<nBlanks;k++)
                    System.out.print(" ");
            
            System.out.print(heapArray[j].getKey());
            
            if(++j==currentSize)
                break;
            
            if(++column==itemPerRow){
                nBlanks/=2;
                itemPerRow*=2;
                column=0;
                System.out.println();
            }
            else
                for(int k=0;k<nBlanks*2-2;k++)
                    System.out.print(" ");
        }
        System.out.println('\n'+dots+dots);
    }
    //--------------------------------------------------------------------------
    public void displayArray(){
        for(int j=0;j<maxSize;j++)
            System.out.print(heapArray[j].getKey()+" ");
        System.out.println(" ");
    }
    //--------------------------------------------------------------------------
    public void insertAT(int index,Node newNode){
        heapArray[index]=newNode;
    }
    //--------------------------------------------------------------------------
    public void incrementSize(){
        currentSize++;
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
package Heaps;
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.lang.reflect.Array;
import java.nio.Buffer;
////////////////////////////////////////////////////////////////////////////////
public class HeapApp {
    public static void main(String args[]) throws IOException{
        int value,value2;
        Heap theHeap=new Heap(31);
        boolean success;
        
        theHeap.insert(70);
        theHeap.insert(40);
        theHeap.insert(50);
        theHeap.insert(20);
        theHeap.insert(60);
        theHeap.insert(100);
        theHeap.insert(80);
        theHeap.insert(30);
        theHeap.insert(10);
        theHeap.insert(90);
        
        while(true){
            System.out.println("Enter first letter of ");
            System.out.print("Show, insert, remove, change : ");
            int choice =getChar();
            switch(choice){
                case 's':
                    theHeap.displayHeap();
                    break;
                case 'i':
                    System.out.print("Enter value to insert : ");
                    value =getInt();
                    success=theHeap.insert(value);
                    if(!success)
                        System.out.println("Can't insert; heap full");
                    break;
                case 'r':
                    if(!theHeap.isEmpty())
                        theHeap.remove();
                    else
                        System.out.println("Can't remove; heap empty");
                    break;
                case 'c':
                    System.out.print("Enter current index of item : ");
                    value=getInt();
                    System.out.println("Enter new Key : ");
                    value2=getInt();
                    success=theHeap.change(value, value2);
                    if(!success)
                        System.out.println("Invalid index");
                    break;
                default:
                    System.out.println("Invalid entry\n");
            }
        }
    }
    //--------------------------------------------------------------------------
    public static String getString() throws IOException{
        InputStreamReader isr=new InputStreamReader(System.in);
        BufferedReader br=new BufferedReader(isr);
        String s=br.readLine();
        return s;
    }
    //--------------------------------------------------------------------------
    public static char getChar() throws IOException{
        String s=getString();
        return s.charAt(0);
    }
    //--------------------------------------------------------------------------
    public static int getInt() throws IOException{
        String s=getString();
        return Integer.parseInt(s);
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
package Heaps;
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
////////////////////////////////////////////////////////////////////////////////
public class HeapSortApp {
    //--------------------------------------------------------------------------
    public static void main(String args[]) throws IOException {
        int size, j;
        System.out.print("Enter the number of items : ");
        size = getInt();
        Heap theHeap = new Heap(size);

        for (j = 0; j < size; j++) {
            int random = (int) (java.lang.Math.random() * 100);
            Node newNode = new Node(random);
            theHeap.insertAT(j, newNode);
            theHeap.incrementSize();
        }

        System.out.print("Random: ");
        theHeap.displayArray();

        for (j = size / 2 - 1; j >= 0; j--) {
            theHeap.trickleDown(j);
        }

        System.out.print("Heap : ");
        theHeap.displayArray();
        theHeap.displayHeap();

        for (j = size - 1; j >= 0; j--) {
            Node biggestNode = theHeap.remove();
            theHeap.insertAT(j, biggestNode);
        }

        System.out.print("Sorted : ");
        theHeap.displayArray();
    }
    //--------------------------------------------------------------------------
    public static String getString() throws IOException {
        InputStreamReader isr = new InputStreamReader(System.in);
        BufferedReader br = new BufferedReader(isr);
        String s = br.readLine();
        return s;
    }
    //--------------------------------------------------------------------------
    public static int getInt() throws IOException {
        String s = getString();
        return Integer.parseInt(s);
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////


package Heaps;
////////////////////////////////////////////////////////////////////////////////
public class Node {
    private int iData;
    //--------------------------------------------------------------------------
    public Node(int key){
        iData=key;
    }
    //--------------------------------------------------------------------------
    public int getKey(){
        return iData;
    }
    //--------------------------------------------------------------------------
    public void setKey(int id){
        iData=id;
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////

package DoubleEndedLinkedList;

public class DoubleEndedList {
    private Link first;        //ref to first link
    private Link last;         //ref to last link
    //----------------------------------------------------------
    public DoubleEndedList(){    //Cpnstructor 
        first=null;
        last=null;               //no link to list yet 
    }
    //----------------------------------------------------------
    public boolean isEmpty(){    //true if no link
        return first==null;
    }
    //----------------------------------------------------------
    public void insertFirst(long dd){     //insert at frint of list 
        Link newLink=new Link(dd);        //make a new link
        
        if(isEmpty()){                   //if empty list 
            last=newLink;                //newLink<--- last 
        }
        newLink.next =first;            //newLink-->old first 
        first =newLink;
    }
    //----------------------------------------------------------
    public void insertLast(long dd){       //insert at the last of list 
        Link newLink=new Link(dd);         //make a new Link
        if(isEmpty())                      //if link is empty 
            first =newLink;                //first-->newLink 
        else
            last.next=newLink;             //old last ---->newLink
        last=newLink;                      //newLink<---last 
    }
    //----------------------------------------------------------
    public long deleteFirst(){            //delete first link
        long temp=first.dData;
        if(first.next==null)
            last=null;
        first=first.next;
        return temp;
    }
    //----------------------------------------------------------
    public void displayList(){
        System.out.print("List (first-->last):");
        Link current=first;    //start at the beginning
        while(current!=null){  //untill end of list 
            current.displayLink(); //print Data
            current=current.next;  //move to next link
        }
        System.out.println("");
    }
    //----------------------------------------------------------
}
/*
 --------------Double Ended List-------------------
A double ended list is similar to an ordinary linked list, but 
it has one additional feature: a reference to the last link as 
well as to first. The reference to the last link permits you to
insert a new link directly at the end of list as well as at the 
beginning, makes it suitable for certain situations tha a single
ended list can't handle it efficiently.
 */
package DoubleEndedLinkedList;

public class DoubleEndedListApp {
    public static void main(String args[]){
        DoubleEndedList theList=new DoubleEndedList();
        
        //insert at front 
        theList.insertFirst(22);
        theList.insertFirst(44);
        theList.insertFirst(66);
        
        //insert at rear 
        theList.insertLast(11);
        theList.insertLast(33);
        theList.insertLast(55);
        
        //Display the list 
        theList.displayList();
        
        //delete first two items 
        theList.deleteFirst();
        theList.deleteFirst();
        
        //Display list again,
        theList.displayList();
    }
}

/* 
OUTPUT 
List (first-->last):66 44 22 11 33 55 
List (first-->last):22 11 33 55 
*/
package DoubleEndedLinkedList;

public class Link {
    public long dData;    // data item
    public Link next;     // next link in list 
    //----------------------------------------------------------
    public Link(long d){   //Constructor
        dData =d;
    }
    //----------------------------------------------------------
    public void displayLink(){       //display this link
        System.out.print(dData+" ");
    }
    //----------------------------------------------------------
}

package DoublyLinkedList;

public class DoublyLinkedList {
    private Link first;
    private Link last;
    //--------------------------------------------------------------------------
    public DoublyLinkedList(){
        first=null;
        last=null;
    }
    //--------------------------------------------------------------------------
    public boolean isEmpty(){
        return first==null;
    }
    //--------------------------------------------------------------------------
    public void insertFirst(long dd){
        Link newLink=new Link(dd);
        if(isEmpty())
            last=newLink;
        else
            first.previous=newLink;
        newLink.next=first;
        first=newLink;
    }
    //--------------------------------------------------------------------------
    public void insertLast(long dd){
        Link newLink=new Link(dd);
        if(isEmpty())
            first=newLink;
        else
        {
            last.next=newLink;
            newLink.previous=last;
        }
        last=newLink;
    }
    //--------------------------------------------------------------------------
    public Link deleteFirst(){
        Link temp=first;
        if(first.next==null)
            last=null;
        else
            first.next.previous=null;
        first=first.next;
        return temp;
    }
    //--------------------------------------------------------------------------
    public Link deleteLast(){
        Link temp=last;
        if(first.next==null)
            first=null;
        else
            last.previous.next=null;
        last=last.previous;
        return temp;
    }
    //--------------------------------------------------------------------------
    public boolean insertAfter(long key,long dd){
        Link current =first;
        while(current.dData!=key){
            current=current.next;
            if(current==null)
                return false;
        }
        Link newLink=new Link(dd);
        if(current==last){
            newLink.next=null;
            last=newLink;
        }
        else{
            newLink.next=current.next;
            current.next.previous=newLink;
        }
        newLink.previous=current;
        current.next=newLink;
        return true;
    }
    //--------------------------------------------------------------------------
    public Link deleteKey(long key){
        Link current=first;
        while(current.dData!=key){
            current=current.next;
            if(current==null)
                return null;
        }
        if(current==first)
            first=current.next;
        else
            current.next.previous=current.next;
        if(current==last)
            last=current.previous;
        else
            current.next.previous=current.previous;
        return current;
    }
    //--------------------------------------------------------------------------
    public void displayForward(){
        System.out.println("(first-->last):");
        Link current=first;
        while(current!=null){
            current.displayLink();
            current=current.next;
        }
        System.out.println("");
    }
    //--------------------------------------------------------------------------
    public void displayBackwards(){
        System.out.print("List(last-->first):");
        Link current =last;
        while(current !=null){
            current.displayLink();
            current=current.previous;
        }
        System.out.println("");
    }
    //--------------------------------------------------------------------------
}
/*
 Demonstrates Double Linked List 
 */
package DoublyLinkedList;

public class DoublyLinkedListApp {
    public static void main(String args[]){
        DoublyLinkedList theList=new DoublyLinkedList();
        
        theList.insertFirst(22);
        theList.insertFirst(44);
        theList.insertFirst(66);
        
        theList.insertLast(11);
        theList.insertLast(33);
        theList.insertLast(55);
        
        theList.displayForward();
        theList.displayBackwards();
        
        theList.deleteFirst();
        theList.deleteLast();
        theList.deleteKey(11);
        
        theList.insertAfter(22,77);
        theList.insertAfter(33,88);
        
        theList.displayForward();
                
    }
}
/*
OUTPUT:
(first-->last):
66 44 22 11 33 55 
List(last-->first):55 33 11 22 44 66 
(first-->last):
44 22 77 11 33 88 
*/
package DoublyLinkedList;

public class Link {
    public long dData;
    public Link next;
    public Link previous;
    //--------------------------------------------------------------------------
    public Link (long dd){
        dData=dd;
    }
    //--------------------------------------------------------------------------
    public void displayLink(){
        System.out.print(dData+" ");
    }
    //--------------------------------------------------------------------------
}

package QueueUsingLinkedList;

public class DoubleEndedList {
    private Link first;        //ref to first link
    private Link last;         //ref to last link
    //--------------------------------------------------------------------------
    public DoubleEndedList(){    //Constructor 
        first=null;
        last=null;               //no link to list yet 
    }
    //--------------------------------------------------------------------------
    public boolean isEmpty(){    //true if no link
        return first==null;
    }
    //--------------------------------------------------------------------------
    public void insertLast(long dd){     //insert at end of list 
        Link newLink=new Link(dd);        //make a new link
        
        if(isEmpty()){                   //if empty list 
            first= newLink;                //first---->newLink 
        }
        last.next = newLink;            //old last ----------> newLink
        last = newLink;                 //newLink<-----last
    }
    //--------------------------------------------------------------------------
    public long deleteFirst(){            //delete first link
        long temp=first.dData;
        if(first.next==null)
            last=null;
        first=first.next;
        return temp;
    }
    //----------------------------------------------------------
    public void displayList(){
        
        Link current=first;    //start at the beginning
        while(current!=null){  //untill end of list 
            current.displayLink(); //print Data
            current=current.next;  //move to next link
        }
        System.out.println("");
    }
    //----------------------------------------------------------
}


package QueueUsingLinkedList;

public class Link {
    public long dData;  // data item
    public Link next;     // next Link in list
    //----------------------------------------------------------------
    public Link(long dd){
        dData=dd;                     
    }
    //----------------------------------------------------------------
    public void displayLink(){
        System.out.print("{"+dData+", "+dData+"} ");
    }
}

package QueueUsingLinkedList;

public class LinkQueue {
    private DoubleEndedList theList;
    //--------------------------------------------------------------------------
    public LinkQueue(){
        theList= new DoubleEndedList();
    }
    //--------------------------------------------------------------------------
    public boolean isEmpty(){
        return theList.isEmpty();
    }
    //--------------------------------------------------------------------------
    public void insert(long j){
        theList.insertLast(j);
    }
    //--------------------------------------------------------------------------
    public long remove(){
        return theList.deleteFirst();
    }
    //--------------------------------------------------------------------------
    public void displayQueue(){
        System.out.print("Queue (front--->rear)");
        theList.displayList();
    }
    //--------------------------------------------------------------------------
}
/*
 Demonstrates queue implemented as double-ended list
 */
package QueueUsingLinkedList;

public class LinkQueueMain {
    public static void main(String[] args) {
        LinkQueue theQueue=new LinkQueue();

        theQueue.insert(20);
        theQueue.insert(40);
        
        theQueue.displayQueue();
        
        theQueue.insert(60);
        theQueue.insert(80);
        
        theQueue.displayQueue();
        
        theQueue.remove();
        theQueue.remove();
        
        theQueue.displayQueue();
               
    }
}

package SimpleLinkedListApp;

public class Link {
    public int iData;     //Data item (key)
    public double dData;  // data item
    public Link next;     // next Link in list
    
    //----------------------------------------------------------------
    public Link(int id,double dd){
        iData=id;                     //initialize data
        dData=dd;                     //('next' is automatically set to null)
    }
    //----------------------------------------------------------------
    public void displayLink(){
        System.out.print("{"+iData+", "+dData+"} ");
    }
}//end class Link

package SimpleLinkedListApp;

public class LinkedList {
   private Link first;          //ref to first link on List
   
   //----------------------------------------------------------------
   public LinkedList(){         // Constructor 
       first=null;
   }
   //----------------------------------------------------------------
   public boolean isEmpty(){
       return (first==null);    
   }
   //----------------------------------------------------------------
   public void insertFirst(int id,double dd){
       Link newLink =new Link(id,dd);         //newLink --> old first 
       newLink.next=first;                    //first --> newLink
       first=newLink;
   }
   //----------------------------------------------------------------
   public Link deleteFirst(){                 //delete first item
       Link temp=first;                       //save reference ot link 
       first =first.next;                     //delete it : first -->old next
       return temp;                           //return deleted link 
   }
   //----------------------------------------------------------------
   public void displayList(){
       System.out.print("List (first-->Last):");
       Link current =first ;              //start at begining of list 
       while (current !=null){
           current.displayLink();        //print data 
           current=current.next;         // move to next link
       }
       System.out.println("");
   }
   //----------------------------------------------------------------
   public Link find(int key){           //Find link with given key 
       Link current=first ;            //Start at first 
       while (current.iData!=key){     //while no match
           if(current.next==null)   
               return null;        //if end of list , did'nt got link
           else
               current=current.next;
       }      
       return current;
   }
   //----------------------------------------------------------------
   public Link delete(int key){           //Delete the key with given key 
       Link current =first ;              //search foe the link
       Link previous=first;
       while (current.iData!=key){
           if(current.next==null)
               return null;            //did'nt fint it
           else{
               previous=current;      //got to next link
               current=current.next ;
           }
       }                              //found it 
       if(current==first)             //if first link
           first=first.next;          //change first 
       else
           previous.next=current.next;
       return current;   
   }
 //----------------------------------------------------------------  
}

package SimpleLinkedListApp;

public class LinkedListApp {

    public static void main(String[] args) {
        // TODO code application logic here
        
        LinkedList theList=new LinkedList();       //make new List
        
        theList.insertFirst(22, 2.99);             //insert four items 
        theList.insertFirst(44, 4.99);
        theList.insertFirst(66, 6.99);
        theList.insertFirst(88, 8.99);
        
        theList.displayList(); 
        
        //Finding a link 
        Link f =theList.find(44);
        if(f!=null)
            System.out.println("Found link with key :"+f.iData);
        else
            System.out.println("Can't find the link");
        
        //Deleting a Link
        Link d=theList.delete(66);
        if(d!=null)
            System.out.println("Deleted link with key "+d.iData);
        else
            System.out.println("Can't delete the link");
        
        //Displaying the List
        theList.displayList();
        
        while(!theList.isEmpty()){
            Link aLink=theList.deleteFirst();      //delete link
            System.out.print("Deleted");           //display it 
            aLink.displayLink();
            System.out.println("");
        }
        theList.displayList();
    }
}

/*

OUTPUT :

List (first-->Last):{88, 8.99} {66, 6.99} {44, 4.99} {22, 2.99} 
Found link with key :44
Deleted link with key 66
List (first-->Last):{88, 8.99} {44, 4.99} {22, 2.99} 
Deleted{88, 8.99} 
Deleted{44, 4.99} 
Deleted{22, 2.99} 
List (first-->Last):
*/
package SortedList;

public class Link {
    public long dData;
    public Link next;
    //--------------------------------------------------------------------------
    public Link(long dd){
        dData=dd;
    }
    //--------------------------------------------------------------------------
    public void displayLink(){
        System.out.print(dData+" ");
    }
    //--------------------------------------------------------------------------
}

package SortedList;

public class SortedList {
    private Link first;
    //--------------------------------------------------------------------------
    public SortedList(){
        first=null;
    }
    //--------------------------------------------------------------------------
    public boolean isEmpty(){
        return first==null;
    }
    //--------------------------------------------------------------------------
    public void insert(long key){
        Link newLink=new Link(key);
        Link previous =null;
        Link current =first;
        
        while(current!=null && key>current.dData){
            previous=current;
            current=current.next;
        }
        if(previous==null)
            first=newLink;
        else
            previous.next=newLink;
        newLink.next=current;
    }
    //--------------------------------------------------------------------------
    public Link remove(){
        Link temp=first;
        first=first.next;
        return temp;
    }
    //--------------------------------------------------------------------------
    public void displayList(){
        System.out.print("List (first-->last):");
        Link current =first;
        while(current!=null){
            current.displayLink();
            current=current.next;
        }
        System.out.println("");
    }
    //--------------------------------------------------------------------------
}

package SortedList;

public class SortedListApp {
    public static void main(String args[]){
        SortedList theSortedList=new SortedList();
        theSortedList.insert(20);
        theSortedList.insert(40);
        
        theSortedList.displayList();
        
        theSortedList.insert(10);
        theSortedList.insert(30);
        theSortedList.insert(50);
        
        theSortedList.remove();
        
        theSortedList.displayList();
        
    }
}


/* 
OUTPUT :

List (first-->last):20 40 
List (first-->last):20 30 40 50 
*/
package StackUsingLinkedList;

public class Link {
    public long dData;
    public Link next;
    //--------------------------------------------------------------------------
    public Link(long dd){
        dData=dd;
    }
    //--------------------------------------------------------------------------
    public void displayLink(){
        System.out.print(dData+" ");
    }
    //--------------------------------------------------------------------------
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package StackUsingLinkedList;

/**
 *
 * @author parab
 */
public class LinkStack {
    private LinkedList theList;
    //--------------------------------------------------------------------------
    public LinkStack(){
        theList=new LinkedList();
    }
    //--------------------------------------------------------------------------
    public void push(long j){
        theList.insertFirst(j);
    }
    //--------------------------------------------------------------------------
    public long pop(){
        return theList.deleteFirst();
    }
    //--------------------------------------------------------------------------
    public boolean isEmpty(){
        return (theList.isEmpty());
    }
    //--------------------------------------------------------------------------
    public void displayStack(){
        System.out.println("Stack(top--->bottom) :");
        theList.displayList();
    }
    //--------------------------------------------------------------------------
}
/*
 Demonstrated a stack implemented as a list 
 */
package StackUsingLinkedList;

public class LinkStackMain {
    public static void main(String args[]){
        LinkStack theStack=new LinkStack();
        
        theStack.push(20);
        theStack.push(40);
        
        theStack.displayStack();
        
        theStack.push(60);
        theStack.push(80);
        
        theStack.pop();
        theStack.pop();
        
        theStack.displayStack();
    }
}
/* 
OUTPUT :

Stack(top--->bottom) :
40 20 
Stack(top--->bottom) :
40 20 
*/
package StackUsingLinkedList;

public class LinkedList {
    private Link first;
    //--------------------------------------------------------------------------
    public LinkedList(){
        first=null;
    }
    //--------------------------------------------------------------------------
    public boolean isEmpty(){
        return first==null;
    }
    //--------------------------------------------------------------------------
    public void insertFirst(long dd){
        Link newLink=new Link(dd);
        newLink.next=first;        //newLink--->old first
        first=newLink;             //first--->newLink
    }
    //--------------------------------------------------------------------------
    public long deleteFirst(){
        Link temp=first;           //save reference to link
        first =first.next;         //delete it; first -->old next 
        return temp.dData;         //return deleted link
    }
    //--------------------------------------------------------------------------
    public void displayList(){
        Link current=first;
        while(current!=null){
            current.displayLink();
            current=current.next;
        }
        System.out.println("");
    }
    //--------------------------------------------------------------------------
}

package PriorityQueue;

public class PriorityQueue {
    //array in sorted order, from max at 0 to min at size-1
    private int maxSize;
    private long[] queArray;
    private int nItems;
    //--------------------------------------------------------------------------
    public PriorityQueue(int s){
        maxSize=s;
        queArray =new long[maxSize];
        nItems=0;
    }
    //--------------------------------------------------------------------------
    public void insert(long item){
        int i;
        if(nItems==0)
            queArray[nItems++]=item;
        else{
            for(i=nItems-1;i>=0;i--){
                if(item>queArray[i])
                    queArray[i+1]=queArray[i];
                else
                    break;
            }
            queArray[i+1]=item;
            nItems++;
        }
    }
    //--------------------------------------------------------------------------
    public long remove(){
        return queArray[--nItems];
    }
    //--------------------------------------------------------------------------
    public long peekMin(){
        return queArray[nItems-1];
    }
    //--------------------------------------------------------------------------
    public boolean isEmpty(){
        return (nItems==0);
    }
    //--------------------------------------------------------------------------
    public boolean isFull(){
        return (nItems==maxSize);
    }
    //--------------------------------------------------------------------------
}

package PriorityQueue;

import sun.security.pkcs11.P11TlsKeyMaterialGenerator;

public class PriorityQueueApp {
    public static void main(String args[]){
        PriorityQueue thePQ=new PriorityQueue(5);
        
        thePQ.insert(30);
        thePQ.insert(50);
        thePQ.insert(10);
        thePQ.insert(40);
        thePQ.insert(20);
        
        System.out.println("PriorityQueue: ");
        while(!thePQ.isEmpty()){
            long item=thePQ.remove();
            System.out.print(item+" ");
        }
        System.out.println("");
    }
}

package SimpleQueue;

public class Queue {
    private int maxSize;
    private long[] queArray;
    private int front;
    private int rear;
    //------------------------------------------------------------
    public Queue(int s){
        maxSize=s+1;
        queArray=new long[maxSize];
        front=0;
        rear=-1;
    }
    //------------------------------------------------------------
    public void insert(long i){
        if(rear==maxSize-1)
            rear=-1;
        queArray[++rear]=i;
    }
    //------------------------------------------------------------
    public long remove(){
        long temp=queArray[front++];
        if(front==maxSize)
            front=0;
        return temp;
    }
    //------------------------------------------------------------
    public long peekFront(){
        return queArray[front];
    }
    //------------------------------------------------------------
    public boolean isEmpty(){
        return (rear+1==front || (front+maxSize-1==rear));
    }
    //------------------------------------------------------------
    public boolean isFull(){
        return (rear+2==front ||(front+maxSize-2==rear));
    }
    //------------------------------------------------------------
    public int size(){
        if(rear>=front)
            return rear-front+1;
        else
            return (maxSize-front)+(rear+1);
    }
    //------------------------------------------------------------
}

package SimpleQueue;

public class QueueApp {

    public static void main(String[] args) {
        // TODO code application logic here
        Queue theQueue=new Queue(5);
        
        theQueue.insert(10);
        theQueue.insert(20);
        theQueue.insert(30);
        theQueue.insert(40);
        
        theQueue.remove();
        theQueue.remove();
        theQueue.remove();
        
        theQueue.insert(50);
        theQueue.insert(60);
        theQueue.insert(70);
        theQueue.insert(80);
        
        while(!theQueue.isEmpty()){
            long n =theQueue.remove();
            System.out.print(n+"");
            System.out.print(" ");
        }
        System.out.println("");
    }
}

package Stacks;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class ReverseString {
    private String input;
    private String output;
    //--------------------------------------------------------------------------
    public ReverseString(String in){
        input=in;
    }
    //--------------------------------------------------------------------------
    public String doRev(){
        int stackSize=input.length();
        StackX theStack=new StackX(stackSize);
        
        for(int j=0;j<input.length();j++){
            char ch=input.charAt(j);
            theStack.push(ch);
        }
        output=" ";
        while(!theStack.isEmpty()){
            char ch= theStack.pop();
            output=output+ch;
        }
        return output;
    }
    //--------------------------------------------------------------------------
    public static String getString()throws IOException{
        InputStreamReader isr=new InputStreamReader(System.in);
        BufferedReader br=new BufferedReader(isr);
        String s =br.readLine();
        return s;        
    }
    //--------------------------------------------------------------------------
    public static void main(String args[])throws IOException{
        String input,output;
        
            System.out.print("Enter a String :");
            System.out.flush();
            input=getString();
            if(!input.equals("")){
            ReverseString theReverser=new ReverseString(input);
            output=theReverser.doRev();
            System.out.println("Reversed String :"+output);
            }
    }
}

/*
OUTPUT :

Enter a String :String java
Reversed String : avaj gnirtS
*/

package Stacks;

public class StackApp {
    public static void main(String[] args) {
        // TODO code application logic here
        StackX theStack=new StackX(10);
        theStack.push('A');
        theStack.push('B');
        theStack.push('C');
        theStack.push('D');
        theStack.push('E');
        
        System.out.println("Peek :"+theStack.peek());
        
        while(!theStack.isEmpty()){
            char value=theStack.pop();
            System.out.print(""+value);
            System.out.print(" ");
        }
        System.out.println(""); 
    }
}

package Stacks;
import java.io.*;

public class StackX {
    private int maxSize;
    private char[] stackArray;
    private int top;
    //--------------------------------------------------------------------------
    //constructor
    public StackX(int s){
        maxSize=s;
        stackArray=new char[maxSize];
        top=-1;
    }
    //--------------------------------------------------------------------------
    //push items on stack
    public void push(char j){
        stackArray[++top]=j;
        //put item on top pf stack
        //increment top and then insert 
    }
    //--------------------------------------------------------------------------
    //pop item from stack
    public char pop(){
        return stackArray[top--];
    }
    //--------------------------------------------------------------------------
    //take item feom the top
    //acess item and decrement the top
    //Find peek
    public char peek(){
        return stackArray[top];
    }
    //--------------------------------------------------------------------------
    //True if it empty 
    public boolean isEmpty(){
        return (top==-1);
    }
    //--------------------------------------------------------------------------
    //Check if stack is full
    public boolean isFull(){
        return (top==maxSize-1);
    }
    //--------------------------------------------------------------------------
}

package BinaryTree;

public class Node {
    public int iData;
    public double dData;
    public Node leftChild;
    public Node rightChild;
    //--------------------------------------------------------------------------
    public void disaplayNode(){
        System.out.print("{ "+iData+", "+dData+" }");
    }
    //--------------------------------------------------------------------------
}

package BinaryTree;

import java.util.Stack;

public class Tree {
    private Node root;
    //--------------------------------------------------------------------------
    public Tree(){
        root=null;
    }
    //--------------------------------------------------------------------------
    public Node find(int key){
        Node current =root;
        while(current.iData!=key){
            if(key<current.iData)
                current=current.leftChild;
            else
                current=current.rightChild;
            if(current==null)
                return null;
        }
        return current;
    }
    //--------------------------------------------------------------------------
    public void insert(int id,double dd){
        Node newNode =new Node();
        newNode.iData=id;
        newNode.dData=dd;
        if(root==null)
            root=newNode;
        else{
            Node current=root;
            Node parent;
            while(true){
                parent=current;
                if(id<current.iData){
                    current=current.leftChild;
                    if(current==null){
                        parent.leftChild=newNode;
                        return;
                    }
                }
                else{
                    current=current.rightChild;
                    if(current==null){
                        parent.rightChild=newNode;
                        return;
                    }        
                }
            }
        }
    }
    //--------------------------------------------------------------------------
    public boolean delete(int key){
        Node current=root;
        Node parent=root;
        boolean isLeftChild=true;
        
        while(current.iData!=key){
            parent=current;
            if(key<current.iData){
                isLeftChild=true;
                current=current.leftChild;
            }
            else{
                isLeftChild=false;
                current=current.rightChild;
            }
            if(current==null)
                return false;
        }
            if(current.leftChild==null && current.rightChild==null){
                if(current==root)
                    root=null;
                else if(isLeftChild)
                    parent.leftChild=null;
                else
                    parent.rightChild=null;
            }
            
            else if(current.rightChild==null)
                if(current==root)
                    root=current.leftChild;
                else if(isLeftChild)
                    parent.leftChild=current.leftChild;
            
                else if(current.leftChild==null)
                    if(current==root)
                        root=current.rightChild;
                    else if(isLeftChild)
                        parent.leftChild=current.rightChild;
                    else
                        parent.rightChild=current.rightChild;
            
            else{
                 Node successor=getSuccessor(current);   
                 if(current==root)
                     root=successor;
                 else if(isLeftChild)
                     parent.leftChild=successor;
                 else
                     parent.rightChild=successor;
                 
                 successor.leftChild=current.leftChild;
            }
        
        return true;
    }
    //--------------------------------------------------------------------------
    private Node getSuccessor(Node delNode){
        Node successorParent =delNode;
        Node successor=delNode;
        Node current=delNode.rightChild;
        while(current!=null){
            successorParent=successor;
            successor=current;
            current=current.leftChild;
        }
        if(successor!=delNode.rightChild){
            successorParent.leftChild=successor.rightChild;
            successor.rightChild=delNode.rightChild;
        }
        return successor;
    }
    //--------------------------------------------------------------------------
    public void traverse(int traverseType){
        switch(traverseType){
            case 1 : System.out.print("\n Preorder Traversal :");
                     preOrder(root);
                     break;
            case 2 : System.out.print("\n Inorder Traversal :");
                     inOrder(root);
                     break; 
            case 3 : System.out.print("\n Postorder Traversal :");
                     postOrder(root);
                     break;          
        }
        System.out.println();
    }
    //--------------------------------------------------------------------------
    private void preOrder(Node localroot){
        if(localroot!=null){
            System.out.print(localroot.iData+" ");
            preOrder(localroot.leftChild);
            preOrder(localroot.rightChild);
        }
    }
    //--------------------------------------------------------------------------
    private void inOrder(Node localroot){
        if(localroot!=null){
        inOrder(localroot.leftChild);
        System.out.print(localroot.iData+" ");
        inOrder(localroot.rightChild);
        }
    }
    //--------------------------------------------------------------------------
    private void postOrder(Node localroot){
        if(localroot!=null){
            postOrder( localroot.leftChild);
            postOrder(localroot.rightChild);
            System.out.print(localroot.iData+" ");
        }
    }
    //--------------------------------------------------------------------------
    public void displayTree(){
        Stack globalStack=new Stack();
        globalStack.push(root);
        int nBlanks=32;
        boolean isRowEmpty=false;
        System.out.println(
                "..............................................................."
        );
        while(isRowEmpty==false){
            Stack localStack=new Stack();
            isRowEmpty=true;
            
            for(int j=0;j<nBlanks;j++)
                System.out.print(' ');
            
            while(globalStack.isEmpty()==false){
                Node temp=(Node) globalStack.pop();
                if(temp!=null){
                    System.out.print(temp.iData);
                    localStack.push(temp.leftChild);
                    localStack.push(temp.rightChild);
                    
                    if(temp.leftChild!=null || temp.rightChild!=null)
                        isRowEmpty=false;
                }
                else{
                    System.out.print("--");
                    localStack.push(null);
                    localStack.push(null);
                }
                for(int j=0;j<nBlanks*2-2;j++)
                    System.out.print(' ');
            }
            System.out.println();
            nBlanks/=2;
            while(localStack.isEmpty()==false)
                globalStack.push(localStack.pop());
        }
        System.out.println(
                "..............................................................."
        );
    }
    //--------------------------------------------------------------------------
}

package BinaryTree;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class TreeApp {
    public static void main(String args[]) throws IOException{
        int value;
        Tree theTree=new Tree();
        
        theTree.insert(50, 1.5);
        theTree.insert(25, 1.2);
        theTree.insert(75, 1.7);
        theTree.insert(12, 1.5);
        theTree.insert(37, 1.2);
        theTree.insert(43, 1.7);
        theTree.insert(30, 1.5);
        theTree.insert(33, 1.2);
        theTree.insert(87, 1.7);
        theTree.insert(93, 1.5);
        theTree.insert(97, 1.5);
        
        while(true){
            System.out.print("Enter first letter of show, ");
            System.out.print("insert, find, delete or traverse : ");
            int choice =getChar();
            switch(choice){
                case 's': theTree.displayTree();
                          break;
                case 'i': System.out.print("Enter value to insert :");
                          value=getInt();
                          theTree.insert(value, value+0.9);
                          break;
                case 'f': System.out.print("Enter value to find :");
                          value =getInt();
                          Node found=theTree.find(value);
                          if(found!=null){
                              System.out.print("Found: ");
                              found.disaplayNode();
                              
                          }
                          else
                              System.out.print("Could not find");
                          System.out.println();
                          break;
                case 'd': System.out.print("Enter value to delete: ");
                          value=getInt();
                          boolean didDelete =theTree.delete(value);
                          if(didDelete)
                              System.out.print("Deleted "+value+'\n');
                          else
                              System.out.println("could not delete");
                          break;
                case 't': System.out.print("Enter type 1,2 or 3: ");
                          value=getInt();
                          theTree.traverse(value);
                          break;
                default: System.out.println("Invalid Entry !!!");          
            }
        }
    }
    //--------------------------------------------------------------------------
    public static String getString()throws IOException{
        InputStreamReader isr=new InputStreamReader(System.in);
        BufferedReader br =new BufferedReader(isr);
        String s=br.readLine();
        return s ;
    }
    //--------------------------------------------------------------------------
    public static char getChar() throws IOException{
        String s=getString();
        return s.charAt(0);
    }
    //--------------------------------------------------------------------------
    public static int getInt() throws IOException{
        String s =getString();
        return Integer.parseInt(s);
    }
    //--------------------------------------------------------------------------
}


/*
 Demonstrates basic bitwise operators in java .
 */
package BitwiseOperator;

public class BitLogic {
    public static void main(String args[]){
        String binary[] = {"0000", "0001", "0010", "0011", "0100", "0101", "0110", "0111",
                           "1000", "1001", "1010", "1011", "1100", "1101", "1110", "1111"};
         int a = 3; // 0 + 2 + 1 or 0011 in binary
         int b = 6; // 4 + 2 + 0 or 0110 in binary
         int c = a | b; //
         int d = a & b;
         int e = a ^ b;
         int f = (~a & b) | (a & ~b);
         int g = ~a & 0x0f;
         
            System.out.println(" a : "+binary[a]);
            System.out.println(" b : "+binary[b]);
            System.out.println(" a|b : "+binary[c]);
            System.out.println(" a&b : "+binary[d]);
            System.out.println(" a^b : "+binary[e]);
            System.out.println("~a&b|a&~b : "+binary[f]);
            System.out.println(" ~a  : "+binary[g]);
    }
}
/*OUTPUT

 a : 0011
 b : 0110
 a|b : 0111
 a&b : 0010
 a^b : 0101
~a&b|a&~b : 0101
 ~a  : 1100

*/
/*
 Demonstrates a program to update a 32bit number , N into M from i and j positions.
 M becomes a substring of N located at i and starting at j.
 */
package BitwiseOperator;

public class BitUpdation {
    public static void main(String args[]){
       // byte n=10000000000;//
        
    }
}

package BitwiseOperator;

public class BitwiseOperatorCompoundAssignments {
    public static void main(String args[]){
        int a=1;
        int b=2;
        int c=3;
        
        a<<=2;
        b|=4;
        c>>=1;
        
        System.out.println("a : "+a+"  b : "+b+"  c : "+c);
    }
}
/*OUTPUT
a : 4  b : 6  c : 1
*//*
 Left Shifting a byte value 
 */
package BitwiseOperator;

public class ByteLeftShift {
    public static void main(String args[]){
        byte a=64, b;
        int i;
        
        i=a<<2;
        b=(byte) (a<<2);
        
        System.out.println("Original value of a : "+a);
        System.out.println("i and b "+i+" "+b);
    }
}
/*
OUTPUT
Original value of a : 64
i and b 256 0
*/

package BitwiseOperator;
// Unsigned shifting a byte value.
class ByteUShift {
static public void main(String args[]) {
char hex[] = {
'0', '1', '2', '3', '4', '5', '6', '7',
'8', '9', 'a', 'b', 'c', 'd', 'e', 'f'
};
byte b = (byte) 0xf1;
byte c = (byte) (b >> 4);
byte d = (byte) (b >>> 4);
byte e = (byte) ((b & 0xff) >> 4);
System.out.println("b = 0x"+ hex[(b >> 4) & 0x0f]+ hex[b & 0x0f]);
System.out.println("b >> 4 = 0x"+ hex[(c >> 4) & 0x0f]+ hex[c & 0x0f]);
System.out.println("b >>> 4 = 0x"
+ hex[(d >> 4) & 0x0f]+ hex[d & 0x0f]);
System.out.println("(b &0xff) >> 4 = 0x"+ hex[(e >> 4) & 0x0f]+ hex[e & 0x0f]);
}
}
/*
OUTPUT
b = 0xf1
b >> 4 = 0xff
b >>> 4 = 0xff
(b &0xff) >> 4 = 0x0f
*/

/*
 To check whether given number is prime or not
 */
package PrimeNumbersAndFactorization;

import java.util.Scanner;

public class IsPrime {
    //--------------------------------------------------------------------------
    public static void main(String[] args) {
        Scanner scn =new Scanner(System.in);
        System.out.print("Enter a Number to check : ");
        int num=scn.nextInt();
        if(isPrime(num)){
            System.out.println(num+" is a prime number.");
        }
        else{
            System.out.println(num+" is not a prime number.");
        }
    }
    //--------------------------------------------------------------------------
    public static boolean isPrime(int num){
        //corner cases
        if(num<=2) return false;
        if(num<=3) return true;
        
        if(num%2==0 || num%3==0) return false;
        
        for(int i=5;i*i<=num;i+=6){
            if(num%i==0 || num%(i+2)==0)
                return false;
        }
        return true;
    }
    //--------------------------------------------------------------------------
}

/* 
OUTPUT 
Enter a Number to check : 11
11 is a prime number.
*/
/*
 Printing all prime numbers from 1 to given n.
 */
package PrimeNumbersAndFactorization;

import java.util.Scanner;

public class SieveOfEratosthenes {
        //--------------------------------------------------------------------------
    public static void main(String args[]){
        Scanner scn =new Scanner(System.in);
        System.out.print("Enter a number : ");
        int num=scn.nextInt();
        sieveOfEratosthenes(num);
    }
    //--------------------------------------------------------------------------
    private static void sieveOfEratosthenes(int num){
        boolean prime[]=new boolean[num+1];
        for(int i=0;i<num;i++)
            prime[i]=true;
        
           for(int p = 2; p*p <=num; p++)
        {
            // If prime[p] is not changed, then it is a prime
            if(prime[p] == true)
            {
                // Update all multiples of p
                for(int i = p*2; i <= num; i += p)
                    prime[i] = false;
            }
        }
         
        // Print all prime numbers
        for(int i = 2; i <= num; i++)
        {
            if(prime[i] == true)
                System.out.print(i + " ");
        }
    }
    //--------------------------------------------------------------------------
}
/*
OUTPUT
Enter a number : 50
2 3 5 7 11 13 17 19 23 29 31 37 41 43 47
*//*
PROBLEM : 
The ratio of boys to girls for babies born in Russia is . If there is  child 
born per birth, what proportion of Russian families with exactly  children will
have at least  boys?

Write a program to compute the answer using the above parameters.
Then print your result, rounded to a scale of  decimal places (i.e.,  format).
 */
package Statistics;
////////////////////////////////////////////////////////////////////////////////
public class BinomialDistribution {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        double ratio=1.09;
        double p=ratio/(ratio+1);
        int n=6;
        
        double result=0;
        for(int x=3;x<=n;x++){
            result=result+binomial(x,n,p);
        }
        System.out.format("%.3f", result);
    }
    //--------------------------------------------------------------------------
    public static Double binomial(int x,int n, double p){
        if(p<0 || p>1 || n<0 || x<0 || x>n){
            return null;
        }
        return combinations(n,x)*Math.pow(p, x)*Math.pow(1-p, n-x);
    }
    //--------------------------------------------------------------------------
    private static Long combinations(int n,int x){
        if(x<0 || n<0 || x>n){
            return null;
        }
        return factorial(n)/(factorial(x)*factorial(n-x));
    }
    //--------------------------------------------------------------------------
    private static Long factorial(int a){
        if(a<0){
            return null;
        }
        long result=1;
        while(a>0){
            result*=a--;
        }
        return result;
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
/*
OUTPUT :
0.696
*/
package Statistics;
////////////////////////////////////////////////////////////////////////////////
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
////////////////////////////////////////////////////////////////////////////////
public class CalMeanMedianMode {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        Scanner scn=new Scanner(System.in);
        System.out.print("Enter number of elements : ");
        int numofElems=scn.nextInt();
        
        OrdArray oa=new OrdArray(numofElems);
        
        System.out.println("Enter array value : ");
        int sum=0;
        for(int i=0;i<numofElems;i++){
            int num=scn.nextInt();
            oa.insert(num);
            sum+=num;
        }
            
        oa.display();
        System.out.println("Mean :"+oa.mean(sum));
        System.out.println("Median : "+oa.median());
        System.out.println("Mode : "+oa.mode());
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
class OrdArray{
    private int a[];
    private int nELems;
    //--------------------------------------------------------------------------
    public OrdArray(int maxSize){
        a=new int[maxSize];
        nELems=0;
    }
    //--------------------------------------------------------------------------
    public int size(){
        return nELems;
    }
    //--------------------------------------------------------------------------
    public void insert(int value){
        int j;
        for(j=0;j<nELems;j++)
            if(a[j]>value)
                break;
        for(int k=nELems;k>j;k--)
            a[k]=a[k-1];
        a[j]=value;
        nELems++;
    }
    //--------------------------------------------------------------------------
    public void display(){
        for(int i=0;i<nELems;i++)
            System.out.print(""+a[i]+" ");
        System.out.println("");
    }
    //--------------------------------------------------------------------------
    public double mean(int sum){
       // System.out.println(""+sum);
        return sum/nELems;
    }
    //--------------------------------------------------------------------------
    public double median(){
        if(nELems%2==0){
            double n=a[nELems/2]+a[(nELems/2)-1];
            //System.out.println(""+n);
            return n/2;
        }
        else{
            return (double)a[nELems/2];
        }
    }
    //--------------------------------------------------------------------------
    public int mode(){
        int mode=a[0];
        int maxFreq=0;
        Map<Integer,Integer> modeMap=new HashMap<Integer, Integer>();
        
        for(int num:a){
            if(modeMap.containsKey(num)){
                int freq=modeMap.get(num)+1;
                modeMap.put(num, freq);
                if(freq>maxFreq){
                   maxFreq=freq;
                   mode=num;
                }     
            }
            else{
                modeMap.put(num,1);
            }
        }
        return mode; 
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
/*
PROBLEM :
A large elevator can transport a maximum of 9800 pounds. Suppose a load of cargo 
containing 49 boxes must be transported via the elevator. The box weight of this 
type of cargo follows a distribution with a mean of 205 pounds and a 
standard deviation of 15 pounds. Based on this information, what is the 
probability that all 49 boxes can be safely loaded into the freight elevator 
and transported?
 */
package Statistics;
////////////////////////////////////////////////////////////////////////////////
public class CentralLimitTheoremI {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        double mean=205;
        double std=15;
        double maxWgt=9800;
        int nBox=49;
        
        double sampleMean=nBox*mean;
        double sampleStd=Math.sqrt(nBox)*std;
        
        System.out.format("%.4f", commulativeDistFunc(sampleMean, sampleStd, maxWgt));
    }
    //--------------------------------------------------------------------------
    public static double commulativeDistFunc(double m, double s, double x){
        double parameter=(x-m)/(s*Math.sqrt(2));
        return 0.5*(1+erf(parameter));
    }
    //--------------------------------------------------------------------------
    /* Source: http://introcs.cs.princeton.edu/java/21function/ErrorFunction.java.html */
    // fractional error in math formula less than 1.2 * 10 ^ -7.
    // although subject to catastrophic cancellation when z in very close to 0
    // from Chebyshev fitting formula for erf(z) from Numerical Recipes, 6.2
     public static double erf(double z) {
        double t = 1.0 / (1.0 + 0.5 * Math.abs(z));
        // use Horner's method
        double ans = 1 - t * Math.exp( -z*z   -   1.26551223 +
                                            t * ( 1.00002368 +
                                            t * ( 0.37409196 + 
                                            t * ( 0.09678418 + 
                                            t * (-0.18628806 + 
                                            t * ( 0.27886807 + 
                                            t * (-1.13520398 + 
                                            t * ( 1.48851587 + 
                                            t * (-0.82215223 + 
                                            t * ( 0.17087277))))))))));
        if (z >= 0) return  ans;
        else        return -ans;
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
/*
OUTPUT :
0.010
*//*
PROBLEM :
The number of tickets purchased by each student for the University X vs. 
University Y football game follows a distribution that has a mean of 2.4 and a 
standard deviation of2.0.

A few hours before the game starts, 100 eager students line up to purchase 
last-minute tickets. If there are only 250 tickets left, what is the probability 
that all 100 students will be able to purchase tickets?
 */
package Statistics;
////////////////////////////////////////////////////////////////////////////////
public class CentralLimitTheoremII {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        double ticketsLeft = 250;
        int    nTickts = 100;
        double mean = 2.4;
        double std = 2;

        /* Formulas are from problem's tutorial */
        double samplesMean = nTickts * mean;
        double samplesSTD  = Math.sqrt(nTickts) * std;

        System.out.format("%.4f", commulativeDistFunc(samplesMean, samplesSTD, ticketsLeft));
    }
    //--------------------------------------------------------------------------
    public static double commulativeDistFunc(double m, double s, double x){
        double parameter=(x-m)/(s*Math.sqrt(2));
        return 0.5*(1+erf(parameter));
    }
    //--------------------------------------------------------------------------
    /* Source: http://introcs.cs.princeton.edu/java/21function/ErrorFunction.java.html */
    // fractional error in math formula less than 1.2 * 10 ^ -7.
    // although subject to catastrophic cancellation when z in very close to 0
    // from Chebyshev fitting formula for erf(z) from Numerical Recipes, 6.2
     public static double erf(double z) {
        double t = 1.0 / (1.0 + 0.5 * Math.abs(z));
        // use Horner's method
        double ans = 1 - t * Math.exp( -z*z   -   1.26551223 +
                                            t * ( 1.00002368 +
                                            t * ( 0.37409196 + 
                                            t * ( 0.09678418 + 
                                            t * (-0.18628806 + 
                                            t * ( 0.27886807 + 
                                            t * (-1.13520398 + 
                                            t * ( 1.48851587 + 
                                            t * (-0.82215223 + 
                                            t * ( 0.17087277))))))))));
        if (z >= 0) return  ans;
        else        return -ans;
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
/*
OUTPUT :
0.6915
*//*
PROBLEM :
You have a sample of 100 values from a population with mean 500 and with 
standard deviation 80 . Compute the interval that covers the middle 95% of the 
distribution of the sample mean; in other words, compute A and B such that 
P(A<x<B)=0.95. Use the value of z=1.96. 
 */
package Statistics;
////////////////////////////////////////////////////////////////////////////////
public class CentralLimitTheoremIII {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        double mean   = 500;
        double std    = 80;
        int    n      = 100;
        double zScore = 1.96; 
        
        double marginOfError = zScore * std / Math.sqrt(n);

        System.out.format("%.2f%n", mean - marginOfError);
        System.out.format("%.2f%n", mean + marginOfError);
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
/*
OUTPUT :
484.32
515.68
*/
/*
PROBLEM :
The probability that a machine produces a defective product is 1/3. What is the 
probability that the  defect is found during the  inspection?
 */
package Statistics;
////////////////////////////////////////////////////////////////////////////////
import java.util.Scanner;
////////////////////////////////////////////////////////////////////////////////
public class GeometricDistribution {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        Scanner scn=new Scanner(System.in);
        int numerator=scn.nextInt();
        int denominator=scn.nextInt();
        int n=scn.nextInt();
        
        double p=(double)numerator/denominator;
        
        System.out.format("%.3f", geometricDistribution(n,p));
    }
    //--------------------------------------------------------------------------
    public static Double geometricDistribution(int n,double p){
        return Math.pow(1-p, n-1)*p;
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
/*
OUTPUT
0.066
*//*
PROBLEM :
The probability that a machine produces a defective product is 1/3. 
What is the probability that the 1st defect is found during the 
first 1st  inspections?
 */
package Statistics;
////////////////////////////////////////////////////////////////////////////////
import java.util.Scanner;
////////////////////////////////////////////////////////////////////////////////
public class GeometricDistributionII {
    //--------------------------------------------------------------------------
    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int numerator   = scan.nextInt();
        int denominator = scan.nextInt();
        int n           = scan.nextInt();
        scan.close();
        
        double p = (double) numerator / denominator;
        double result = 0;
        for (int i = 1; i <= 5; i++) {
            result += geometric(i, p);
        }
        System.out.format("%.3f", result);
    }
    //--------------------------------------------------------------------------
    private static double geometric (int n, double p) {
        return Math.pow(1 - p, n - 1) * p;
    }
    //--------------------------------------------------------------------------
    private static Long combinations(int n, int x) {
        if (n < 0 || x < 0 || x > n) {
            return null;
        }
        return factorial(n) / (factorial(x) * factorial(n - x));
    }
    //--------------------------------------------------------------------------
    private static Long factorial (int n) {
        if (n < 0) {
            return null;
        }
        long result = 1;
        while (n > 0) {
            result *= n--;
        }
        return result;
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
/*
OUTPUT :
0.868
*/

package Statistics;
////////////////////////////////////////////////////////////////////////////////
import com.sun.xml.internal.fastinfoset.util.ValueArray;
import java.util.Scanner;
////////////////////////////////////////////////////////////////////////////////
public class InterQuartileRange {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        Scanner scn=new Scanner(System.in);
        //System.out.print("Enter number of elements : ");
        int maxSize=scn.nextInt();
        
        int valArray[]=new int[maxSize];
        int freqArray[]=new int[maxSize];
        
        //System.out.println("Enter elements :");
        for(int i=0;i<maxSize;i++)
            valArray[i]=scn.nextInt();
        
        int totalSize=0;
        //System.out.println("Enter their frequencies : ");
        for(int i=0;i<maxSize;i++){
            freqArray[i]=scn.nextInt();
            totalSize+=freqArray[i];
        }
        
        
        //System.out.println("Total size : "+totalSize);
        
        OrdIQRArray oiqr=new OrdIQRArray(totalSize);
        
        for(int i=0;i<maxSize;i++)
            for(int j=0;j<freqArray[i];j++){
               // System.out.print("("+i+", "+j+")");
                oiqr.insert(valArray[i]);
            }
                
        //System.out.println("");
                
        oiqr.display();
        
        double Q1=0.0;
       int Q2=0;
       double  Q3=0.0;
       
       if(oiqr.size()%2==0){
           Q1=oiqr.calMedian(0,totalSize/2-1);
           Q2=((oiqr.getElem(totalSize/2))+(oiqr.getElem((totalSize/2)-1)))/2;
           Q3=oiqr.calMedian(totalSize/2, totalSize-1);
       }
       else{
           Q1=oiqr.calMedian(0,totalSize/2-1);
           Q2=oiqr.getElem((totalSize/2));
           Q3=oiqr.calMedian(totalSize/2+1, totalSize-1);
       }
       
       //System.out.println("[ Q1 : "+Q1+", Q2 : "+Q2+", Q3 : "+Q3+" ]");
       //System.out.println("Inter Quartile range : "+(Q3-Q1));
        System.out.println(""+(Q3-Q1));
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
class OrdIQRArray{
    private int a[];
    private int nELems;
    //--------------------------------------------------------------------------
    public OrdIQRArray(int maxSize) {
        a=new int[maxSize];
        nELems=0;
    }
    //--------------------------------------------------------------------------
    public int size(){
        return nELems;
    }
    //--------------------------------------------------------------------------
    public int getElem(int index){
        return a[index];
    }
    //--------------------------------------------------------------------------
    public void insert(int value){
       int i;
       for(i=0;i<nELems;i++)
           if(a[i]>value)
               break;
       for(int k=nELems;k>i;k--)
           a[k]=a[k-1];
       a[i]=value;
       nELems++;
    }
    //--------------------------------------------------------------------------
    public void display(){
        for(int i=0;i<nELems;i++)
            System.out.print(a[i]+" ");
        System.out.println("");
    }
    //--------------------------------------------------------------------------
    public int calMedian(int start,int end){
       // System.out.println("start : "+start+", end "+end);
        int diff=(end-start)+1;
        //System.out.println("diff "+diff);
        if(diff%2==0)
            return (a[(start+(diff/2))]+a[(start+(diff/2)-1)])/2;
        else
            return a[start+(diff/2)];
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
/*
PROBLEM :
In a certain plant, the time taken to assemble a car is a random variable, X, 
having a normal distribution with a mean of 20 hours and a standard deviation 
of 2 hours. 
What is the probability that a car can be assembled at this plant in:
1. Less than 19.5 hrs?
2. Between 20 and 22hrs?
 */
package Statistics;
////////////////////////////////////////////////////////////////////////////////
public class NormalDistribution {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        double mean=20;
        double std=2;
        System.out.format("%.3f%n",commulativeDistFunc(mean, std, 19.5));
        System.out.format("%.3f%n",(commulativeDistFunc(mean, std, 22)
                - commulativeDistFunc(mean, std, 20)));
    }
    //--------------------------------------------------------------------------
    public static double commulativeDistFunc(double m, double s, double x){
        double parameter=(x-m)/(s*Math.sqrt(2));
        return 0.5*(1+erf(parameter));
    }
    //--------------------------------------------------------------------------
    /* Source: http://introcs.cs.princeton.edu/java/21function/ErrorFunction.java.html */
    // fractional error in math formula less than 1.2 * 10 ^ -7.
    // although subject to catastrophic cancellation when z in very close to 0
    // from Chebyshev fitting formula for erf(z) from Numerical Recipes, 6.2
     public static double erf(double z) {
        double t = 1.0 / (1.0 + 0.5 * Math.abs(z));
        // use Horner's method
        double ans = 1 - t * Math.exp( -z*z   -   1.26551223 +
                                            t * ( 1.00002368 +
                                            t * ( 0.37409196 + 
                                            t * ( 0.09678418 + 
                                            t * (-0.18628806 + 
                                            t * ( 0.27886807 + 
                                            t * (-1.13520398 + 
                                            t * ( 1.48851587 + 
                                            t * (-0.82215223 + 
                                            t * ( 0.17087277))))))))));
        if (z >= 0) return  ans;
        else        return -ans;
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
/*
OUTPUT : 
0.401
0.341
*//*
PROBLEM :
The final grades for a Physics exam taken by a large group of students have a 
mean of 70 and a standard deviation of 10. If we can approximate the 
distribution of these grades by a normal distribution, what percentage of
the students:
1. Scored higher than 80 (i.e., have a grade > 80)?
2. Passed the test (i.e., have a grade > 60 )?
3. Failed the test (i.e., have a grade < 60)?
 */
package Statistics;
////////////////////////////////////////////////////////////////////////////////
public class NormalDistributionII {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        double mean = 70;
        double std  = 10;
            
        System.out.format("%.2f%n", 100 * (1 - commulativeDistFunc(mean, std, 80)));
        System.out.format("%.2f%n", 100 * (1 - commulativeDistFunc(mean, std, 60)));
        System.out.format("%.2f%n", 100 * commulativeDistFunc(mean, std, 60));
    }
    //--------------------------------------------------------------------------
    public static double commulativeDistFunc(double m, double s, double x){
        double parameter=(x-m)/(s*Math.sqrt(2));
        return 0.5*(1+erf(parameter));
    }
    //--------------------------------------------------------------------------
    /* Source: http://introcs.cs.princeton.edu/java/21function/ErrorFunction.java.html */
    // fractional error in math formula less than 1.2 * 10 ^ -7.
    // although subject to catastrophic cancellation when z in very close to 0
    // from Chebyshev fitting formula for erf(z) from Numerical Recipes, 6.2
     public static double erf(double z) {
        double t = 1.0 / (1.0 + 0.5 * Math.abs(z));
        // use Horner's method
        double ans = 1 - t * Math.exp( -z*z   -   1.26551223 +
                                            t * ( 1.00002368 +
                                            t * ( 0.37409196 + 
                                            t * ( 0.09678418 + 
                                            t * (-0.18628806 + 
                                            t * ( 0.27886807 + 
                                            t * (-1.13520398 + 
                                            t * ( 1.48851587 + 
                                            t * (-0.82215223 + 
                                            t * ( 0.17087277))))))))));
        if (z >= 0) return  ans;
        else        return -ans;
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
/*
OUTPUT :
15.87
84.13
15.87
*//*
PROBLEM :
Given two n-element data sets, X and Y, 
calculate the value of the Pearson correlation coefficient.
 */
package Statistics;
////////////////////////////////////////////////////////////////////////////////
import java.util.Scanner;
////////////////////////////////////////////////////////////////////////////////
public class PearsonCorrelationCoefficientI {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        Scanner scn =new Scanner(System.in);
        
        int maxSize=scn.nextInt();
        double xElems[]=new double[maxSize];
        double yElems[]=new double[maxSize];
        
        for(int i=0;i<maxSize;i++)
            xElems[i]=scn.nextDouble();
        
        for(int i=0;i<maxSize;i++)
            yElems[i]=scn.nextDouble();
        
        System.out.println(pearsonCorrCoff(xElems,yElems));
    }
    //--------------------------------------------------------------------------
    public static double pearsonCorrCoff(double x[],double y[]){
        return (covXY(x, y)/(x.length*calStdDeviation(x)*calStdDeviation(y)));
    }
    //--------------------------------------------------------------------------
    public static Double covXY(double x[],double y[]){
        if(x==null || y==null || x.length!=y.length)
            return null;
        
        double xMean=calMean(x);
        double yMean=calMean(y);
        double cov=0.0;
        for(int i=0;i<x.length;i++)
            cov+=((x[i]-xMean)*(y[i]-yMean));
        
        return cov;
    }
    //--------------------------------------------------------------------------
    public static Double calMean(double arr[]){
        if(arr ==null){
            return null;
        }
        double sum=0;
        for(double elem:arr)
            sum+=elem;
        return sum/arr.length;
    }
    //--------------------------------------------------------------------------
    public static Double calStdDeviation(double arr[]){
        if(arr==null)
            return null;
        
        double sum=0.0;
        double mean=calMean(arr);
        for(double elem:arr)
            sum+=Math.pow((elem-mean), 2);
        return Math.sqrt((sum/arr.length));
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
/*
OUTPUT :
10
10 9.8 8 7.8 7.7 7 6 5 4 2
200 44 32 24 22 17 15 12 8 4
0.6124721937208479
*//*
PROBLEM :
A random variable, X, follows Poisson distribution with mean of 2.5. 
Find the probability with which the random variable X is equal to 5.
 */
package Statistics;
////////////////////////////////////////////////////////////////////////////////
import java.util.Scanner;
////////////////////////////////////////////////////////////////////////////////
public class PoissonDistribution {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        Scanner scan = new Scanner(System.in);
        double lambda = scan.nextDouble();
        int k = scan.nextInt();
        scan.close();
        
        System.out.format("%.3f",poisson(k, lambda));
    }
    //--------------------------------------------------------------------------
    private static double poisson(int k, double lambda) {
        return (Math.pow(lambda, k) * Math.pow(Math.E, -1 * lambda)) / factorial(k);
    }
    //--------------------------------------------------------------------------
    private static Long factorial (int n) {
        if (n < 0) {
            return null;
        }
        long result = 1;
        while (n > 0) {
            result *= n--;
        }
        return result;
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
/*
OUTPUT :
2.5
5
0.067
*/

package Statistics;
////////////////////////////////////////////////////////////////////////////////
import java.util.Scanner;
////////////////////////////////////////////////////////////////////////////////
public class Quartiles {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        Scanner scn = new Scanner(System.in);
        
        System.out.print("Enter the number of elements : ");
        int maxSize=scn.nextInt();
        OrdQArray oqa=new OrdQArray(maxSize);
        
        System.out.println("Enter array elements :");
        for(int i=0;i<maxSize;i++){
            int num=scn.nextInt();
            oqa.insert(num);
        }
        
       oqa.display();
       int Q1=0;
       int Q2=0;
       int Q3=0;
       
       if(oqa.size()%2==0){
           Q1=oqa.calMedian(0,maxSize/2-1);
           Q2=oqa.calMedian(0, maxSize-1);
           Q3=oqa.calMedian(maxSize/2, maxSize-1);
       }
       else{
           Q1=oqa.calMedian(0,maxSize/2-1);
           Q2=oqa.calMedian(0, maxSize-1);
           Q3=oqa.calMedian(maxSize/2+1, maxSize-1);
       }
       
       System.out.println("[ Q1 : "+Q1+", Q2 : "+Q2+", Q3 : "+Q3+" ]");
       
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
class OrdQArray{
    private int a[];
    private int nELems;
    //--------------------------------------------------------------------------
    public OrdQArray(int maxSize){
        a=new int[maxSize];
        nELems=0;
    }
    //--------------------------------------------------------------------------
    public int size(){
        return nELems;
    }
    //--------------------------------------------------------------------------
    public void insert(int value){
        int i;
        for(i=0;i<nELems;i++)
            if(a[i]>value)
                break;
        for(int k=nELems;k>i;k--)
            a[k]=a[k-1];
        a[i]=value;
        nELems++;
    }
    //--------------------------------------------------------------------------
    public void display(){
        for(int i=0;i<nELems;i++)
            System.out.print(a[i]+" ");
        System.out.println("");
    }
    //--------------------------------------------------------------------------
    public int calMedian(int start,int end){
        System.out.println("start : "+start+", end "+end);
        int diff=(end-start)+1;
        System.out.println("diff "+diff);
        if(diff%2==0)
            return (a[(start+(diff/2))]+a[(start+(diff/2)-1)])/2;
        else
            return a[start+(diff/2)];
    }
    //--------------------------------------------------------------------------
    public int getElem(int index){
        return a[index];
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
package Statistics;
////////////////////////////////////////////////////////////////////////////////
import java.util.Scanner;
////////////////////////////////////////////////////////////////////////////////
public class StandardDeviation {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
       Scanner scn=new Scanner(System.in); 
       int nElems=scn.nextInt();
       
       int eleArray[]=new int[nElems];
       
       int sum=0;
       for(int i=0;i<nElems;i++){
           eleArray[i]=scn.nextInt();
           sum+=eleArray[i];
       }
       
       double mean=(double)sum/nElems;
       
       double sumSd=0.0;
       for(int i=0;i<nElems;i++)
           sumSd=sumSd+Math.pow((eleArray[i]-mean), 2);
       
       double standardDeviation=sumSd/nElems;
       double answer =Math.sqrt(standardDeviation);
       System.out.println(Math.round(answer*10.0)/10.0);
           
    }
    //--------------------------------------------------------------------------
}

package Statistics;
////////////////////////////////////////////////////////////////////////////////
import java.util.Scanner;
////////////////////////////////////////////////////////////////////////////////
public class WeightedMean {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        Scanner scn=new Scanner(System.in);
        int nElems=scn.nextInt();
        int xArray[]=new int[nElems];
        int wArray[]=new int [nElems];
        
        for(int i=0;i<nElems;i++){
            xArray[i]=scn.nextInt();
        }
        
        double sumwArray=0;
        for(int i=0;i<nElems;i++){
            wArray[i]=scn.nextInt();
            sumwArray=sumwArray+wArray[i];
        }
        
        double weightedSum=0;
        for(int i=0;i<nElems;i++)
            weightedSum=weightedSum+(xArray[i]*wArray[i]);
        
        System.out.println("ws"+weightedSum);
        System.out.println("sum"+sumwArray);
        double weightedMean=(weightedSum/sumwArray);
        System.out.printf("%.1f",weightedMean);
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package OOPM.Multithreading.CreateSimpleThread;
//////////////////////////////////////////////////////////////////////////////////////////////////////
import java.util.logging.Level;
import java.util.logging.Logger;
///////////////////////////////////////////////////////////////////////////////////////////////////////
public class PrintOneTOTenThread implements Runnable {
    //-------------------------------------------------------------------------------------------------
    public static void main(String args[]){
        PrintOneTOTenThread p=new PrintOneTOTenThread();
    }
    Thread t;
    //-------------------------------------------------------------------------------------------------
    public PrintOneTOTenThread() {
        t=new Thread();
        t.start();
    }
    //-------------------------------------------------------------------------------------------------
    public void run() {
        for(int i=0;i<=10;i++){
            System.out.println(" "+i);
            try {
                t.sleep(1000);
            } catch (InterruptedException ex) {
                Logger.getLogger(PrintOneTOTenThread.class.getName()).log(Level.SEVERE, null, ex);
                ex.printStackTrace();
            }
        }
    }
    //-------------------------------------------------------------------------------------------------
}
/*

 */
package OOPM.Multithreading.StorageCounterPrinterThread;
////////////////////////////////////////////////////////////////////////////////
class Counter implements Runnable{
    Storage st;
    //--------------------------------------------------------------------------
    Counter(Storage s){
        st=s;
    }
    //--------------------------------------------------------------------------
    public void run() {
        synchronized(st){
            for(int i=0;i<=5;i++){
                 while(!st.isPrinted()){
                    try{
                        st.wait();
                    }
                    catch(Exception e ){
                        e.printStackTrace();
                    }
                }
                st.setValue(i);
                st.setPrinted(true);
                st.notify();
            }
        }
    }
}
////////////////////////////////////////////////////////////////////////////////
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package OOPM.Multithreading.StorageCounterPrinterThread;
////////////////////////////////////////////////////////////////////////////////
class Printer implements Runnable{
    Storage st;
    //--------------------------------------------------------------------------
    Printer(Storage s){
        st=s;
    }
    //--------------------------------------------------------------------------
    public void run(){
        synchronized(st){
            for(int i=0;i<=5;i++){
                while(st.isPrinted()){
                    try{
                        st.wait();
                    }catch(Exception e){
                        e.printStackTrace();
                    }
                }
         System.out.println(Thread.currentThread().getName()+" "+st.getValue());
         st.setPrinted(true);
         st.notify();
            }
        }
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////

/*
 
 */
package OOPM.Multithreading.StorageCounterPrinterThread;
////////////////////////////////////////////////////////////////////////////////
class Storage{
    int i;
    boolean Printed=true;
    //--------------------------------------------------------------------------
    public void setValue(int i){
        this.i=i;
    }
    //--------------------------------------------------------------------------
    public int getValue(){
        return i;
    }
    //--------------------------------------------------------------------------
    public boolean isPrinted(){
        return Printed;
    }
    //--------------------------------------------------------------------------
    public void setPrinted(boolean pValue){
        Printed=pValue;
    }
    //--------------------------------------------------------------------------
}
/////////////////////////////////////////////////////////////////////////////////*
 
 */
package OOPM.Multithreading.StorageCounterPrinterThread;
////////////////////////////////////////////////////////////////////////////////
public class StorageCounterPrinterThread {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        Storage s=new Storage();
        Counter c=new Counter(s);
        Printer p=new Printer(s);
        new Thread(c,"Counter").start();
        new Thread(c,"Printer").start();
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////

package Recursion;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

public class AnagramApp {
    static int size;
    static int count;
    static char[] arrChar=new char[100];
    //--------------------------------------------------------------------------
    public static void main(String args[]) throws IOException{
        System.out.println("Enter a word");
        String input=getString();
        size=input.length();
        count=0;
        for(int j=0;j<size;j++)
            arrChar[j]=input.charAt(j);
        doAnagram(size);
    }
    //--------------------------------------------------------------------------
    public static void doAnagram(int newSize){
        if(newSize==1)
            return;
        for(int j=0;j<newSize;j++){
            doAnagram(newSize-1);
            if(newSize==2);
                 displayWord();
            rotate(newSize);
        }
    }
    //--------------------------------------------------------------------------
    public static void rotate(int newSize){
        int j;
        int position=size-newSize;
        char temp=arrChar[position];
        for(j=position+1;j<size;j++)
            arrChar[j-1]=arrChar[j];
        arrChar[j-1]=temp;
    }
    //--------------------------------------------------------------------------
    public static void displayWord(){
        if(count<99)
            System.out.print(" ");
        if(count<9)
            System.out.print(" ");
        System.out.print(++count+" ");
        for(int j=0;j<size;j++)
            System.out.print(arrChar[j]);
        System.out.print("  ");
        System.out.flush();
        if(count%6==0)
            System.out.println("");
    }
    //--------------------------------------------------------------------------
    public static String getString() throws IOException{
        InputStreamReader isr =new InputStreamReader(System.in);
        BufferedReader br=new BufferedReader(isr);
        String s =br.readLine();
        return s ;
    }
    //--------------------------------------------------------------------------
}
/* 
OUTPUT 
Enter a word
cats
  1 cats    2 cast    3 cats    4 ctsa    5 ctas    6 ctsa  
  7 csat    8 csta    9 csat   10 cats   11 atsc   12 atcs  
 13 atsc   14 asct   15 astc   16 asct   17 acts   18 acst  
 19 acts   20 atsc   21 tsca   22 tsac   23 tsca   24 tcas  
 25 tcsa   26 tcas   27 tasc   28 tacs   29 tasc   30 tsca  
 31 scat   32 scta   33 scat   34 satc   35 sact   36 satc  
 37 stca   38 stac   39 stca   40 scat  
*/
package Recursion;

public class BinarySearch {
    public static void main(String args[]){
        int maxSize=100;
        Array arr;
        arr=new Array(maxSize);
        
        arr.insert(72);
        arr.insert(90);
        arr.insert(45);
        arr.insert(72);
        arr.insert(126);
        arr.insert(54);
        arr.insert(99);
        arr.insert(144);
        arr.insert(27);
        arr.insert(125);
        arr.insert(82);
        arr.insert(22);
        
        arr.display();
        
        int searchKey=27;
        if(arr.find(searchKey)!=arr.size())
            System.out.println("Found "+searchKey);
        else
            System.out.println("Can't find "+searchKey);
    }
}
////////////////////////////////////////////////////////////////////////////////
class Array{
    private long[] a;
    private int nElems;
    //--------------------------------------------------------------------------
    public Array(int max){
        a=new long[max];
        nElems=0;
    }
    //--------------------------------------------------------------------------
    public int size(){
        return nElems;
    }
    //--------------------------------------------------------------------------
    public int find(long searchKey){
        return recFind(searchKey,0,nElems-1);
    }
    //--------------------------------------------------------------------------
    private int recFind(long searchKey,int lowerBound, int upperBound){
        int curIn;
        curIn=(lowerBound+upperBound)/2;
        if(a[curIn]==searchKey)
            return curIn;
        else
        {
            if(a[curIn]<searchKey)
                return recFind(searchKey, curIn+1, upperBound);
            else
                return recFind(searchKey, lowerBound, curIn-1);
        }
    }
    //--------------------------------------------------------------------------
    public void insert(long value){
        int j;
        for(j=0;j<nElems;j++)
            if(a[j]>value)
                break;
        for(int k=nElems;k>j;k--)
            a[k]=a[k-1];
        a[j]=value;
        nElems++;
    }
    //--------------------------------------------------------------------------
    public void display(){
        for(int j=0;j<nElems;j++)
            System.out.print(a[j]+" ");
        System.out.println("");
    }
    //--------------------------------------------------------------------------
}


/*
OUTPUT :
22 27 45 54 72 72 82 90 99 125 126 144 
Found 27
*//*
 Solves the tower of hanoi puzzle 
 */
package Recursion;

public class TowerApp {
    static int nDisks=3;
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        doTowers(nDisks,'A','B','C');
    }
    //--------------------------------------------------------------------------
    public static void doTowers(int topN,char from,char inter,char to){
        if(topN==1)
            System.out.println("Disk 1 from "+from+" to "+to);
        else{
            doTowers(topN-1, from, to, inter);
            System.out.println("Disk "+topN+" from"+from+" to "+to);
            doTowers(topN-1, inter, from, to);
        }
    }
    //--------------------------------------------------------------------------
}
/* OUTPUT
Disk 1 from A to C
Disk 2 fromA to B
Disk 1 from C to B
Disk 3 fromA to C
Disk 1 from B to A
Disk 2 fromB to C
Disk 1 from A to C
*/

package Recursion;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class TraingleApp {
    static int theNumber;
    //--------------------------------------------------------------------------
    public static void main(String[] args) throws IOException {
        // TODO code application logic here
        System.out.print("Enter a number : ");
        theNumber=getInt();
        int theAnswer=traingle(theNumber);
        System.out.println("Traingle = "+theAnswer);
    }
    //--------------------------------------------------------------------------
    public static int traingle(int n){
        if(n==1)
            return 1;
        else
            return (n+traingle(n-1));
    }
    //--------------------------------------------------------------------------
    public static String getString() throws IOException{
        InputStreamReader isr=new InputStreamReader(System.in);
        BufferedReader br=new BufferedReader(isr);
        String s=br.readLine();
        return s;
    }
    //--------------------------------------------------------------------------
    public static int getInt() throws IOException{
        String s =getString();
        return Integer.parseInt(s);
    }
    //--------------------------------------------------------------------------
}
/* OUYPUT
Enter a number : 10
Traingle = 55
*/package Sorting;


public class BubbleSortApp {
    
    public static void main(String args[]){
        
        int maxSize=100;    //array size
        ArrayBub arr =new ArrayBub(maxSize);
        
        arr.insert(77);
        arr.insert(90);
        arr.insert(44);
        arr.insert(55);
        arr.insert(22);
        arr.insert(88);
        arr.insert(11);
        arr.insert(00);
        arr.insert(66);
        arr.insert(33);
        
        arr.display();
        
        arr.bubbleSort();
        
        arr.display();
        
    }// end of main()
    
} // end of BubbleSortApp


class ArrayBub{
    private long[] a; // reference to array a 
    private int nElems; //number of data items 
    
    //-------------------------------
    
    public ArrayBub(int max){
        a=new long[max];
        nElems=0;
    }
    
    //-------------------------------
    
    public void insert(long value){  // put element into array 
        a[nElems]=value;
        nElems++;
    }
    
    //--------------------------------
    
    public void display(){       //display array contents
        for(int j=0;j<nElems;j++){
            System.out.print(a[j]+" "); 
        }
        System.out.println();
    }
    
    //------------------------------------------
    
    public void bubbleSort(){
        int out, in;
        for(out=nElems-1;out>1;out--)  //outer loop (backwards)
            for(in=0;in<out;in++)      //inner loop (forward)
                if(a[in]>a[in+1])
                    swap(in,in+1);
    }  // end bubbleSort()
    
    //--------------------------------------------
    
    private void swap(int one,int two){
        long temp=a[one];
        a[one]=a[two];
        a[two]=temp;
    }
    
    //----------------------------------------------
} // end of ArrayBub



package Sorting;

public class InsertSortApp {
    
        public static void main(String args[]){
        
        int maxSize=100;    //array size
        ArrayIns arr =new ArrayIns(maxSize);
        
        arr.insert(77);
        arr.insert(90);
        arr.insert(44);
        arr.insert(55);
        arr.insert(22);
        arr.insert(88);
        arr.insert(11);
        arr.insert(00);
        arr.insert(66);
        arr.insert(33);
        
        arr.display();
        
        arr.insertionSort();
        
        arr.display();
        
    }// end of main()

    
    
}


class ArrayIns{
    private long[] a; // reference to array a 
    private int nElems; //number of data items 
    
    //-------------------------------
    
    public ArrayIns(int max){
        a=new long[max];
        nElems=0;
    }
    
    //-------------------------------
    
    public void insert(long value){  // put element into array 
        a[nElems]=value;
        nElems++;
    }
    
    //--------------------------------
    
    public void display(){       //display array contents
        for(int j=0;j<nElems;j++){
            System.out.print(a[j]+" "); 
        }
        System.out.println();
    }
    
    //------------------------------------------
    
    public void insertionSort(){  
        int out, in;
        
        for(out=1;out<nElems;out++)     //out is  dividing line 
        {
            long temp=a[out];           //remove marked item
            in=out;                     //start shifts at out 
            while(in>0 && a[in-1]>=temp)  //until one is smaller,
            {
                a[in]=a[in-1];          //shifts item to right
                --in;                   // go left one position
            }
            a[in]=temp;
        }// end for  
    }// end SelectionSort()
    
} // end of ArrayBub


package Sorting;



public class Partition {
    public static void main(String args[]){
        int maxSize=16;
        ArrayPr arr;
        arr=new ArrayPr(maxSize);
        
        for(int j=0;j<maxSize;j++){
            long n=(int)(java.lang.Math.random()*99);
            arr.insert(n);
        }
        arr.display();
        
        long pivot=99;
        System.out.print("Pivot is "+pivot);
        int size=arr.size();
        
        int PartDex=arr.partition(0, size-1, pivot);
        
        System.out.println(", Partition is at index "+PartDex);
        arr.display();
        
    }
}
//------------------------------------------------------------------------------
class ArrayPr{
    private long[] theArray;
    private int nElems;
    //--------------------------------------------------------------------------
    ArrayPr(int max){
        theArray=new long[max];
        nElems=0;
    }
    //--------------------------------------------------------------------------
    public void insert(long value){
        theArray[nElems]=value;
        nElems++;
    }
    //--------------------------------------------------------------------------
    public int size(){
        return nElems;
    }
    //--------------------------------------------------------------------------
    public void display(){
        System.out.print("A =");
        for(int i=0;i<nElems;i++)
            System.out.print(theArray[i]+" ");
        System.out.println(" ");
    }
    //--------------------------------------------------------------------------
    public int partition(int left,int right,long pivot){
        int leftPtr=left-1;
        int rightPtr=right-1;
        while(true){
            while(leftPtr<right && theArray[++leftPtr]<pivot); 
            
            while(rightPtr>left && theArray[--rightPtr]>pivot);
            
            if(leftPtr>=rightPtr)
                break;
            else
                swap(leftPtr,rightPtr);
        }
        return leftPtr;
    }
    //--------------------------------------------------------------------------
    public void swap(int dex1,int dex2){
        long temp;
        temp=theArray[dex1];
        theArray[dex1]=theArray[dex2];
        theArray[dex2]=temp;
    }
    //--------------------------------------------------------------------------
}
//------------------------------------------------------------------------------

package Sorting;

public class QuickSortApp{
    public static void main(String [] args){
        int maxSize=16;
        ArrayQs arr;
        arr=new ArrayQs(maxSize);
        
        for(int j=0;j<maxSize;j++){
            long n=(int)(java.lang.Math.random()*99);
            arr.insert(n);
        }
        arr.display();
        arr.quickSort();
        arr.display();
    }
}
//------------------------------------------------------------------------------
class ArrayQs{
    private long[] theArray;
    private int nElems;
    //--------------------------------------------------------------------------
    public ArrayQs(int max){
        theArray=new long[max];
        nElems=0;
    }
    //--------------------------------------------------------------------------
    public void insert(long value){
        theArray[nElems]=value;
        nElems++;
    }
    //--------------------------------------------------------------------------
    public void display(){
        System.out.print("A =");
        for(int j=0;j<nElems;j++)
            System.out.print(theArray[j]+" ");
        System.out.println(" ");
    }
    //--------------------------------------------------------------------------
    public void quickSort(){
        recQuickSort(0,nElems-1);
    }
    //--------------------------------------------------------------------------
    public void recQuickSort(int left,int right){
        if(right-left<=0)
            return;
        else{
            long pivot=theArray[right];
            int partition =partitionIt(left,right,pivot);
            recQuickSort(left, partition-1);
            recQuickSort(partition+1, right);
        }
    }
    //--------------------------------------------------------------------------
    public int partitionIt(int left,int right, long pivot){
        int leftPtr=left-1;
        int rightPtr=right;
        while(true){
            while(theArray[++leftPtr]<pivot)
                ;
            while(rightPtr>0 && theArray[--rightPtr]>pivot)
                ;
            
            if(leftPtr>=rightPtr)
                break;
            else
                swap(leftPtr,rightPtr);
        }
        swap(leftPtr,right);
        return leftPtr;
    }
    //--------------------------------------------------------------------------
     public void swap(int dex1,int dex2){
        long temp;
        temp=theArray[dex1];
        theArray[dex1]=theArray[dex2];
        theArray[dex2]=temp;
    }
    //--------------------------------------------------------------------------
}
//------------------------------------------------------------------------------
////////////////////////////////////////////////////////////////////////////////
package Sorting;
////////////////////////////////////////////////////////////////////////////////
public class SegregateEvenOdd {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        int arr[]={12, 34, 45, 9, 8, 90, 3};
        
        SegEvenOdd(arr);
        
        System.out.println(" Required Array : ");
        for(int k:arr){
            System.out.print(k+" ");
        }
    }
    //--------------------------------------------------------------------------
    static void SegEvenOdd(int arr[]){
        /* Initialize left and right indexes */
        int left = 0, right = arr.length - 1;
        while (left < right)
        {
            /* Increment left index while we see 0 at left */
            while (arr[left]%2 == 0 && left < right)
                left++;
 
            /* Decrement right index while we see 1 at right */
            while (arr[right]%2 == 1 && left < right)
                right--;
 
            if (left < right)
            {
                /* Swap arr[left] and arr[right]*/
                int temp = arr[left];
                arr[left] = arr[right];
                arr[right] = temp;
                left++;
                right--;
            }
        }
    } 
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////package Sorting;

public class SelectionSortApp {
    
    public static void main(String args[]){
        
        int maxSize=100;    //array size
        ArraySel arr =new ArraySel(maxSize);
        
        arr.insert(77);
        arr.insert(90);
        arr.insert(44);
        arr.insert(55);
        arr.insert(22);
        arr.insert(88);
        arr.insert(11);
        arr.insert(00);
        arr.insert(66);
        arr.insert(33);
        
        arr.display();
        
        arr.selectionSort();
        
        arr.display();
        
    }// end of main()

    
}// end of Selection sort 


class ArraySel{
    private long[] a; // reference to array a 
    private int nElems; //number of data items 
    
    //-------------------------------
    
    public ArraySel(int max){
        a=new long[max];
        nElems=0;
    }
    
    //-------------------------------
    
    public void insert(long value){  // put element into array 
        a[nElems]=value;
        nElems++;
    }
    
    //--------------------------------
    
    public void display(){       //display array contents
        for(int j=0;j<nElems;j++){
            System.out.print(a[j]+" "); 
        }
        System.out.println();
    }
    
    //------------------------------------------
    
    public void selectionSort(){
        int out, in,min;
        
        for(out=0;out<nElems;out++){ //outer loop 
            min=out;
            for(in=out+1;in<nElems;in++)  //inner loop
                if(a[in]<a[min])
                    min=in;
                swap(out,min);
        }  
        
    }// end SelectionSort()
    
    //--------------------------------------------
    
    private void swap(int one,int two){
        long temp=a[one];
        a[one]=a[two];
        a[two]=temp;
    }
    
    //----------------------------------------------
} 


package Sorting;

public class ShellSortApp {
    public static void main(String args[]){
        int maxSize=10;
        ArraySh arr;
        arr=new ArraySh(maxSize);
        
        for(int j=0;j<maxSize;j++){
            long n=(int)(java.lang.Math.random()*99);
            arr.insert(n);
        }
        
        arr.display();
        arr.shellSort();
        arr.display();
    }
}
//------------------------------------------------------------------------------
class ArraySh{
    private long[] theArray;
    private int nElems;
    //--------------------------------------------------------------------------
    public ArraySh(int max){
        theArray=new long[max];
        nElems=0;
    }
    //--------------------------------------------------------------------------
    public void insert(long value){
        theArray[nElems]=value;
        nElems++;
    }
    //--------------------------------------------------------------------------
    public void display(){
        System.out.print("A = ");
        for(int i=0;i<nElems;i++)
            System.out.print(theArray[i]+" ");
        System.out.println("");
    }
    //--------------------------------------------------------------------------
    public void shellSort(){
        int inner,outer;
        long temp;
        
        int h=1;
        while(h<=nElems/3)
            h=h*3+1;
        
        while(h>0){
            for(outer=h;outer<nElems;outer++){
                temp=theArray[outer];
                inner=outer;
                while(inner>(h-1) && theArray[inner-h]>=temp){
                    theArray[inner]=theArray[inner-h];
                    inner-=h;
                }
                theArray[inner]=temp;
            }
            h=(h-1)/3;
        }
    }
    //--------------------------------------------------------------------------
}
//------------------------------------------------------------------------------
package Strings;

import java.util.HashMap;
import java.util.Map;

public class CountNumOfCharInStr {
    public static void main(String args[]){
        String str="Hello World";
        int len=str.length();
        
        Map<Character,Integer> numChar=new HashMap<Character,Integer>();
        for(int i=0;i<len;i++){
            char charAt=str.charAt(i);
            if(!numChar.containsKey(charAt)){
                numChar.put(charAt, 1);
            }
            else{
                numChar.put(charAt, numChar.get(charAt)+1);
            }
        }
        System.out.println(numChar);
    }
}
/*
 Program to check the given string is a palindrome or not.
 */
package Strings;
////////////////////////////////////////////////////////////////////////////////
import java.util.Scanner;
////////////////////////////////////////////////////////////////////////////////
public class IsStrPalindrome {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        Scanner scn=new Scanner(System.in);
        
        System.out.println("Enter a String to check if it is palindrome ");
        String orgStr=scn.nextLine();
        
        String revStr="";
        for(int i=orgStr.length()-1;i>=0;i--)
            revStr+=orgStr.charAt(i);
        
        if(revStr.equals(orgStr))
            System.out.println(orgStr+" is a palindrome");
        else
            System.out.println(orgStr+" is not a palindrome");
        
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
/*
OUTPUT : 
Enter a String to check if it is palindrome 
madam
madam is a palindrome
*//*
 To implement algorithm to remove all dublicate characters from a given string.
 */
package Strings;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class RemoveDuplicates {
    
    public static void main(String[] args) throws IOException {
        // TODO code application logic here
        System.out.println("Enter a String :");
        String str=getString();
        char char_set[]= str.toCharArray();
        removeDuplicates(char_set);
    }
    //--------------------------------------------------------------------------
    public static String getString() throws IOException{
        InputStreamReader isr=new InputStreamReader(System.in);
        BufferedReader br=new BufferedReader(isr);
        String s=br.readLine();
        return s;
    }
    //--------------------------------------------------------------------------
    public static void removeDuplicates(char[] str){
        if(str==null) return;
        int len=str.length;
        if(len<2) return;
        
        int tail=1;
        
        for(int i=1;i<len;++i){
            int j;
            for(j=1;j<tail;++j){
                if(str[i]==str[j]) break;
            }
            if(j==tail){
                str[tail]=str[i];
                ++tail;
            }
        }
        str[tail]=0;
        String updatedStr=String.valueOf(str);
        System.out.println("String after removal of duplicate character : "+updatedStr);
    }
    //--------------------------------------------------------------------------
}
/*
 Program to reverse all words in a string.
 */
package Strings;
////////////////////////////////////////////////////////////////////////////////
public class RevWordsInStr {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        String inputStr="This is a string";
        System.out.println("Input String : "+inputStr);
        
        String[] splitStr=inputStr.split(" ");
        String outputStr="";
        
        for(int i=splitStr.length-1;i>=0;i--)
            outputStr+=splitStr[i]+" ";
        
        System.out.println("Output String : "+outputStr);
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
/*
OUTPUT :
Input String : This is a string
Output String : string a is This 
*/
package Strings;

public class ReverseString {
    public static void main(String args[]){
        String str="Strings";
        String new_str="";
        char str_Array[]=str.toCharArray();
        for(int i=str_Array.length-1;i>=0;i--){
            new_str=new_str+str_Array[i];
        }
        System.out.println("Reverse string of String is "+new_str);
    }
}
//------------------------------------------------------------------------------
/*
OUTPUT
Reverse string of String is sgnirtS
*/

package ExpanseManager;

import static ExpanseManager.Login.User;
import static ExpanseManager.Login.Password;
import java.io.IOException;

public class ExpanseManager {

    public static void main(String[] args) throws IOException {
        // TODO code application logic here
            /* Set the Nimbus look and feel */
            FetchDatabaseInfo fetchinfo=new FetchDatabaseInfo();
        User=fetchinfo.getUser();
        Password=fetchinfo.getPassword();
        System.out.println(Password);
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }
    
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ExpanseManager;

/**
 *
 * @author parab
 */
public class ExpanseManagerDashBoard extends javax.swing.JFrame {

    /**
     * Creates new form ExpanseManagerDashBoard
     */
    public ExpanseManagerDashBoard() {
        initComponents();
        setSize(1200,600);
        setLocationRelativeTo(null);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 592, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExpanseManagerDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExpanseManagerDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExpanseManagerDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExpanseManagerDashBoard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExpanseManagerDashBoard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}

package ExpanseManager;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Properties;

public class FetchDatabaseInfo {
    private String userName, databaseName, password;
    //--------------------------------------------------------------------------
    FetchDatabaseInfo() throws FileNotFoundException, IOException{
        Properties prop=new Properties();
        FileReader file=new FileReader("config.properties");
        prop.load(file);
        userName=prop.getProperty("User");
        databaseName=prop.getProperty("Database");
        password=prop.getProperty("Password");
    }
    //--------------------------------------------------------------------------
    public String getUser(){
        return userName;
    }
    //--------------------------------------------------------------------------
    public String getDatabase(){
        return databaseName;
    }
    //--------------------------------------------------------------------------
    public String getPassword(){
        return password;
    }
    //--------------------------------------------------------------------------
}
//------------------------------------------------------------------------------
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ExpanseManager;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author parab
 */
public class Login extends javax.swing.JFrame {
static String User="";
static String Password="";

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        setSize(1200,600);
        setLocationRelativeTo(null);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        passwordfield = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(java.awt.Color.white);

        passwordfield.setFont(new java.awt.Font("Ubuntu Condensed", 1, 18)); // NOI18N

        jButton1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jButton1.setText("Login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 48)); // NOI18N
        jLabel2.setForeground(java.awt.Color.darkGray);
        jLabel2.setText("Hi, "+User);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 17)); // NOI18N
        jLabel1.setText("Enter password ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(100, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(214, 214, 214))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(passwordfield, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(240, 240, 240)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(154, 154, 154)
                        .addComponent(jLabel2)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 122, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(passwordfield, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(300, 300, 300)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(300, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(69, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String pwd=new String(passwordfield.getPassword());
        if(pwd.equals(Password)){
            ExpanseManagerDashBoard emdb=new ExpanseManagerDashBoard();
            emdb.setVisible(true);
            this.dispose();
        }
        else{
            JOptionPane.showMessageDialog(this, "Incorrect password, Please try again !!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField passwordfield;
    // End of variables declaration//GEN-END:variables
}

package caeserencryption;
import java.util.Scanner;

public class CaeserEncryption {

    public static String ALPHABET="abcdefghijklmnopqrstuvwxyz";
    public String encrypt(String plaintext,int shiftkey){
        
        String Plaintext=plaintext.toLowerCase();
        String cipherText="";
        for(int i=0;i<Plaintext.length();i++){
            
            int charPosition=ALPHABET.indexOf(Plaintext.charAt(i));
            int keyVal=(charPosition+shiftkey)%26;
            char replVal=ALPHABET.charAt(keyVal);
            cipherText+=replVal;
        }
        
        return cipherText;
        
    }
    public String decrypt(String plaintext,int shiftkey){
           String Plaintext=plaintext.toLowerCase();
        String cipherText="";
        for(int i=0;i<Plaintext.length();i++){
            
            int charPosition=ALPHABET.indexOf(Plaintext.charAt(i));
            int keyVal=(charPosition-shiftkey)%26;
            if(keyVal<0){
                keyVal=ALPHABET.length()+keyVal;
            }
            char replVal=ALPHABET.charAt(keyVal);
            cipherText+=replVal;
        }
        
        return cipherText;
    }
    public static void main(String[] args) {
        
        Scanner scan=new Scanner(System.in);
        System.out.println("Enter a string");
        String message=scan.nextLine();
        System.out.println("Enter 1 for encryption and 2 for decryption");
        int choice =scan.nextInt();
        CaeserEncryption caenc=new CaeserEncryption();
        switch(choice){
            case 1: System.out.println("Shift key number");
                    int shift1=scan.nextInt();
                    System.out.println("Encrypted string :"+caenc.encrypt(message,shift1));
                break;
            case 2 :
                System.out.println("Shift key number");
                int shift2=scan.nextInt();
                 System.out.println("Decrypted string :"+caenc.decrypt(message,shift2));
                break;
            default: System.out.println("Please enter number 1 or 2.");
        }
    }
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codechef;

/**
 *
 * @author ABC
 */
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;
 
/**
 
 */
class CHODE {
    public static void main(String args[])throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        PrintWriter pw = new PrintWriter(System.out);
        int t = Integer.parseInt(reader.readLine());
        int freq[] = new int[26];
        char mapping[] = new char[26];
        int checked;
        for (int i = 0; i < t; i++) {
            String frequency = reader.readLine();
            String input = reader.readLine();
            Arrays.fill(freq, 0);
            for (int j = 0; j < input.length(); j++) {
                char c = input.charAt(j);
                c = Character.toLowerCase(c);
                if (c >= 'a' && c <= 'z')
                    freq[c-'a']++;
 
            }
            checked = 25;
            for (int k = 0; k < 26; k++) {
                int largest = - 1;
                int largestPos = -1;
                for (int l = 0; l < 26; l++) {
                    if (freq[l] != 0 && freq[l] >= largest){
                        largest = freq[l];
                        largestPos = l;
                    }
                }
                if(largestPos != -1){
                    mapping[largestPos] = frequency.charAt(checked);
                    freq[largestPos] = 0;
                    checked--;
                }
            }
            StringBuffer buffer = new StringBuffer(input);
            for (int k = 0; k < input.length(); k++) {
                char ch = input.charAt(k);
                if ( Character.toLowerCase(ch) >= 'a'  && Character.toLowerCase(ch) <= 'z'){
                    if(Character.isUpperCase(ch))
                        buffer.setCharAt(k,Character.toUpperCase(mapping[ch-'A']));
                    else
                        buffer.setCharAt(k,mapping[ch-'a']);
                }
                else
                    buffer.setCharAt(k,ch);
            }
            pw.println(buffer);
        }
        reader.close();
        pw.flush();
        pw.close();
    }
 
 
 
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codechef;

/**
 *
 * @author ABC
 */
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.*;

public class CodeChef {
    static String[] data;

    public static void main(String[] args) throws IOException {
    BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
    int testCases = Integer.parseInt(bufferedReader.readLine());

    while (testCases-- > 0) {
        //get N and K
        int forgottenLanguageWordsCount, modernLanguagePhrasesCount;
        data = bufferedReader.readLine().split(" ");
        forgottenLanguageWordsCount = Integer.parseInt(data[0]);
        modernLanguagePhrasesCount = Integer.parseInt(data[1]);

        //build array
        String[] forgottenWords = bufferedReader.readLine().split(" ");

        //build a single list with all words from all phrases
        List<String> modernWordsList = new ArrayList<>();
        for (int i = 0; i < modernLanguagePhrasesCount; i++) {
            data = bufferedReader.readLine().split(" ");
            int totalWordsInPhrase = Integer.parseInt(data[0]);

            //add to list
            modernWordsList.addAll(Arrays.asList(data).subList(1, totalWordsInPhrase + 1));
        }

        //use .contains method to check if present in list or not
        for (int i = 0; i < forgottenLanguageWordsCount; i++) {
            if (modernWordsList.contains(forgottenWords[i])) {
                System.out.print("YES");
            } else {
                System.out.print("NO");
            }
            System.out.print((i + 1 == forgottenLanguageWordsCount) ? "\n" : " ");
        }
    }
    }
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codechef;
import java.io.*;
import java.util.Scanner;

/**
 *
 * @author ABC
 */
public class FactorialProblem {
  
     public  static  int  findTrailingZeros(int  number)  {

int count = 0;


if(number < 0){

System.out.println("Error: There is no Factorial for a number less than 0");

return -1; //error condition

}

if(number == 5){
return 1; 
}


/*
start from 5, multiply j by 5 each loop, but
stop iterating when number/j is no longer greater
than 1
*/
for ( int j = 5; number/j >= 1; j *= 5 )
{
/*
assuming that number/j will just give you the
integer result of the division of number/j and
also truncate:
*/
count  +=  number  /  j;
}

return count;
}
    

    public static void main(String args[]){
        long fact=1;int counter=0;
        Scanner obj=new Scanner(System.in);
        System.out.println("N");
        int n=obj.nextInt();
       System.out.println(""+findTrailingZeros(n));
        
      
              
              
          }
        
        
    }
    
    

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codechef;

import java.util.Stack;
import java.util.Scanner;
import java.lang.String;


class ONP {

    public static void main(String[] args){

    Scanner sc = new Scanner(System.in);
    String  str = new String();
    int i;
    i = sc.nextInt();
    
    while(i>0){
    str = sc.next();
    Stack stk = new Stack();
    String rnp = new String();
    int len = str.length();
    char c;     
    for(int k=0;k<len;k++){
    c = str.charAt(k);
    switch(c){
        case '(': break;

        case '+': stk.push(c);
              break;
    
        case '-': stk.push(c);      
              break;
        
        case '*': stk.push(c);      
              break;
 
        case '/': stk.push(c);      
              break;
    
        case '^': stk.push(c);
              break;

        case ')': rnp = rnp + stk.pop();
              break;

        default : rnp = rnp + c;    
               break;
        }   
            }
        System.out.println(rnp);
        i--;
        }
    }
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codechef;
import java.io.*;
import java.util.Scanner;
/**
 *
 * @author ABC
 */
public class ReverseNumber {
    
    
   public static void main(String args[]){
       
       Scanner obj=new Scanner(System.in);
       int num=obj.nextInt();
       
       int reverse=0;
       
       while(num!=0){
           
           reverse=reverse*10;
           reverse=reverse+num%10;
           num=num/10;
       }
       
       System.out.println("Reversed number : "+reverse);
   } 
    
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package codechef;
import java.util.*;
/**
 *
 * @author ABC
 */
public class StackExample {
    
    //function pushStack()
    static void pushStack(Stack st,int a){
        st.push(new Integer(a));
        System.out.println("PUSH("+a+")");
        System.out.println("stack : "+st);
        
    }
    //function popSTack()
    static void popStack(Stack st ){
       int a =(Integer) st.pop();
       System.out.println("POP ->"+a);
       System.out.println("Stack : "+st);
        
    }
    
    public static void main(String args[]){
        
        Stack st=new Stack();
        System.out.println(""+st);
        
        //
        pushStack(st,42);
        popStack(st);
    }
    
    
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package echoserver;
import java.io.*;
import java.net.*;

public class EchoCLientTwo
{
    public static void main(String args[])throws IOException
    {
        Socket s=new Socket("localhost",7000);
        PrintStream out = new PrintStream(s.getOutputStream());

        Socket s2=new Socket("localhost",7001);
        BufferedReader in2 = new BufferedReader(new
InputStreamReader(s2.getInputStream()));
        PrintStream out2 = new PrintStream(s2.getOutputStream());
        BufferedReader br = new BufferedReader(new
InputStreamReader(System.in));
        String str;
        while(true)
        {
            System.out.println("Waiting for Token");
            str=in2.readLine();
            if(str.equalsIgnoreCase("Token"))
            {
                System.out.println("Do you want to send some data");
                System.out.println("Enter Yes or No");
                str=br.readLine();
                if(str.equalsIgnoreCase("Yes"))
                {
                    System.out.println("Enter the data");
                    str=br.readLine();
                    out.println(str);
                }
                out2.println("Token");
            }
        }
    }
} 


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package echoserver;

import java.io.*;
import java.net.*;

public class EchoClientOne
{
    public static void main(String args[])throws IOException
    {
        Socket s=new Socket("localhost",7000);
        PrintStream out = new PrintStream(s.getOutputStream());
       
        ServerSocket ss = new ServerSocket(7001);
        Socket s1 = ss.accept();
        BufferedReader in1 = new BufferedReader(new
InputStreamReader(s1.getInputStream()));
        PrintStream out1 = new PrintStream(s1.getOutputStream());
        BufferedReader br = new BufferedReader(new
InputStreamReader(System.in));
        String str="Token";
        while(true)
        {
            if(str.equalsIgnoreCase("Token"))
            {
                System.out.println("Do you want to send some data");
                System.out.println("Enter Yes or No");
                str=br.readLine();
                if(str.equalsIgnoreCase("Yes"))
                {
                    System.out.println("Enter the data");
                    str=br.readLine();
                    out.println(str);
                }
                out1.println("Token");
            }
            System.out.println("Waiting for Token");
            str=in1.readLine();
        }
    }
}

package Echoserver;
import java.io.*;
import java.net.*;

public class EchoServer implements Runnable
{
    Socket socket=null;
    static ServerSocket ss;
    EchoServer(Socket newSocket)
    {
        this.socket=newSocket;       
    }
    public static void main(String args[]) throws IOException
    {
        ss=new ServerSocket(7000);
        System.out.println("Server Started");
        while(true)
        {
            Socket s = ss.accept();
            EchoServer es = new EchoServer(s);
            Thread t = new Thread(es);
            t.start();
        }
    }
    public void run()
    {
        try {       
            BufferedReader in = new BufferedReader(new
InputStreamReader(socket.getInputStream()));
            while(true)
            {
                System.out.println(in.readLine());
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
} 

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package employeedetails;

/**
 *
 * @author ABC
 */
public class DateOfBirth {
    //Declaring Date variables in format ' dd/mm/yy '
    int mm;
    int yy;
    int dd;
    
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package employeedetails;

/**
 *
 * @author ABC
 */
public class EmpAddress {
    //declaring Variable for Address of an Employee
    String Country;
    String State;
    String Building;
    String Street;
    String RoomNo;
    String City;
    int PinCode;
    

}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package employeedetails;

/**
 *
 * @author ABC
 */
public class EmpDetails {
    //Declaring Instance varialbles
    String F_Name;
    String L_Name;
    String M_Name;
    int Age;
    String Gender;
    float Ann_Salary;
    int Mon_Salary;
    DateOfBirth dob=new DateOfBirth();
    EmpAddress add=new EmpAddress();
    
   
    
    EmpDetails(String fname,String lname,String gender){
        if(gender=="male"){
            System.out.println("\n\nPersonal Details of Mr. "+fname+" "+lname);
        }
        else{
            System.out.println("\n\nPersonal Details of Mrs. "+fname+" "+lname);
        }
        
        
    }
    
    EmpDetails(String fname,String mname,String lname,int age,String gender,int date,int mon,int yrs){
        //Cascading Of Constructor 
        //Calling EmpDetails() above Constructor Using this Keyword
        this(fname,lname,gender);
        //Assigning instance variables with some values
        this.F_Name=fname;
        this.L_Name=lname;
        this.M_Name=mname;
        this.Age=age;
        this.Gender=gender;
        this.dob.dd=date;
        this.dob.mm=mon;
        this.dob.yy=yrs;
        this.add.Building="Raman Smruti";
        this.add.Country="India";
        this.add.PinCode=400004;
        this.add.RoomNo="101";
        this.add.State="Maharastra";
        this.add.City="Mumbai";
        this.add.Street="V.P Road";
        this.Ann_Salary=250000;
        this.Mon_Salary=(int)this.Ann_Salary/12;
    }
    
    
    void PrintInfo(){
        System.out.println("Age : "+this.Age);
        System.out.println("Gender : "+this.Gender);
        System.out.println("Date Of Birth : "+this.dob.dd+"/"+this.dob.mm+"/"+this.dob.yy);
        System.out.println("Monthly Income : Rs. "+this.Mon_Salary+"/-");
        System.out.println("Address : "+this.add.RoomNo+","+this.add.Building+","+this.add.Street+","+this.add.City+","+this.add.State+": "+this.add.PinCode+","+this.add.Country+".");
        
    }
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package employeedetails;
import java.util.Scanner; 
/**
 *
 * @author ABC
 */
public class EmployeeDetails {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        //Creating object of Scanner class ' obj' 
        Scanner obj =new Scanner(System.in);
        //Getting the input from the user using Scanner class
        System.out.println("Enter your First Name ");
        String fname=obj.nextLine();
        System.out.println("Enter your Middle Name ");
        String mname=obj.nextLine();
        System.out.println("Enter your Last Name ");
        String lname=obj.nextLine();
        System.out.println("Enter your Age ");
        int age=obj.nextInt();
        System.out.println("Enter your Day of Date of Birth  ");
        int d=obj.nextInt();
        System.out.println("Enter your Month of Date Of Birth");
        int m=obj.nextInt();
        System.out.println("Enter your Year of Date Of Birth");
        int y=obj.nextInt();
        System.out.println("Enter your Gender ");
        String gender=obj.nextLine();
        //Creating Object of EmpDetails ' empdet '
        EmpDetails empdet=new EmpDetails(fname,mname,lname,age,gender,d,m,y);
        empdet.PrintInfo();
        
    }
    
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package round2;


public class Round2 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
 java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SeekAndEncrypt().setVisible(true);
            }
        });        
    }
    
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package round2;

import javax.swing.JOptionPane;

/**
 *
 * @author ABC
 */
public class SeekAndEncrypt extends javax.swing.JFrame {

    /**
     * Creates new form SeekAndEncrypt
     */
    public SeekAndEncrypt() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        resta = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("SEEK AND DECRYPT ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(266, 266, 266)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(46, 46, 46))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Decrypt the given  encrypted data using given set of program .");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("   \"   Symydf~yixvpljerqooylgpjxgejepwuet{  \"  ");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Re-Write the Decrypted data in the following TextArea .");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(143, 143, 143))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(240, 240, 240)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 555, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(180, 180, 180))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jButton1.setText("SUBMIT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        resta.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(329, 329, 329)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(resta, javax.swing.GroupLayout.PREFERRED_SIZE, 744, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(131, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(resta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(983, 548));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    
      String strdecrypt1="Itisbettertobealonethaninbadcompany";
      
      String strdecrypt2=resta.getText();
     if(strdecrypt1.equals(strdecrypt2)){
          JOptionPane.showMessageDialog(null,"Congratulations ! you decrypted the data correctly . You are proceded to Round 3");
      }
      else{
          JOptionPane.showMessageDialog(null,"Incorrect Original Data . Please try again !");
      }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SeekAndEncrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SeekAndEncrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SeekAndEncrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SeekAndEncrypt.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SeekAndEncrypt().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField resta;
    // End of variables declaration//GEN-END:variables
}
/*#10001
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package round2;
class Encryption{
    //Instance variable
    private  static final int chain[]={10,5,4,6,2,1};
    String orgmsg;
    //Constructor
    Encryption(String orgmsg){
     this.orgmsg=orgmsg;
    } 
    public String encryption(){
       String encrypted=this.encrypt();
       return encrypted;
    }
    //Private method where encryption occurs
    private String encrypt(){
        String msgdecrypt="";
        int len=orgmsg.length();
        char ch;
        int j=0;
        for(int i=0;i<len;i++){
           ch=orgmsg.charAt(i);
           ch+=chain[j];
           j++;
           msgdecrypt+=ch;
            if(j>=chain.length){
               j=0;
           }
        }
        return msgdecrypt;
    }
}
//Main Class
public class SeekEncrypt {
    //Main Method
    public static void main(String args[]){
        Encryption obj=new Encryption("Itisbettertobealonethaninbadcompany");//Original Message 
        System.out.println(obj.encryption());
       
    }
}



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package goldenhathackerround3;

/**
 *
 * @author ABC
 */
public class GoldenHatHackerRound3 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginPassword().setVisible(true);
            }
        });
    }
    
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package goldenhathackerround3;

import javax.swing.JOptionPane;

/**
 *
 * @author ABC
 */
public class LoginPassword extends javax.swing.JFrame  {
int counter=0;

    /**
     * Creates new form LoginPassword
     */
    public LoginPassword() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        submitbtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        passwordpf = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        deslbl = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/goldenhathackerround3/user.png"))); // NOI18N
        jLabel4.setText("jLabel4");

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        jPanel2.setDoubleBuffered(false);

        submitbtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        submitbtn.setForeground(new java.awt.Color(51, 51, 51));
        submitbtn.setText("Sign In");
        submitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitbtnActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(153, 153, 153));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Enter your User_Id");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Enter your Password");

        passwordpf.setBackground(new java.awt.Color(51, 51, 51));
        passwordpf.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        passwordpf.setForeground(new java.awt.Color(102, 102, 102));
        passwordpf.setToolTipText("Enter the password of 10 character\n");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 153));
        jButton1.setText("Hint ??");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField1.setBackground(new java.awt.Color(51, 51, 51));
        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(153, 153, 153));
        jTextField1.setText("RakeshKumar");
        jTextField1.setFocusable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                            .addComponent(passwordpf))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(225, Short.MAX_VALUE)
                .addComponent(submitbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(173, 173, 173))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                    .addComponent(passwordpf, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(submitbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );

        deslbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        deslbl.setForeground(new java.awt.Color(204, 0, 0));
        deslbl.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("LOGIN");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(110, 110, 110)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(172, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(155, 155, 155))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(deslbl, javax.swing.GroupLayout.PREFERRED_SIZE, 697, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(109, 109, 109)))
                .addComponent(deslbl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1013, 708));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void submitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitbtnActionPerformed
        // TODO add your handling code here:
      
       
        if(counter==3){
            
        jButton1.setEnabled(false);
         
           try{
             
              JOptionPane.showMessageDialog(null,"After every 3 false attempts the \n button gets disable for 2 minutes .\n Please try later .....  ");
               Thread.sleep(120000);
              
                 
                 counter=0;
           }
          
           catch(Exception e){
               
           }
            jButton1.setEnabled(true);
             deslbl.setText("Please try login again  ....");
        }
        else{
          
           deslbl.setText("");
            String password=new String(passwordpf.getPassword());
        try{
            if(password.equals("cricket2049jayashree")){
                JOptionPane.showMessageDialog(null, "Sucessfully Loged In !");
            }
            else{
                JOptionPane.showMessageDialog(null,"Invalid Username or password ! \n Please try again .....");
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
        }
        counter++;
    }//GEN-LAST:event_submitbtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
          JOptionPane.showMessageDialog(null,"Password length is upto 15 and contains 4 numbers in it ");
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginPassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel deslbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPasswordField passwordpf;
    private javax.swing.JButton submitbtn;
    // End of variables declaration//GEN-END:variables
}
package goldenhathackerround3;
import java.io.*; 
public class PW {
   static String pass; 
   
   
   static boolean strong = false; 
 
   
   public static void go(String pasword) throws IOException {
      
      pass=pasword;
      checkStrength(pass); 
   }
   public static void checkStrength(String pass) throws IOException {
      boolean goodLength = false;
      boolean nums = false;
 
  
      if(pass.length() >= 10) { 
         goodLength = true;
  
         for(int i=0;i<10;i++) { 
            if(pass.contains(Integer.toString(i))) {
               nums = true;
            }
         }
      }
     else if(!nums) {
         System.out.println("You need at least one number " +
                            "in your password.");
         System.out.println("Press enter to try again.");
         
      } else if(!goodLength) {
         System.out.println("Your password needs to be over 10" +
                            " characters long.");
         System.out.println("Press enter to try again.");
         kb.readLine();
         go();
      }
   }
}/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package goldenhathackerround1;

/**
 *
 * @author ABC
 */
public class GoldenHatHackerRound1 {

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]){
    java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StartQuiz().setVisible(true);
            }
        });
    }
}


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package goldenhathackerround1;

import javax.swing.JOptionPane;

/**
 *
 * @author ABC
 */
public class QuizRound extends javax.swing.JFrame {
       public  double marks=0.0;
       public  double total=0.0; 
       public double Points=0.0;
    /**
     * Creates new form QuizRound
     */
    public QuizRound() {
        initComponents();
    }
public void calPoints(){
     marks=0.0;
        String ans =restf.getText();
        if(jRadioButton1.isSelected()==true){
            marks+=1.0;
        }
        if(jRadioButton5.isSelected()==true){
            marks+=1.0;
        }
        if(jRadioButton8.isSelected()==true){
            marks+=1.0;
        }
        if(jRadioButton14.isSelected()==true){
            marks+=1.0;
        }
        if(jRadioButton17.isSelected()==true){
            marks+=1.0;
        }
        if(jRadioButton22.isSelected()==true){
            marks+=1.0;
        }
        if(jRadioButton25.isSelected()==true){
            marks+=1.0;
        }
        if(jRadioButton28.isSelected()==true){
            marks+=1.0;
        }
        if(jRadioButton30.isSelected()==true){
            marks+=1.0;
        }
        if(jRadioButton32.isSelected()==true){
            marks+=1.0;
        }
        if(jRadioButton35.isSelected()==true){
            marks+=1.0;
        }
         if(jRadioButton37.isSelected()==true){
            marks+=1.0;
        }
          if(jRadioButton47.isSelected()==true){
            marks+=1.0;
        }
            if(jRadioButton51.isSelected()==true){
            marks+=1.0;
        }
              if(jRadioButton53.isSelected()==true){
            marks+=1.0;
        }
                     if(jRadioButton54.isSelected()==true){
            marks+=1.0;
        }
                            if(jRadioButton60.isSelected()==true){
            marks+=1.0;
        }
                                   if(jRadioButton62.isSelected()==true){
            marks+=1.0;
        }
                                          if(jRadioButton70.isSelected()==true){
            marks+=1.0;
        }
if(jRadioButton73.isSelected()==true){
            marks+=1.0;
        }
if(jRadioButton77.isSelected()==true){
            marks+=1.0;
        }
if(jRadioButton80.isSelected()==true){
            marks+=1.0;
        }
if(jRadioButton83.isSelected()==true){
            marks+=1.0;
        }
   if(jRadioButton88.isSelected()==true){
            marks+=1.0;
        }                                       if(ans.equals("different")){
                                              marks+=1.0;
                                          }
        else{
            marks+=0.0;
        }
                                          Points=marks;
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgq1 = new javax.swing.ButtonGroup();
        bgq2 = new javax.swing.ButtonGroup();
        bgq3 = new javax.swing.ButtonGroup();
        bgq4 = new javax.swing.ButtonGroup();
        bgq5 = new javax.swing.ButtonGroup();
        bgq6 = new javax.swing.ButtonGroup();
        bgq7 = new javax.swing.ButtonGroup();
        bgq8 = new javax.swing.ButtonGroup();
        bgq9 = new javax.swing.ButtonGroup();
        bgq10 = new javax.swing.ButtonGroup();
        bgq11 = new javax.swing.ButtonGroup();
        bgq12 = new javax.swing.ButtonGroup();
        bgq13 = new javax.swing.ButtonGroup();
        bgq14 = new javax.swing.ButtonGroup();
        bgq15 = new javax.swing.ButtonGroup();
        bgq16 = new javax.swing.ButtonGroup();
        bgq17 = new javax.swing.ButtonGroup();
        bgq18 = new javax.swing.ButtonGroup();
        bgq19 = new javax.swing.ButtonGroup();
        bgq20 = new javax.swing.ButtonGroup();
        bgq21 = new javax.swing.ButtonGroup();
        bgq22 = new javax.swing.ButtonGroup();
        bgq23 = new javax.swing.ButtonGroup();
        bgq24 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        Subbtn = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton7 = new javax.swing.JRadioButton();
        jPanel9 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jRadioButton8 = new javax.swing.JRadioButton();
        jRadioButton9 = new javax.swing.JRadioButton();
        jRadioButton10 = new javax.swing.JRadioButton();
        jRadioButton11 = new javax.swing.JRadioButton();
        jPanel10 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jRadioButton12 = new javax.swing.JRadioButton();
        jRadioButton13 = new javax.swing.JRadioButton();
        jRadioButton14 = new javax.swing.JRadioButton();
        jRadioButton15 = new javax.swing.JRadioButton();
        jPanel11 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jRadioButton16 = new javax.swing.JRadioButton();
        jRadioButton17 = new javax.swing.JRadioButton();
        jRadioButton18 = new javax.swing.JRadioButton();
        jRadioButton19 = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        jRadioButton20 = new javax.swing.JRadioButton();
        jRadioButton21 = new javax.swing.JRadioButton();
        jRadioButton22 = new javax.swing.JRadioButton();
        jRadioButton23 = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        jRadioButton24 = new javax.swing.JRadioButton();
        jRadioButton25 = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jPanel24 = new javax.swing.JPanel();
        jRadioButton26 = new javax.swing.JRadioButton();
        jRadioButton27 = new javax.swing.JRadioButton();
        jRadioButton28 = new javax.swing.JRadioButton();
        jRadioButton29 = new javax.swing.JRadioButton();
        jLabel10 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jPanel25 = new javax.swing.JPanel();
        jRadioButton30 = new javax.swing.JRadioButton();
        jRadioButton31 = new javax.swing.JRadioButton();
        jLabel11 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jRadioButton32 = new javax.swing.JRadioButton();
        jRadioButton33 = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jRadioButton38 = new javax.swing.JRadioButton();
        jRadioButton39 = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel28 = new javax.swing.JPanel();
        jRadioButton34 = new javax.swing.JRadioButton();
        jRadioButton35 = new javax.swing.JRadioButton();
        jLabel14 = new javax.swing.JLabel();
        jRadioButton40 = new javax.swing.JRadioButton();
        jRadioButton41 = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel29 = new javax.swing.JPanel();
        jRadioButton36 = new javax.swing.JRadioButton();
        jRadioButton37 = new javax.swing.JRadioButton();
        jLabel15 = new javax.swing.JLabel();
        jRadioButton42 = new javax.swing.JRadioButton();
        jRadioButton43 = new javax.swing.JRadioButton();
        jPanel27 = new javax.swing.JPanel();
        jPanel30 = new javax.swing.JPanel();
        jRadioButton44 = new javax.swing.JRadioButton();
        jRadioButton45 = new javax.swing.JRadioButton();
        jLabel16 = new javax.swing.JLabel();
        jRadioButton46 = new javax.swing.JRadioButton();
        jRadioButton47 = new javax.swing.JRadioButton();
        jPanel31 = new javax.swing.JPanel();
        jPanel33 = new javax.swing.JPanel();
        jRadioButton48 = new javax.swing.JRadioButton();
        jRadioButton49 = new javax.swing.JRadioButton();
        jLabel17 = new javax.swing.JLabel();
        jRadioButton50 = new javax.swing.JRadioButton();
        jRadioButton51 = new javax.swing.JRadioButton();
        jPanel32 = new javax.swing.JPanel();
        jPanel34 = new javax.swing.JPanel();
        jRadioButton52 = new javax.swing.JRadioButton();
        jRadioButton53 = new javax.swing.JRadioButton();
        jLabel18 = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();
        jPanel40 = new javax.swing.JPanel();
        jRadioButton54 = new javax.swing.JRadioButton();
        jRadioButton55 = new javax.swing.JRadioButton();
        jRadioButton56 = new javax.swing.JRadioButton();
        jRadioButton57 = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel36 = new javax.swing.JPanel();
        jPanel41 = new javax.swing.JPanel();
        jRadioButton58 = new javax.swing.JRadioButton();
        jRadioButton59 = new javax.swing.JRadioButton();
        jRadioButton60 = new javax.swing.JRadioButton();
        jRadioButton61 = new javax.swing.JRadioButton();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jPanel37 = new javax.swing.JPanel();
        jPanel42 = new javax.swing.JPanel();
        jRadioButton62 = new javax.swing.JRadioButton();
        jRadioButton63 = new javax.swing.JRadioButton();
        jRadioButton64 = new javax.swing.JRadioButton();
        jRadioButton65 = new javax.swing.JRadioButton();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jPanel38 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jRadioButton66 = new javax.swing.JRadioButton();
        jRadioButton68 = new javax.swing.JRadioButton();
        jRadioButton69 = new javax.swing.JRadioButton();
        jRadioButton70 = new javax.swing.JRadioButton();
        jPanel39 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        restf = new javax.swing.JTextField();
        jPanel44 = new javax.swing.JPanel();
        jPanel52 = new javax.swing.JPanel();
        jRadioButton86 = new javax.swing.JRadioButton();
        jRadioButton87 = new javax.swing.JRadioButton();
        jRadioButton88 = new javax.swing.JRadioButton();
        jRadioButton89 = new javax.swing.JRadioButton();
        jLabel33 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTextArea9 = new javax.swing.JTextArea();
        jPanel45 = new javax.swing.JPanel();
        jPanel51 = new javax.swing.JPanel();
        jRadioButton82 = new javax.swing.JRadioButton();
        jRadioButton83 = new javax.swing.JRadioButton();
        jRadioButton84 = new javax.swing.JRadioButton();
        jRadioButton85 = new javax.swing.JRadioButton();
        jLabel32 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTextArea8 = new javax.swing.JTextArea();
        jPanel46 = new javax.swing.JPanel();
        jPanel50 = new javax.swing.JPanel();
        jRadioButton78 = new javax.swing.JRadioButton();
        jRadioButton79 = new javax.swing.JRadioButton();
        jRadioButton80 = new javax.swing.JRadioButton();
        jRadioButton81 = new javax.swing.JRadioButton();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextArea7 = new javax.swing.JTextArea();
        jPanel47 = new javax.swing.JPanel();
        jPanel49 = new javax.swing.JPanel();
        jRadioButton74 = new javax.swing.JRadioButton();
        jRadioButton75 = new javax.swing.JRadioButton();
        jRadioButton76 = new javax.swing.JRadioButton();
        jRadioButton77 = new javax.swing.JRadioButton();
        jLabel30 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea6 = new javax.swing.JTextArea();
        jPanel48 = new javax.swing.JPanel();
        jPanel43 = new javax.swing.JPanel();
        jRadioButton67 = new javax.swing.JRadioButton();
        jRadioButton71 = new javax.swing.JRadioButton();
        jRadioButton72 = new javax.swing.JRadioButton();
        jRadioButton73 = new javax.swing.JRadioButton();
        jLabel29 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea5 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel28.setText("Quiz Round");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(416, 416, 416)
                .addComponent(jLabel28)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jLabel28)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        Subbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Subbtn.setText("SUBMIT");
        Subbtn.setEnabled(false);
        Subbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubbtnActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jCheckBox1.setText("Don'tCheckMe");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addComponent(Subbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addComponent(Subbtn))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new java.awt.GridLayout(5, 0));

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton4.setText("Q 1");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4);

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setText("Q 2");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3);

        jButton6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton6.setText("Q 3");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton6);

        jButton7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton7.setText("Q4");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton7);

        jButton8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton8.setText("Q 5");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton8);

        jButton13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton13.setText("Q 6");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton13);

        jButton11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton11.setText("Q7");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton11);

        jButton12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton12.setText("Q 8");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton12);

        jButton14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton14.setText("Q 9");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton14);

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Q10");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);

        jButton15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton15.setText("Q 11");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton15);

        jButton10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton10.setText("Q 12");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton10);

        jButton16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton16.setText("Q 13");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton16);

        jButton9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton9.setText("Q 14");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton9);

        jButton17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton17.setText("Q 15");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton17);

        jButton22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton22.setText("Q16");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton22);

        jButton18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton18.setText("Q 17");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton18);

        jButton19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton19.setText("Q 18");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton19);

        jButton21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton21.setText("Q 19");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton21);

        jButton24.setBackground(new java.awt.Color(204, 204, 204));
        jButton24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton24.setText("Q20");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton24);

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton5.setText("Q 21");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton5);

        jButton20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton20.setText("Q 22");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton20);

        jButton23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton23.setText("Q23");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton23);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Q24");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);

        jButton25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton25.setText("Q25");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton25);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel7.setLayout(new java.awt.CardLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Q ) what is hacking?");

        jRadioButton1.setBackground(new java.awt.Color(255, 255, 255));
        bgq1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioButton1.setText("Getting access to others computers with out their permission ");

        jRadioButton2.setBackground(new java.awt.Color(255, 255, 255));
        bgq1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton2.setText("finding out someones password ");

        jRadioButton3.setBackground(new java.awt.Color(255, 255, 255));
        bgq1.add(jRadioButton3);
        jRadioButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton3.setText("\t using codes in games to get things");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton1)
                    .addComponent(jLabel2))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton1)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton2)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton3)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(138, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(91, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel3, "card2");

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Q ) \tHacking is ");

        jRadioButton4.setBackground(new java.awt.Color(255, 255, 255));
        bgq2.add(jRadioButton4);
        jRadioButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton4.setText("awesome ");

        jRadioButton5.setBackground(new java.awt.Color(255, 255, 255));
        bgq2.add(jRadioButton5);
        jRadioButton5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton5.setText("\t illegal ");

        jRadioButton6.setBackground(new java.awt.Color(255, 255, 255));
        bgq2.add(jRadioButton6);
        jRadioButton6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton6.setText(" legal ");

        jRadioButton7.setBackground(new java.awt.Color(255, 255, 255));
        bgq2.add(jRadioButton7);
        jRadioButton7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton7.setText("awesome ");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton7)
                    .addComponent(jRadioButton6)
                    .addComponent(jRadioButton5)
                    .addComponent(jRadioButton4)
                    .addComponent(jLabel3))
                .addContainerGap(306, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton4)
                .addGap(15, 15, 15)
                .addComponent(jRadioButton5)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton6)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton7)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(73, Short.MAX_VALUE)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel8, "card3");

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Q ) What are the two types of hackers called ? ");

        jRadioButton8.setBackground(new java.awt.Color(255, 255, 255));
        bgq3.add(jRadioButton8);
        jRadioButton8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton8.setText("Type 1 and Type 2 ");
        jRadioButton8.setActionCommand("");

        jRadioButton9.setBackground(new java.awt.Color(255, 255, 255));
        bgq3.add(jRadioButton9);
        jRadioButton9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton9.setText("Type A and Type B ");

        jRadioButton10.setBackground(new java.awt.Color(255, 255, 255));
        bgq3.add(jRadioButton10);
        jRadioButton10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton10.setText("White and Grey Hacker ");

        jRadioButton11.setBackground(new java.awt.Color(255, 255, 255));
        bgq3.add(jRadioButton11);
        jRadioButton11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton11.setText("Black and Red Hacker ");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton11)
                    .addComponent(jRadioButton10)
                    .addComponent(jRadioButton9)
                    .addComponent(jRadioButton8)
                    .addComponent(jLabel4))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton8)
                .addGap(15, 15, 15)
                .addComponent(jRadioButton9)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton10)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton11)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel9, "card4");

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Q ) What does a type 1 hacker do ?");

        jRadioButton12.setBackground(new java.awt.Color(255, 255, 255));
        bgq4.add(jRadioButton12);
        jRadioButton12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton12.setText("\t Just hangs out at McDonalds ");
        jRadioButton12.setActionCommand("");

        jRadioButton13.setBackground(new java.awt.Color(255, 255, 255));
        bgq4.add(jRadioButton13);
        jRadioButton13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton13.setText("Does nothing wrong while he/she hacks ");

        jRadioButton14.setBackground(new java.awt.Color(255, 255, 255));
        bgq4.add(jRadioButton14);
        jRadioButton14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioButton14.setText("Just snoops around or make minor changes to a computer system");

        jRadioButton15.setBackground(new java.awt.Color(255, 255, 255));
        bgq4.add(jRadioButton15);
        jRadioButton15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton15.setText("Is trying to protect your computer ");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton15)
                    .addComponent(jRadioButton14)
                    .addComponent(jRadioButton13)
                    .addComponent(jRadioButton12)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton12)
                .addGap(15, 15, 15)
                .addComponent(jRadioButton13)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton14)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton15)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(137, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel10, "card5");

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));

        jRadioButton16.setBackground(new java.awt.Color(255, 255, 255));
        bgq5.add(jRadioButton16);
        jRadioButton16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton16.setText("\t Just hangs out at McDonalds ");
        jRadioButton16.setActionCommand("");

        jRadioButton17.setBackground(new java.awt.Color(255, 255, 255));
        bgq5.add(jRadioButton17);
        jRadioButton17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioButton17.setText("Steal information and cause damage to your computer system ");

        jRadioButton18.setBackground(new java.awt.Color(255, 255, 255));
        bgq5.add(jRadioButton18);
        jRadioButton18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioButton18.setText("Just snoops around or make minor changes to a computer system");

        jRadioButton19.setBackground(new java.awt.Color(255, 255, 255));
        bgq5.add(jRadioButton19);
        jRadioButton19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton19.setText(" Is trying to protect your computer ");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("Q ) What does a type 2 hacker do ? ");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton18)
                    .addComponent(jRadioButton19)
                    .addComponent(jRadioButton17)
                    .addComponent(jRadioButton16)
                    .addComponent(jLabel7))
                .addContainerGap(135, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton16)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton17)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton18)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton19)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 27, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel11, "card6");

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));

        jPanel22.setBackground(new java.awt.Color(255, 255, 255));

        jRadioButton20.setBackground(new java.awt.Color(255, 255, 255));
        bgq6.add(jRadioButton20);
        jRadioButton20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton20.setText(" So they can be funny ");
        jRadioButton20.setActionCommand("");

        jRadioButton21.setBackground(new java.awt.Color(255, 255, 255));
        bgq6.add(jRadioButton21);
        jRadioButton21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton21.setText("So they protect your computer");

        jRadioButton22.setBackground(new java.awt.Color(255, 255, 255));
        bgq6.add(jRadioButton22);
        jRadioButton22.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jRadioButton22.setText("gain access to credit card numbers, social security records, and bank account numbers");

        jRadioButton23.setBackground(new java.awt.Color(255, 255, 255));
        bgq6.add(jRadioButton23);
        jRadioButton23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton23.setText("Just snoops around or make minor changes to a computer system ");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("Q )Why do hackers hack ? ");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton23)
                    .addComponent(jRadioButton21)
                    .addComponent(jRadioButton20)
                    .addComponent(jLabel8)
                    .addComponent(jRadioButton22))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton20)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton21)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton23)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel17, "card7");

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));

        jPanel23.setBackground(new java.awt.Color(255, 255, 255));

        jRadioButton24.setBackground(new java.awt.Color(255, 255, 255));
        bgq7.add(jRadioButton24);
        jRadioButton24.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton24.setText("True ");
        jRadioButton24.setActionCommand("");

        jRadioButton25.setBackground(new java.awt.Color(255, 255, 255));
        bgq7.add(jRadioButton25);
        jRadioButton25.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton25.setText("False");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Q )Its not hacking if they just snoop around my computer ");

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton25)
                    .addComponent(jRadioButton24)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton24)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton25)
                .addContainerGap(108, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel18, "card8");

        jPanel19.setBackground(new java.awt.Color(255, 255, 255));

        jPanel24.setBackground(new java.awt.Color(255, 255, 255));

        jRadioButton26.setBackground(new java.awt.Color(255, 255, 255));
        bgq8.add(jRadioButton26);
        jRadioButton26.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton26.setText("\t Hacking is never legal ");
        jRadioButton26.setActionCommand("");

        jRadioButton27.setBackground(new java.awt.Color(255, 255, 255));
        bgq8.add(jRadioButton27);
        jRadioButton27.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton27.setText("Hacking is always legal ");

        jRadioButton28.setBackground(new java.awt.Color(255, 255, 255));
        bgq8.add(jRadioButton28);
        jRadioButton28.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton28.setText("Hired by a company to test firewall security ");

        jRadioButton29.setBackground(new java.awt.Color(255, 255, 255));
        bgq8.add(jRadioButton29);
        jRadioButton29.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton29.setText("\t I don't know what hacking is ");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setText("Q ) When is hacking legal ");

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton28)
                    .addComponent(jRadioButton29)
                    .addComponent(jRadioButton27)
                    .addComponent(jRadioButton26)
                    .addComponent(jLabel10))
                .addContainerGap(135, Short.MAX_VALUE))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton26)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton27)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton28)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton29)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel19, "card9");

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));

        jPanel25.setBackground(new java.awt.Color(255, 255, 255));

        jRadioButton30.setBackground(new java.awt.Color(255, 255, 255));
        bgq9.add(jRadioButton30);
        jRadioButton30.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton30.setText("True ");
        jRadioButton30.setActionCommand("");

        jRadioButton31.setBackground(new java.awt.Color(255, 255, 255));
        bgq9.add(jRadioButton31);
        jRadioButton31.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton31.setText("False");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setText("Q ) Hacking leads to identity theft ");

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton31)
                    .addComponent(jRadioButton30)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel11)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton30)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton31)
                .addContainerGap(108, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel20, "card10");

        jPanel21.setBackground(new java.awt.Color(255, 255, 255));

        jPanel26.setBackground(new java.awt.Color(255, 255, 255));

        jRadioButton32.setBackground(new java.awt.Color(255, 255, 255));
        bgq10.add(jRadioButton32);
        jRadioButton32.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton32.setText("Pre-attack");
        jRadioButton32.setActionCommand("");

        jRadioButton33.setBackground(new java.awt.Color(255, 255, 255));
        bgq10.add(jRadioButton33);
        jRadioButton33.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton33.setText("Attack");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Q ) Scanning is performed in which phase of a pen test?");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Hint: Pen-test steps are different from the five hacking steps");

        jRadioButton38.setBackground(new java.awt.Color(255, 255, 255));
        bgq10.add(jRadioButton38);
        jRadioButton38.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton38.setText(" Reconnaissance");

        jRadioButton39.setBackground(new java.awt.Color(255, 255, 255));
        bgq10.add(jRadioButton39);
        jRadioButton39.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton39.setText(" Post-attack");

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton39)
                    .addComponent(jRadioButton38)
                    .addComponent(jRadioButton33)
                    .addComponent(jRadioButton32))
                .addGap(495, 495, 495))
            .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel26Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addGap(57, 57, 57)
                .addComponent(jRadioButton32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jRadioButton33)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton39)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton38)
                .addGap(31, 31, 31))
            .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel26Layout.createSequentialGroup()
                    .addGap(45, 45, 45)
                    .addComponent(jLabel13)
                    .addContainerGap(206, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel21, "card11");

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jPanel28.setBackground(new java.awt.Color(255, 255, 255));

        jRadioButton34.setBackground(new java.awt.Color(255, 255, 255));
        bgq11.add(jRadioButton34);
        jRadioButton34.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton34.setText("A fancy word for time travel");
        jRadioButton34.setActionCommand("");

        jRadioButton35.setBackground(new java.awt.Color(255, 255, 255));
        bgq11.add(jRadioButton35);
        jRadioButton35.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton35.setText(" A active text composition that links two web pages or scripts");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setText("Q ) What is a hyperlink?");

        jRadioButton40.setBackground(new java.awt.Color(255, 255, 255));
        bgq11.add(jRadioButton40);
        jRadioButton40.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton40.setText("I died in the 1600's");

        jRadioButton41.setBackground(new java.awt.Color(255, 255, 255));
        bgq11.add(jRadioButton41);
        jRadioButton41.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton41.setText("A piece of literary work");

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel28Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton41)
                    .addComponent(jRadioButton40)
                    .addComponent(jRadioButton35)
                    .addComponent(jRadioButton34))
                .addGap(495, 495, 495))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addGap(57, 57, 57)
                .addComponent(jRadioButton34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jRadioButton35)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton41)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton40)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(177, 177, 177))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel4, "card12");

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jPanel29.setBackground(new java.awt.Color(255, 255, 255));

        jRadioButton36.setBackground(new java.awt.Color(255, 255, 255));
        bgq12.add(jRadioButton36);
        jRadioButton36.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton36.setText("Starbucks");
        jRadioButton36.setActionCommand("");

        jRadioButton37.setBackground(new java.awt.Color(255, 255, 255));
        bgq12.add(jRadioButton37);
        jRadioButton37.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton37.setText(" Javascript");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setText("Q ) What script is Java based on?");

        jRadioButton42.setBackground(new java.awt.Color(255, 255, 255));
        bgq12.add(jRadioButton42);
        jRadioButton42.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton42.setText("PHP");

        jRadioButton43.setBackground(new java.awt.Color(255, 255, 255));
        bgq12.add(jRadioButton43);
        jRadioButton43.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton43.setText("Shakespeare's works");

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel29Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton43)
                    .addComponent(jRadioButton42)
                    .addComponent(jRadioButton37)
                    .addComponent(jRadioButton36))
                .addGap(495, 495, 495))
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addGap(57, 57, 57)
                .addComponent(jRadioButton36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jRadioButton37)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton43)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton42)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel6, "card13");

        jPanel27.setBackground(new java.awt.Color(255, 255, 255));

        jPanel30.setBackground(new java.awt.Color(255, 255, 255));

        jRadioButton44.setBackground(new java.awt.Color(255, 255, 255));
        bgq13.add(jRadioButton44);
        jRadioButton44.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton44.setText("Preprocessed Hypertext Page");
        jRadioButton44.setActionCommand("");

        jRadioButton45.setBackground(new java.awt.Color(255, 255, 255));
        bgq13.add(jRadioButton45);
        jRadioButton45.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton45.setText("Hypertext Markup Language");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setText("Q ) What does PHP stand for??");

        jRadioButton46.setBackground(new java.awt.Color(255, 255, 255));
        bgq13.add(jRadioButton46);
        jRadioButton46.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton46.setText("\tHypertext Transfer Protocol");

        jRadioButton47.setBackground(new java.awt.Color(255, 255, 255));
        bgq13.add(jRadioButton47);
        jRadioButton47.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton47.setText("PHP: Hypertext Preprocessor");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel30Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton47)
                    .addComponent(jRadioButton46)
                    .addComponent(jRadioButton45)
                    .addComponent(jRadioButton44))
                .addGap(495, 495, 495))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addGap(57, 57, 57)
                .addComponent(jRadioButton44)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jRadioButton45)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton47)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton46)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel27Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel27, "card14");

        jPanel31.setBackground(new java.awt.Color(255, 255, 255));

        jPanel33.setBackground(new java.awt.Color(255, 255, 255));

        jRadioButton48.setBackground(new java.awt.Color(255, 255, 255));
        bgq14.add(jRadioButton48);
        jRadioButton48.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton48.setText("Input Parameters");
        jRadioButton48.setActionCommand("");

        jRadioButton49.setBackground(new java.awt.Color(255, 255, 255));
        bgq14.add(jRadioButton49);
        jRadioButton49.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton49.setText("Dynamic SQL with bind arguments");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setText("Q ) Code that is most vulnerable to SQL Injection attack contains");

        jRadioButton50.setBackground(new java.awt.Color(255, 255, 255));
        bgq14.add(jRadioButton50);
        jRadioButton50.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton50.setText("\tCall to external function");

        jRadioButton51.setBackground(new java.awt.Color(255, 255, 255));
        bgq14.add(jRadioButton51);
        jRadioButton51.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton51.setText("Dynamic SQL with concatenated input values");

        javax.swing.GroupLayout jPanel33Layout = new javax.swing.GroupLayout(jPanel33);
        jPanel33.setLayout(jPanel33Layout);
        jPanel33Layout.setHorizontalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel33Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton51)
                    .addComponent(jRadioButton50)
                    .addComponent(jRadioButton49)
                    .addComponent(jRadioButton48))
                .addGap(495, 495, 495))
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel33Layout.setVerticalGroup(
            jPanel33Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel33Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addGap(57, 57, 57)
                .addComponent(jRadioButton48)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jRadioButton49)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton51)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton50)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel31Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146))
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel31, "card15");

        jPanel32.setBackground(new java.awt.Color(255, 255, 255));

        jPanel34.setBackground(new java.awt.Color(255, 255, 255));

        jRadioButton52.setBackground(new java.awt.Color(255, 255, 255));
        bgq15.add(jRadioButton52);
        jRadioButton52.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton52.setText("True");
        jRadioButton52.setActionCommand("");

        jRadioButton53.setBackground(new java.awt.Color(255, 255, 255));
        bgq15.add(jRadioButton53);
        jRadioButton53.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton53.setText("False");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("Q ) Only code which are used in web application are vulnerable to SQL injection");

        javax.swing.GroupLayout jPanel34Layout = new javax.swing.GroupLayout(jPanel34);
        jPanel34.setLayout(jPanel34Layout);
        jPanel34Layout.setHorizontalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton52)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 767, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton53))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel34Layout.setVerticalGroup(
            jPanel34Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel34Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addGap(29, 29, 29)
                .addComponent(jRadioButton52)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton53)
                .addContainerGap(143, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel32Layout = new javax.swing.GroupLayout(jPanel32);
        jPanel32.setLayout(jPanel32Layout);
        jPanel32Layout.setHorizontalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel32Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146))
        );
        jPanel32Layout.setVerticalGroup(
            jPanel32Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel32Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel32, "card16");

        jPanel35.setBackground(new java.awt.Color(255, 255, 255));

        jPanel40.setBackground(new java.awt.Color(255, 255, 255));

        jRadioButton54.setBackground(new java.awt.Color(255, 255, 255));
        bgq16.add(jRadioButton54);
        jRadioButton54.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton54.setText("240m");
        jRadioButton54.setActionCommand("");

        jRadioButton55.setBackground(new java.awt.Color(255, 255, 255));
        bgq16.add(jRadioButton55);
        jRadioButton55.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton55.setText("None of the above");

        jRadioButton56.setBackground(new java.awt.Color(255, 255, 255));
        bgq16.add(jRadioButton56);
        jRadioButton56.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton56.setText("300 m ");
        jRadioButton56.setToolTipText("");

        jRadioButton57.setBackground(new java.awt.Color(255, 255, 255));
        bgq16.add(jRadioButton57);
        jRadioButton57.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton57.setText("120 km/hr");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("Q )");

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setText("A train passes a station platform in 36 seconds and a man standing on the platform in 20 seconds. If the speed of the train is 54 km/hr, what is the length of the platform?");
        jTextArea2.setAutoscrolls(false);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel40Layout = new javax.swing.GroupLayout(jPanel40);
        jPanel40.setLayout(jPanel40Layout);
        jPanel40Layout.setHorizontalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel40Layout.createSequentialGroup()
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel40Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))
                    .addGroup(jPanel40Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton56)
                            .addComponent(jRadioButton57))
                        .addGap(103, 103, 103)
                        .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton55)
                            .addComponent(jRadioButton54))))
                .addGap(163, 163, 163))
        );
        jPanel40Layout.setVerticalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel40Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton57)
                    .addComponent(jRadioButton54))
                .addGap(18, 18, 18)
                .addGroup(jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton56)
                    .addComponent(jRadioButton55))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout jPanel35Layout = new javax.swing.GroupLayout(jPanel35);
        jPanel35.setLayout(jPanel35Layout);
        jPanel35Layout.setHorizontalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel35Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146))
        );
        jPanel35Layout.setVerticalGroup(
            jPanel35Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel35Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel35, "card17");

        jPanel36.setBackground(new java.awt.Color(255, 255, 255));

        jPanel41.setBackground(new java.awt.Color(255, 255, 255));

        jRadioButton58.setBackground(new java.awt.Color(255, 255, 255));
        bgq17.add(jRadioButton58);
        jRadioButton58.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton58.setText("1050");
        jRadioButton58.setActionCommand("");
        jRadioButton58.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton58ActionPerformed(evt);
            }
        });

        jRadioButton59.setBackground(new java.awt.Color(255, 255, 255));
        bgq17.add(jRadioButton59);
        jRadioButton59.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton59.setText("None of the above");

        jRadioButton60.setBackground(new java.awt.Color(255, 255, 255));
        bgq17.add(jRadioButton60);
        jRadioButton60.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton60.setText("25200");
        jRadioButton60.setToolTipText("");

        jRadioButton61.setBackground(new java.awt.Color(255, 255, 255));
        bgq17.add(jRadioButton61);
        jRadioButton61.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton61.setText("210");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel19.setText("Q )");

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setLineWrap(true);
        jTextArea3.setRows(5);
        jTextArea3.setText("Out of 7 consonants and 4 vowels, how many words of 3 consonants and 2 vowels can be formed?");
        jTextArea3.setAutoscrolls(false);
        jScrollPane3.setViewportView(jTextArea3);

        javax.swing.GroupLayout jPanel41Layout = new javax.swing.GroupLayout(jPanel41);
        jPanel41.setLayout(jPanel41Layout);
        jPanel41Layout.setHorizontalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel41Layout.createSequentialGroup()
                .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel41Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))
                    .addGroup(jPanel41Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton60)
                            .addComponent(jRadioButton61))
                        .addGap(103, 103, 103)
                        .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton59)
                            .addComponent(jRadioButton58))))
                .addGap(163, 163, 163))
        );
        jPanel41Layout.setVerticalGroup(
            jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel41Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton61)
                    .addComponent(jRadioButton58))
                .addGap(18, 18, 18)
                .addGroup(jPanel41Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton60)
                    .addComponent(jRadioButton59))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout jPanel36Layout = new javax.swing.GroupLayout(jPanel36);
        jPanel36.setLayout(jPanel36Layout);
        jPanel36Layout.setHorizontalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel36Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146))
        );
        jPanel36Layout.setVerticalGroup(
            jPanel36Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel36Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel36, "card18");

        jPanel37.setBackground(new java.awt.Color(255, 255, 255));

        jPanel42.setBackground(new java.awt.Color(255, 255, 255));

        jRadioButton62.setBackground(new java.awt.Color(255, 255, 255));
        bgq18.add(jRadioButton62);
        jRadioButton62.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton62.setText("A");
        jRadioButton62.setActionCommand("");
        jRadioButton62.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton62ActionPerformed(evt);
            }
        });

        jRadioButton63.setBackground(new java.awt.Color(255, 255, 255));
        bgq18.add(jRadioButton63);
        jRadioButton63.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton63.setText("D");

        jRadioButton64.setBackground(new java.awt.Color(255, 255, 255));
        bgq18.add(jRadioButton64);
        jRadioButton64.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton64.setText("H");
        jRadioButton64.setToolTipText("");

        jRadioButton65.setBackground(new java.awt.Color(255, 255, 255));
        bgq18.add(jRadioButton65);
        jRadioButton65.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton65.setText("B");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel20.setText("Q )");

        jTextArea4.setEditable(false);
        jTextArea4.setColumns(20);
        jTextArea4.setFont(new java.awt.Font("Malgun Gothic", 0, 13)); // NOI18N
        jTextArea4.setLineWrap(true);
        jTextArea4.setRows(5);
        jTextArea4.setText("In a lake there are 10 steps labelled using alphabets from A to J .Starting from step A , every minute frog jumps  to the fourth step from where it started  that i s from step A it will go to step E and from step E it will go to  I etc . Where would be the frog after 60 min if it starts from step A ?\n");
        jTextArea4.setAutoscrolls(false);
        jScrollPane4.setViewportView(jTextArea4);

        javax.swing.GroupLayout jPanel42Layout = new javax.swing.GroupLayout(jPanel42);
        jPanel42.setLayout(jPanel42Layout);
        jPanel42Layout.setHorizontalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel42Layout.createSequentialGroup()
                .addGap(147, 147, 147)
                .addGroup(jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton65)
                    .addComponent(jRadioButton64))
                .addGap(214, 214, 214)
                .addGroup(jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton63)
                    .addComponent(jRadioButton62))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel42Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120))
        );
        jPanel42Layout.setVerticalGroup(
            jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel42Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel42Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(0, 115, Short.MAX_VALUE))
                    .addComponent(jScrollPane4))
                .addGap(18, 18, 18)
                .addGroup(jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton65)
                    .addComponent(jRadioButton62))
                .addGap(18, 18, 18)
                .addGroup(jPanel42Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton64)
                    .addComponent(jRadioButton63))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout jPanel37Layout = new javax.swing.GroupLayout(jPanel37);
        jPanel37.setLayout(jPanel37Layout);
        jPanel37Layout.setHorizontalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel37Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(146, 146, 146))
        );
        jPanel37Layout.setVerticalGroup(
            jPanel37Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel37Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel37, "card19");

        jPanel38.setBackground(new java.awt.Color(255, 255, 255));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setText("Q ) Study the information carefully and answer following questions :");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel22.setText("(i) A, B, C, D, E, F and G are sitting on a wall and all of them are facing east");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel23.setText("(ii) C is on the immediate right of D.");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel24.setText("(iv) G is between E and F");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel25.setText("(iii) B is at an extreme end and has E as his neighbour");

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel26.setText("(v) D is sitting third from the south end.");

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel27.setText("Who is sitting to the right of E?");

        jRadioButton66.setBackground(new java.awt.Color(255, 255, 255));
        bgq19.add(jRadioButton66);
        jRadioButton66.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton66.setText("A");

        jRadioButton68.setBackground(new java.awt.Color(255, 255, 255));
        bgq19.add(jRadioButton68);
        jRadioButton68.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton68.setText("D");

        jRadioButton69.setBackground(new java.awt.Color(255, 255, 255));
        bgq19.add(jRadioButton69);
        jRadioButton69.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton69.setText("C");

        jRadioButton70.setBackground(new java.awt.Color(255, 255, 255));
        bgq19.add(jRadioButton70);
        jRadioButton70.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton70.setText("F");

        javax.swing.GroupLayout jPanel38Layout = new javax.swing.GroupLayout(jPanel38);
        jPanel38.setLayout(jPanel38Layout);
        jPanel38Layout.setHorizontalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel38Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabel21))
                    .addGroup(jPanel38Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel22)
                            .addComponent(jLabel25)
                            .addComponent(jLabel24)
                            .addComponent(jLabel26)
                            .addComponent(jLabel27)))
                    .addGroup(jPanel38Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel38Layout.createSequentialGroup()
                                .addComponent(jRadioButton68)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jRadioButton70))
                            .addGroup(jPanel38Layout.createSequentialGroup()
                                .addComponent(jRadioButton66)
                                .addGap(144, 144, 144)
                                .addComponent(jRadioButton69)))))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel38Layout.setVerticalGroup(
            jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel38Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel23)
                .addGap(8, 8, 8)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel26)
                .addGap(18, 18, 18)
                .addComponent(jLabel27)
                .addGap(18, 18, 18)
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton66)
                    .addComponent(jRadioButton69))
                .addGap(18, 18, 18)
                .addGroup(jPanel38Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton70)
                    .addComponent(jRadioButton68))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel38, "card20");

        jPanel39.setBackground(new java.awt.Color(255, 255, 255));

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("A man worked for a high-security institution, and one day he went in to work only to find that he could not log in to his computer terminal. His password wouldn't work. Then he remembered that the passwords are reset every month for security purposes. So he went to his boss and they had this conversation: Man-\"Hey boss, my password is out of date.\" Boss-\"Yes, that's right. The password is different, but if you listen carefully you should be able to figure out the new one: It has the same amount of letters as your old password, but only four of the letters are the same.\" Man: \"Thanks boss.\" With that, he went and correctly logged into his station. ");
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Q ) What is the New Password ?");

        javax.swing.GroupLayout jPanel39Layout = new javax.swing.GroupLayout(jPanel39);
        jPanel39.setLayout(jPanel39Layout);
        jPanel39Layout.setHorizontalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel39Layout.createSequentialGroup()
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel39Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(restf, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel39Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel39Layout.setVerticalGroup(
            jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel39Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel39Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(restf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel39, "card21");

        jPanel44.setBackground(new java.awt.Color(255, 255, 255));

        jPanel52.setBackground(new java.awt.Color(255, 255, 255));

        jRadioButton86.setBackground(new java.awt.Color(255, 255, 255));
        bgq21.add(jRadioButton86);
        jRadioButton86.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton86.setText("10% of a");
        jRadioButton86.setActionCommand("");
        jRadioButton86.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton86ActionPerformed(evt);
            }
        });

        jRadioButton87.setBackground(new java.awt.Color(255, 255, 255));
        bgq21.add(jRadioButton87);
        jRadioButton87.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton87.setText("20% of a");

        jRadioButton88.setBackground(new java.awt.Color(255, 255, 255));
        bgq21.add(jRadioButton88);
        jRadioButton88.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton88.setText("4% of a");
        jRadioButton88.setToolTipText("");

        jRadioButton89.setBackground(new java.awt.Color(255, 255, 255));
        bgq21.add(jRadioButton89);
        jRadioButton89.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton89.setText(" None of these");

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel33.setText("Q )");

        jTextArea9.setEditable(false);
        jTextArea9.setColumns(20);
        jTextArea9.setLineWrap(true);
        jTextArea9.setRows(5);
        jTextArea9.setText("If 20% of a = b, then b% of 20 is the same as:");
        jTextArea9.setAutoscrolls(false);
        jScrollPane9.setViewportView(jTextArea9);

        javax.swing.GroupLayout jPanel52Layout = new javax.swing.GroupLayout(jPanel52);
        jPanel52.setLayout(jPanel52Layout);
        jPanel52Layout.setHorizontalGroup(
            jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel52Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel33)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel52Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton89)
                    .addComponent(jRadioButton88))
                .addGap(125, 125, 125)
                .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton86)
                    .addComponent(jRadioButton87))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel52Layout.setVerticalGroup(
            jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel52Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel33)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton89)
                    .addComponent(jRadioButton86))
                .addGap(18, 18, 18)
                .addGroup(jPanel52Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton88)
                    .addComponent(jRadioButton87))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout jPanel44Layout = new javax.swing.GroupLayout(jPanel44);
        jPanel44.setLayout(jPanel44Layout);
        jPanel44Layout.setHorizontalGroup(
            jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel44Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );
        jPanel44Layout.setVerticalGroup(
            jPanel44Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel44Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel44, "card22");

        jPanel45.setBackground(new java.awt.Color(255, 255, 255));

        jPanel51.setBackground(new java.awt.Color(255, 255, 255));

        jRadioButton82.setBackground(new java.awt.Color(255, 255, 255));
        bgq22.add(jRadioButton82);
        jRadioButton82.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton82.setText("24 m");
        jRadioButton82.setActionCommand("");
        jRadioButton82.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton82ActionPerformed(evt);
            }
        });

        jRadioButton83.setBackground(new java.awt.Color(255, 255, 255));
        bgq22.add(jRadioButton83);
        jRadioButton83.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton83.setText("28 m");

        jRadioButton84.setBackground(new java.awt.Color(255, 255, 255));
        bgq22.add(jRadioButton84);
        jRadioButton84.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton84.setText("32 m");
        jRadioButton84.setToolTipText("");

        jRadioButton85.setBackground(new java.awt.Color(255, 255, 255));
        bgq22.add(jRadioButton85);
        jRadioButton85.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton85.setText("36 m");

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel32.setText("Q )");

        jTextArea8.setEditable(false);
        jTextArea8.setColumns(20);
        jTextArea8.setLineWrap(true);
        jTextArea8.setRows(5);
        jTextArea8.setText(" A can run 224 metre in 28 seconds and B in 32 seconds. By what distance A beat B?");
        jTextArea8.setAutoscrolls(false);
        jScrollPane8.setViewportView(jTextArea8);

        javax.swing.GroupLayout jPanel51Layout = new javax.swing.GroupLayout(jPanel51);
        jPanel51.setLayout(jPanel51Layout);
        jPanel51Layout.setHorizontalGroup(
            jPanel51Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel51Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel32)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel51Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addGroup(jPanel51Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton85)
                    .addComponent(jRadioButton84))
                .addGap(125, 125, 125)
                .addGroup(jPanel51Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton82)
                    .addComponent(jRadioButton83))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel51Layout.setVerticalGroup(
            jPanel51Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel51Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel51Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel32)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel51Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton85)
                    .addComponent(jRadioButton82))
                .addGap(18, 18, 18)
                .addGroup(jPanel51Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton84)
                    .addComponent(jRadioButton83))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout jPanel45Layout = new javax.swing.GroupLayout(jPanel45);
        jPanel45.setLayout(jPanel45Layout);
        jPanel45Layout.setHorizontalGroup(
            jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel45Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );
        jPanel45Layout.setVerticalGroup(
            jPanel45Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel45Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel45, "card23");

        jPanel46.setBackground(new java.awt.Color(255, 255, 255));

        jPanel50.setBackground(new java.awt.Color(255, 255, 255));

        jRadioButton78.setBackground(new java.awt.Color(255, 255, 255));
        bgq20.add(jRadioButton78);
        jRadioButton78.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton78.setText("Monday");
        jRadioButton78.setActionCommand("");
        jRadioButton78.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton78ActionPerformed(evt);
            }
        });

        jRadioButton79.setBackground(new java.awt.Color(255, 255, 255));
        bgq20.add(jRadioButton79);
        jRadioButton79.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton79.setText("Thursday");

        jRadioButton80.setBackground(new java.awt.Color(255, 255, 255));
        bgq20.add(jRadioButton80);
        jRadioButton80.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton80.setText("Sunday");
        jRadioButton80.setToolTipText("");

        jRadioButton81.setBackground(new java.awt.Color(255, 255, 255));
        bgq20.add(jRadioButton81);
        jRadioButton81.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton81.setText("Saturday");

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel31.setText("Q )");

        jTextArea7.setEditable(false);
        jTextArea7.setColumns(20);
        jTextArea7.setLineWrap(true);
        jTextArea7.setRows(5);
        jTextArea7.setText("What day of the week does May 28 2006 fall on");
        jTextArea7.setAutoscrolls(false);
        jScrollPane7.setViewportView(jTextArea7);

        javax.swing.GroupLayout jPanel50Layout = new javax.swing.GroupLayout(jPanel50);
        jPanel50.setLayout(jPanel50Layout);
        jPanel50Layout.setHorizontalGroup(
            jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel50Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel31)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(157, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel50Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton81)
                    .addComponent(jRadioButton80))
                .addGap(125, 125, 125)
                .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton78)
                    .addComponent(jRadioButton79))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel50Layout.setVerticalGroup(
            jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel50Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton81)
                    .addComponent(jRadioButton78))
                .addGap(18, 18, 18)
                .addGroup(jPanel50Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton80)
                    .addComponent(jRadioButton79))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout jPanel46Layout = new javax.swing.GroupLayout(jPanel46);
        jPanel46.setLayout(jPanel46Layout);
        jPanel46Layout.setHorizontalGroup(
            jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel46Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );
        jPanel46Layout.setVerticalGroup(
            jPanel46Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel46Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel46, "card24");

        jPanel47.setBackground(new java.awt.Color(255, 255, 255));

        jPanel49.setBackground(new java.awt.Color(255, 255, 255));

        jRadioButton74.setBackground(new java.awt.Color(255, 255, 255));
        bgq23.add(jRadioButton74);
        jRadioButton74.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton74.setText("1/5");
        jRadioButton74.setActionCommand("");
        jRadioButton74.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton74ActionPerformed(evt);
            }
        });

        jRadioButton75.setBackground(new java.awt.Color(255, 255, 255));
        bgq23.add(jRadioButton75);
        jRadioButton75.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton75.setText("1/7");

        jRadioButton76.setBackground(new java.awt.Color(255, 255, 255));
        bgq23.add(jRadioButton76);
        jRadioButton76.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton76.setText("3/5");
        jRadioButton76.setToolTipText("");

        jRadioButton77.setBackground(new java.awt.Color(255, 255, 255));
        bgq23.add(jRadioButton77);
        jRadioButton77.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton77.setText("2/5");

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel30.setText("Q )");

        jTextArea6.setEditable(false);
        jTextArea6.setColumns(20);
        jTextArea6.setLineWrap(true);
        jTextArea6.setRows(5);
        jTextArea6.setText("What is the probability of selecting a prime number from 1,2,3,... 10 ?");
        jTextArea6.setAutoscrolls(false);
        jScrollPane6.setViewportView(jTextArea6);

        javax.swing.GroupLayout jPanel49Layout = new javax.swing.GroupLayout(jPanel49);
        jPanel49.setLayout(jPanel49Layout);
        jPanel49Layout.setHorizontalGroup(
            jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel49Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(171, 171, 171))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel49Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jRadioButton77)
                    .addComponent(jRadioButton76))
                .addGap(125, 125, 125)
                .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton74)
                    .addComponent(jRadioButton75))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel49Layout.setVerticalGroup(
            jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel49Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton77)
                    .addComponent(jRadioButton74))
                .addGap(18, 18, 18)
                .addGroup(jPanel49Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton76)
                    .addComponent(jRadioButton75))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout jPanel47Layout = new javax.swing.GroupLayout(jPanel47);
        jPanel47.setLayout(jPanel47Layout);
        jPanel47Layout.setHorizontalGroup(
            jPanel47Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel47Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel49, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );
        jPanel47Layout.setVerticalGroup(
            jPanel47Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel47Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel49, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel47, "card25");

        jPanel48.setBackground(new java.awt.Color(255, 255, 255));

        jPanel43.setBackground(new java.awt.Color(255, 255, 255));

        jRadioButton67.setBackground(new java.awt.Color(255, 255, 255));
        bgq24.add(jRadioButton67);
        jRadioButton67.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton67.setText("2/13");
        jRadioButton67.setActionCommand("");
        jRadioButton67.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton67ActionPerformed(evt);
            }
        });

        jRadioButton71.setBackground(new java.awt.Color(255, 255, 255));
        bgq24.add(jRadioButton71);
        jRadioButton71.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton71.setText("1/2");

        jRadioButton72.setBackground(new java.awt.Color(255, 255, 255));
        bgq24.add(jRadioButton72);
        jRadioButton72.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton72.setText("1/13");
        jRadioButton72.setToolTipText("");

        jRadioButton73.setBackground(new java.awt.Color(255, 255, 255));
        bgq24.add(jRadioButton73);
        jRadioButton73.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jRadioButton73.setText("3/13");

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel29.setText("Q )");

        jTextArea5.setEditable(false);
        jTextArea5.setColumns(20);
        jTextArea5.setLineWrap(true);
        jTextArea5.setRows(5);
        jTextArea5.setText(" A card is randomly drawn from a deck of 52 cards. What is the probability getting an Ace or King or Queen?");
        jTextArea5.setAutoscrolls(false);
        jScrollPane5.setViewportView(jTextArea5);

        javax.swing.GroupLayout jPanel43Layout = new javax.swing.GroupLayout(jPanel43);
        jPanel43.setLayout(jPanel43Layout);
        jPanel43Layout.setHorizontalGroup(
            jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel43Layout.createSequentialGroup()
                .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel43Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))
                    .addGroup(jPanel43Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton72)
                            .addComponent(jRadioButton73))
                        .addGap(103, 103, 103)
                        .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton71)
                            .addComponent(jRadioButton67))))
                .addGap(163, 163, 163))
        );
        jPanel43Layout.setVerticalGroup(
            jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel43Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton73)
                    .addComponent(jRadioButton67))
                .addGap(18, 18, 18)
                .addGroup(jPanel43Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton72)
                    .addComponent(jRadioButton71))
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout jPanel48Layout = new javax.swing.GroupLayout(jPanel48);
        jPanel48.setLayout(jPanel48Layout);
        jPanel48Layout.setHorizontalGroup(
            jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel48Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(100, 100, 100))
        );
        jPanel48Layout.setVerticalGroup(
            jPanel48Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel48Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.add(jPanel48, "card26");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 610, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(98, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        setSize(new java.awt.Dimension(1102, 697));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel3);
         jPanel7.repaint();
        jPanel7.revalidate();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
          jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel8);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
          jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel9);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
          jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel10);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
           jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel11);
         jPanel7.repaint();
        jPanel7.revalidate();
        
    }//GEN-LAST:event_jButton19ActionPerformed

    private void SubbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubbtnActionPerformed
        // TODO add your handling code here:
      try{ 
                this.calPoints();
                System.out.println(this.Points);
                ResultForm obj=new ResultForm();
                obj.setVisible(true);
                obj.getPoints(this.Points);
                this.dispose();
      }
      catch(Exception e){
          e.printStackTrace();
      }
       
        
    }//GEN-LAST:event_SubbtnActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
              jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel17);
         jPanel7.repaint();
        jPanel7.revalidate();
        
    
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
               jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel18);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
         jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel19);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here: jPanel7.removeAll();
        jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel20);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
         jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel21);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
         jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel4);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
         jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel6);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
         jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel27);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
         jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel31);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
         jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel32);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
         jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel39);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
          jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel35);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jRadioButton58ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton58ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton58ActionPerformed

    private void jRadioButton62ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton62ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton62ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
         jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel38);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
         jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel36);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
         jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel37);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if(jCheckBox1.isSelected()==true){
            Subbtn.setEnabled(true);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jRadioButton67ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton67ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton67ActionPerformed

    private void jRadioButton74ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton74ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton74ActionPerformed

    private void jRadioButton78ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton78ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton78ActionPerformed

    private void jRadioButton82ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton82ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton82ActionPerformed

    private void jRadioButton86ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton86ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton86ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel44);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel45);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:
         jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel46);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        // TODO add your handling code here:
         jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel47);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        // TODO add your handling code here:
         jPanel7.removeAll();
        jPanel7.repaint();
        jPanel7.revalidate();
        jPanel7.add(jPanel48);
         jPanel7.repaint();
        jPanel7.revalidate();
    }//GEN-LAST:event_jButton24ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuizRound.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuizRound.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuizRound.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuizRound.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuizRound().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Subbtn;
    private javax.swing.ButtonGroup bgq1;
    private javax.swing.ButtonGroup bgq10;
    private javax.swing.ButtonGroup bgq11;
    private javax.swing.ButtonGroup bgq12;
    private javax.swing.ButtonGroup bgq13;
    private javax.swing.ButtonGroup bgq14;
    private javax.swing.ButtonGroup bgq15;
    private javax.swing.ButtonGroup bgq16;
    private javax.swing.ButtonGroup bgq17;
    private javax.swing.ButtonGroup bgq18;
    private javax.swing.ButtonGroup bgq19;
    private javax.swing.ButtonGroup bgq2;
    private javax.swing.ButtonGroup bgq20;
    private javax.swing.ButtonGroup bgq21;
    private javax.swing.ButtonGroup bgq22;
    private javax.swing.ButtonGroup bgq23;
    private javax.swing.ButtonGroup bgq24;
    private javax.swing.ButtonGroup bgq3;
    private javax.swing.ButtonGroup bgq4;
    private javax.swing.ButtonGroup bgq5;
    private javax.swing.ButtonGroup bgq6;
    private javax.swing.ButtonGroup bgq7;
    private javax.swing.ButtonGroup bgq8;
    private javax.swing.ButtonGroup bgq9;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel36;
    private javax.swing.JPanel jPanel37;
    private javax.swing.JPanel jPanel38;
    private javax.swing.JPanel jPanel39;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel41;
    private javax.swing.JPanel jPanel42;
    private javax.swing.JPanel jPanel43;
    private javax.swing.JPanel jPanel44;
    private javax.swing.JPanel jPanel45;
    private javax.swing.JPanel jPanel46;
    private javax.swing.JPanel jPanel47;
    private javax.swing.JPanel jPanel48;
    private javax.swing.JPanel jPanel49;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel50;
    private javax.swing.JPanel jPanel51;
    private javax.swing.JPanel jPanel52;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton10;
    private javax.swing.JRadioButton jRadioButton11;
    private javax.swing.JRadioButton jRadioButton12;
    private javax.swing.JRadioButton jRadioButton13;
    private javax.swing.JRadioButton jRadioButton14;
    private javax.swing.JRadioButton jRadioButton15;
    private javax.swing.JRadioButton jRadioButton16;
    private javax.swing.JRadioButton jRadioButton17;
    private javax.swing.JRadioButton jRadioButton18;
    private javax.swing.JRadioButton jRadioButton19;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton20;
    private javax.swing.JRadioButton jRadioButton21;
    private javax.swing.JRadioButton jRadioButton22;
    private javax.swing.JRadioButton jRadioButton23;
    private javax.swing.JRadioButton jRadioButton24;
    private javax.swing.JRadioButton jRadioButton25;
    private javax.swing.JRadioButton jRadioButton26;
    private javax.swing.JRadioButton jRadioButton27;
    private javax.swing.JRadioButton jRadioButton28;
    private javax.swing.JRadioButton jRadioButton29;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton30;
    private javax.swing.JRadioButton jRadioButton31;
    private javax.swing.JRadioButton jRadioButton32;
    private javax.swing.JRadioButton jRadioButton33;
    private javax.swing.JRadioButton jRadioButton34;
    private javax.swing.JRadioButton jRadioButton35;
    private javax.swing.JRadioButton jRadioButton36;
    private javax.swing.JRadioButton jRadioButton37;
    private javax.swing.JRadioButton jRadioButton38;
    private javax.swing.JRadioButton jRadioButton39;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton40;
    private javax.swing.JRadioButton jRadioButton41;
    private javax.swing.JRadioButton jRadioButton42;
    private javax.swing.JRadioButton jRadioButton43;
    private javax.swing.JRadioButton jRadioButton44;
    private javax.swing.JRadioButton jRadioButton45;
    private javax.swing.JRadioButton jRadioButton46;
    private javax.swing.JRadioButton jRadioButton47;
    private javax.swing.JRadioButton jRadioButton48;
    private javax.swing.JRadioButton jRadioButton49;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton50;
    private javax.swing.JRadioButton jRadioButton51;
    private javax.swing.JRadioButton jRadioButton52;
    private javax.swing.JRadioButton jRadioButton53;
    private javax.swing.JRadioButton jRadioButton54;
    private javax.swing.JRadioButton jRadioButton55;
    private javax.swing.JRadioButton jRadioButton56;
    private javax.swing.JRadioButton jRadioButton57;
    private javax.swing.JRadioButton jRadioButton58;
    private javax.swing.JRadioButton jRadioButton59;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton60;
    private javax.swing.JRadioButton jRadioButton61;
    private javax.swing.JRadioButton jRadioButton62;
    private javax.swing.JRadioButton jRadioButton63;
    private javax.swing.JRadioButton jRadioButton64;
    private javax.swing.JRadioButton jRadioButton65;
    private javax.swing.JRadioButton jRadioButton66;
    private javax.swing.JRadioButton jRadioButton67;
    private javax.swing.JRadioButton jRadioButton68;
    private javax.swing.JRadioButton jRadioButton69;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JRadioButton jRadioButton70;
    private javax.swing.JRadioButton jRadioButton71;
    private javax.swing.JRadioButton jRadioButton72;
    private javax.swing.JRadioButton jRadioButton73;
    private javax.swing.JRadioButton jRadioButton74;
    private javax.swing.JRadioButton jRadioButton75;
    private javax.swing.JRadioButton jRadioButton76;
    private javax.swing.JRadioButton jRadioButton77;
    private javax.swing.JRadioButton jRadioButton78;
    private javax.swing.JRadioButton jRadioButton79;
    private javax.swing.JRadioButton jRadioButton8;
    private javax.swing.JRadioButton jRadioButton80;
    private javax.swing.JRadioButton jRadioButton81;
    private javax.swing.JRadioButton jRadioButton82;
    private javax.swing.JRadioButton jRadioButton83;
    private javax.swing.JRadioButton jRadioButton84;
    private javax.swing.JRadioButton jRadioButton85;
    private javax.swing.JRadioButton jRadioButton86;
    private javax.swing.JRadioButton jRadioButton87;
    private javax.swing.JRadioButton jRadioButton88;
    private javax.swing.JRadioButton jRadioButton89;
    private javax.swing.JRadioButton jRadioButton9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextArea jTextArea5;
    private javax.swing.JTextArea jTextArea6;
    private javax.swing.JTextArea jTextArea7;
    private javax.swing.JTextArea jTextArea8;
    private javax.swing.JTextArea jTextArea9;
    private javax.swing.JTextField restf;
    // End of variables declaration//GEN-END:variables
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package goldenhathackerround1;

/**
 *
 * @author ABC
 */
public class StartQuiz extends javax.swing.JFrame {

    /**
     * Creates new form StartQuiz
     */
    public StartQuiz() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        jButton1.setText("Start Quiz");
        jButton1.setActionCommand("Start Quiz");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(260, 260, 260)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 581, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(259, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(285, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(249, 249, 249))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new QuizRound().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StartQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StartQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StartQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartQuiz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StartQuiz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
/*
 
 */
package files;
////////////////////////////////////////////////////////////////////////////////
public class Employee {
    private String empName;
    private int empNo;
    private int basicPay;
    //--------------------------------------------------------------------------
    public Employee(String empName,int empNo,int basicPay){
        this.empName=empName;
        this.empNo=empNo;
        this.basicPay=basicPay;
    }
    //--------------------------------------------------------------------------
    public String getempName(){
        return empName;
    }
    //--------------------------------------------------------------------------
    public int getempNo(){
        return empNo;
    }
    //--------------------------------------------------------------------------
    public int getbasicPay(){
        return basicPay;
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
package files;
//////////////////////////////////////////////////////////////////////////////////////////////////
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Scanner;
//////////////////////////////////////////////////////////////////////////////////////////////////
public class Files {
    public static void main(String[] args) {
        FileInputStream instream=null;
        FileOutputStream outstream=null;
        //----------------------------------------------------------------------------------------
        try{
            File infile=new File("input.txt");
            File outfile=new File("output.txt");
            instream = new FileInputStream(infile);
            outstream = new FileOutputStream(outfile);
            
            int option=1;
            
            if(outfile.exists()){
                System.out.println("Want to overwrite ?? Enter 1 for yes or 0 for No");
                Scanner scn=new Scanner(System.in);
                option=scn.nextInt();      
            }
            
            if(option ==1){
                byte[] buffer = new byte[1024];
                int length;
                while ((length = instream.read(buffer)) > 0){
                    outstream.write(buffer, 0, length);
                }
            
                instream.close();
                outstream.close();
                System.out.println("File copied successfully!!");
            }else{
                System.out.println("File did'nt overwrite");
            }
            
        }
        catch(IOException e){
            e.printStackTrace();
        }
    }
    //--------------------------------------------------------------------------------------------
}
//////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////*
 s
 */
package files;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Scanner;
/////////////////////////////////////////////////////////////////////////////////
public class WriteEmployee {
    public void writeEmployee() throws IOException{
        
    }
    //---------------------------------------------------------------------------
    public static void main(String args[]){
        System.out.println("--------------Write Employee Details--------------");
        Scanner scn=new Scanner(System.in);
        System.out.print("Enter Name of Employee : ");
        String empName=scn.nextLine();
        System.out.print("Enter Id of Employee : ");
        int empId=scn.nextInt();
        System.out.print("Enter Basic Pay of Employee : ");
        int basicPay=scn.nextInt();
        //System.out.println("["+empId+", "+empName+", "+basicPay+"]");
        Employee e=new Employee(empName, empId, basicPay);
    }
}
/////////////////////////////////////////////////////////////////////////////////
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package goldenhathacker;

/**
 *
 * @author ABC
 */
public class GoldenHatHacker {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
      
    }

   
    
}

import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author ABC
 */
public class GoldenHatHacker extends javax.swing.JFrame {

    /**
     * Creates new form GoldenHatHacker
     */
    public GoldenHatHacker() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        submitbtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        usernametf = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        passwordpf = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Login Form");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(284, 284, 284)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel1)
                .addContainerGap(85, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        submitbtn.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        submitbtn.setForeground(new java.awt.Color(51, 51, 51));
        submitbtn.setText("Sign In");
        submitbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitbtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setText("Enter your User_Id");

        usernametf.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        usernametf.setToolTipText("Username ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Enter your Password");

        passwordpf.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        passwordpf.setToolTipText("Enter the password of 10 character\n");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(usernametf, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                            .addComponent(passwordpf)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(submitbtn)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(usernametf)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(passwordpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(submitbtn)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(110, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitbtnActionPerformed
        // TODO add your handling code here:
        String username=usernametf.getText();
        String password=new String(passwordpf.getPassword());
        try{
            if(password.equals("Abc1001")&& username.equals("Leomcp")){
                JOptionPane.showMessageDialog(null, "Sucessfully Loged In !");
            }
            else{
                JOptionPane.showMessageDialog(null,"Invalid Username or password ! \n Please try again .....");
            }
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_submitbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GoldenHatHacker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GoldenHatHacker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GoldenHatHacker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GoldenHatHacker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GoldenHatHacker().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField passwordpf;
    private javax.swing.JButton submitbtn;
    private javax.swing.JTextField usernametf;
    // End of variables declaration//GEN-END:variables
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hfrtproject;

/**
 *
 * @author ABC
 */
public class HFRTProject {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
    }
    
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hfrtproject;

import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author ABC
 */
public class HFRTQuery extends javax.swing.JFrame {
String sno ="";
    /**
     * Creates new form HFRTQuery
     */
    public HFRTQuery() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        srno = new javax.swing.JTextField();
        pos = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        callsign = new javax.swing.JTextField();
        time = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        msgta = new javax.swing.JTextArea();
        freq2 = new javax.swing.JTextField();
        datepx = new org.jdesktop.swingx.JXDatePicker();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        chklisttable = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        hfrtquery = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 153, 255));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 38)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("HIGH FREQUENCY AND RADIO TELECOMMUNICATION ");
        jLabel1.setToolTipText("");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hfrtproject/aailogo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(112, 112, 112))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(593, 593, 593)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("SR NO ");

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("DATE ");

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("STATION NAME ");

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("POSITION ");

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("FREQID1");

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("FREQID2");

        jLabel9.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("CALLSIGN");

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("TIME");

        jLabel11.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("MESSAGE TEXT ");

        srno.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N

        pos.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N

        jTextField3.setEditable(false);
        jTextField3.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jTextField3.setText("VABB");

        callsign.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N

        time.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N

        jTextField6.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N
        jTextField6.setText("VC");

        msgta.setColumns(20);
        msgta.setRows(5);
        jScrollPane1.setViewportView(msgta);

        freq2.setFont(new java.awt.Font("SansSerif", 1, 11)); // NOI18N

        datepx.setFormats("dd/MM");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(srno, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pos, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(datepx, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(freq2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(callsign, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(68, 68, 68)
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel11)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 739, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(0, 47, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(srno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(datepx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(callsign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(freq2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)), "HFRT CHECK LIST \n", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 18), new java.awt.Color(51, 51, 51))); // NOI18N

        chklisttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MESSAGE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(chklisttable);

        jButton5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(51, 51, 51));
        jButton5.setText("CLEAR ");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(51, 51, 51));
        jButton6.setText("PRINT CHECKLIST ");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(51, 51, 51));
        jButton7.setText("PRINT QUERY ");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton8.setForeground(new java.awt.Color(51, 51, 51));
        jButton8.setText("RESET ");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton9.setForeground(new java.awt.Color(204, 0, 0));
        jButton9.setText("CLOSE");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        hfrtquery.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        hfrtquery.setForeground(new java.awt.Color(51, 51, 51));
        hfrtquery.setText("HFRT QUERY ");
        hfrtquery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hfrtqueryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(hfrtquery, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hfrtquery, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void hfrtqueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hfrtqueryActionPerformed
        // TODO add your handling code here:
    
    SimpleDateFormat  formater=new SimpleDateFormat("dd/MM");
    String mdate=formater.format(datepx.getDate());
    
    
           sno =srno.getText(); 
    

    String msg=msgta.getText();
    String tm=time.getText();
    String cs=callsign.getText();
    DefaultTableModel model =(DefaultTableModel) chklisttable.getModel();
    
    
        
    try{
  
        Class.forName("java.sql.Driver");
        Connection con=DriverManager.getConnection("jdbc:mysql://localhost/ATC_PROJECT","root","");
        
        String query ="INSERT INTO ATC_TB VALUES ('"+sno+"','3','VABB','"+mdate+"','"+msg+"','VC',NULL,NULL,'"+tm+"','"+cs+"',NULL,NULL,NULL);";
       Statement stmt =con.createStatement();
       stmt.executeUpdate(query);
       System.out.println("insert  "+query);
        
        JOptionPane.showMessageDialog(null, "Message is been saved sucessfully ... ","HFRT AAI MUMBAI",JOptionPane.INFORMATION_MESSAGE);
        
                 model.addRow(new Object[] {msg});
        
     
                 
    }
    catch(Exception e ){
        e.printStackTrace();
    }
               
   
    }//GEN-LAST:event_hfrtqueryActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        srno.setText(" ");
        pos.setText(" ");
        msgta.setText(" ");
        freq2.setText(" ");
        callsign.setText(" ");
        time.setText(" ");
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HFRTQuery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HFRTQuery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HFRTQuery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HFRTQuery.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HFRTQuery().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField callsign;
    private javax.swing.JTable chklisttable;
    private org.jdesktop.swingx.JXDatePicker datepx;
    private javax.swing.JTextField freq2;
    private javax.swing.JButton hfrtquery;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextArea msgta;
    private javax.swing.JTextField pos;
    private javax.swing.JTextField srno;
    private javax.swing.JTextField time;
    // End of variables declaration//GEN-END:variables
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HackerRank;
//import java.io.*;
import java.util.*;
//import java.text.*;
//import java.math.*;
//9import java.util.regex.*;
public class Arithmetic {

    public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        double mealCost = scan.nextDouble(); // original meal price
        int tipPercent = scan.nextInt(); // tip percentage
        int taxPercent = scan.nextInt(); // tax percentage
        scan.close();
      
        // Write your calculation code here.
        double tip=(mealCost*tipPercent)/100;
        
        double tax=(mealCost*taxPercent)/100;
        double total=mealCost+tip+tax;
        // cast the result of the rounding operation to an int and save it as totalCost 
        int totalCost = (int) Math.round(mealCost+tip+tax);
      
        // Print your result
        System.out.println("The total meal cost is "+totalCost);
    }
}


package HackerRank;
////////////////////////////////////////////////////////////////////////////////
import java.util.Scanner;
////////////////////////////////////////////////////////////////////////////////
public class EmasSuperComputer {
    //--------------------------------------------------------------------------
    public static void main(String rgs[]){
        Scanner scn=new Scanner(System.in);
        int rows=scn.nextInt();
        int cols=scn.nextInt();
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HackerRank;

import java.util.Scanner;

/**
 *
 * @author parab
 */
public class HackerRank {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
         Scanner scan = new Scanner(System.in);
        double mealCost = scan.nextDouble(); // original meal price
        int tipPercent = scan.nextInt(); // tip percentage
        int taxPercent = scan.nextInt(); // tax percentage
        scan.close();
      
        // Write your calculation code here.
        double tip=mealCost*(tipPercent/100);
        double tax=mealCost*(taxPercent/100);
        
        // cast the result of the rounding operation to an int and save it as totalCost 
        int totalCost = (int) Math.round(mealCost+tip+tax);
      
        // Print your result
        System.out.println("The total meal cost is "+totalCost);
    }
    
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HackerRank;


import java.util.*;
import java.util.Scanner;

public class HackerrankInString {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int q = in.nextInt();
        
        
        String s="hackerrank";
        
        
        for(int a0 = 0; a0 < q; a0++){
            int count=0;
            String str = in.next();
            // your code goes here
            for(int i=0;i<str.length();i++){
                if(str.charAt(i)==s.charAt(count)){
                   // System.out.println(str.charAt(i)+", "+count);
                    if(count==9){
                        System.out.println("YES");
                        break;
                    }
                    else{
                        count++;
                    }     
                } 
            } 
            if(count!=9){
               System.out.println("NO");
           }
        }
    }
}

package HackerRank;
////////////////////////////////////////////////////////////////////////////////

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class MigratoryBirds {
    public static void main(String args[]){
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] types = new int[n];
        
        Map<Integer,Integer> mBirds=new HashMap<Integer,Integer>();
        
        for(int types_i=0; types_i < n; types_i++){
            int inBird=in.nextInt();
            types[types_i] = inBird;
            if(mBirds.containsKey(inBird)){
                mBirds.put(inBird, mBirds.get(inBird));
            }
            else{
                mBirds.put(inBird, 1);
            }
        }
        
        int max=Integer.MIN_VALUE;
        int result;
        
        int maxValueInMap=(Collections.max(mBirds.values()));
        for (Map.Entry<Integer, Integer> entry : mBirds.entrySet()) {  
            if (entry.getValue()==maxValueInMap) {
                System.out.println(entry.getKey());
                return;
            }
        }
        
        
        
    }
}

package HackerRank;

import java.util.Arrays;
import java.util.Scanner;

public class MinimumAbsoluteDifference {
    public static void main(String args[]){
            Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int[] a = new int[n];
        for(int a_i=0; a_i < n; a_i++){
            a[a_i] = in.nextInt();
        }
        // your code goes here
        Arrays.sort(a);
        int value=Integer.MAX_VALUE;
        
        for(int i=1;i<n;i++){
            if(Math.abs(a[i-1]-a[i])<value)
                value=Math.abs(a[i-1]-a[i]);
        }
        
        System.out.println(""+value);
        
    }
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HackerRank;
import java.io.*;
import java.util.*;
/**
 *
 * @author parab
 */
public class NoOfConsecOnesInBinaryNumbers {
    
    public static void main(String args[]){
        Scanner scan =new Scanner(System.in);
        System.out.println("Enter the number to calculate");
        int num=scan.nextInt();
        String numsplit[]=Integer.toBinaryString(num).split("0");
        
        for(int i=0;i<numsplit.length;i++){
            System.out.println(""+numsplit[i]);
        
    }
        int max=0;
        for(String s:numsplit){
            System.out.println(""+s+" "+s.length());
            if(max<s.length()){
                max=s.length();
            }
        }
        
    System.out.println(""+max);
}
}
package HackerRank;
////////////////////////////////////////////////////////////////////////////////
import java.util.Scanner;
////////////////////////////////////////////////////////////////////////////////
public class PrefixNeighbours {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        Scanner in =new Scanner(System.in);
        int n=in.nextInt();
        
        String s[]=new String[n];
        
        for(int i=0;i<n;i++){
            s[i]=in.next();
        }
        
        for(int a=0;a<n;a++){
            for(int b=a;b<n;b++){
                System.out.println("Checking ..... "+s[a]+" and "+s[b]);
                if(s[a].startsWith(s[b]))
                    System.out.println("YES");
            }
        }
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HackerRank;
import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
/**
 *
 * @author parab
 */
public class PrintUniqCharArray {
    
    
    public static void main(String args[]){
        
        
        
        Scanner scan =new Scanner(System.in);
        System.out.println("Enter the number of elements in array");
        int numelm=scan.nextInt();
        
        int arr_num[]=new int[numelm];
        
        System.out.println("Enter the array elements");
        
        for(int i=0;i<numelm;i++){
            arr_num[i]=scan.nextInt();
        }
        
       Map<Integer,Integer> mapNum=new HashMap<Integer,Integer>();
       
       for(int b:arr_num){
           
         
           
           
           
       }
       
       
    }
}

package HackerRank;
////////////////////////////////////////////////////////////////////////////////
import java.util.*;
////////////////////////////////////////////////////////////////////////////////
public class TwoDArray {
    //--------------------------------------------------------------------------
    public static void main(String args[]){
        Scanner in=new Scanner(System.in);
        int arr[][] = new int[6][6];
        for(int i=0; i < 6; i++){
            for(int j=0; j < 6; j++){
                arr[i][j] = in.nextInt();
            }
        }
        
        for(int i=0;i<16;i++){
            
        }
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
`/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package inheritence;

class Animals{
    
}

public class Inheritence {

    
    public static void main(String[] args) {
        // TODO code application logic here
    }
    
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ironmanalgo;

/**
 *
 * @author ABC
 */
public class IronManAlgo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
    }
    
}
package ironmanalgo;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author ABC
 */
public class Round3 extends javax.swing.JFrame {

    /**
     * Creates new form Round3
     */
    public Round3() {
        initComponents();
    }
public void enterTextArea(){
    jTextArea1.append("Iron Man");
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ironmanalgo/iron man 3.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Our city is under trouble ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Design the Iron Man algorithm flowchart  ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("our city Mumbai from devastation !");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setText("using following description .");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setText("and save ");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(99, 99, 99)
                                .addComponent(jLabel8)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ironmanalgo/physical_design_of_robot.jpg"))); // NOI18N
        jLabel2.setText("PHYSICAL DIAGRAM OF IRON MAN");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("PHYSICAL DIAGRAM OF IRON MAN");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(jLabel3)))
                .addGap(56, 56, 56))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(648, 648, 648))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setAutoscrolls(false);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(98, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 728, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Round3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Round3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Round3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Round3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Round3 obj1=new Round3();
                
                obj1.setVisible(true);
                
            }
            
            
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ironmanalgo;

/**
 *
 * @author ABC
 */
public class StartPage extends javax.swing.JFrame {

    /**
     * Creates new form StartPage
     */
    public StartPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ironmanalgo/iron-man.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ironmanalgo/fusion15_1.png"))); // NOI18N
        jLabel2.setText("jLabel2");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(273, 273, 273))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Start Round 3");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(185, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(196, 196, 196))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(289, 289, 289)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Round3 obj=new Round3();
       //obj.jTextArea1.setText("Iron Man");
        obj.setVisible(true);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StartPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StartPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StartPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StartPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StartPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jtablerender;

/**
 *
 * @author ABC
 */
public class JTableRender {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
       
    }
    
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jtablerender;

import java.awt.Color;
import java.awt.Component;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author ABC
 */
public class JtableRenderHome extends javax.swing.JFrame {
  
    /**
     * Creates new form JtableRenderHome
     */
    public JtableRenderHome() {
        initComponents();
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        mytb = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        mytb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", null},
                {"2", null},
                {"3", null},
                {"4", null},
                {"5", null}
            },
            new String [] {
                "Title 1", " mark as read "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(mytb);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(216, 216, 216)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(248, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(209, 209, 209)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(260, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JtableRenderHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JtableRenderHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JtableRenderHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JtableRenderHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
    
   
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JtableRenderHome().setVisible(true);
            }
        });
        
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable mytb;
    // End of variables declaration//GEN-END:variables
}
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author ABC
 */
public class HomeLoginPage extends javax.swing.JFrame {

    /**
     * Creates new form HomeLoginPage
     */
    public HomeLoginPage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 167, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(325, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(168, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(161, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeLoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeLoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeLoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeLoginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeLoginPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
/*
 
 */
package javacomparator;
////////////////////////////////////////////////////////////////////////////////
import java.util.*;
////////////////////////////////////////////////////////////////////////////////
public class AgeComparator implements Comparator {
    //--------------------------------------------------------------------------
    @Override
    public int compare(Object o1, Object o2) {
        Student s1=(Student) o1;
        Student s2=(Student) o2;
        
        if(s1.age==s2.age)
           return 0;
        else if(s1.age>s2.age)
            return 1;
        else
            return -1;  
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////

/*
 Simple program to show use of Comparator to sort the list based on name and age 
 of a student.
 */
package javacomparator;
////////////////////////////////////////////////////////////////////////////////
import java.util.*;
import java.io.*;
////////////////////////////////////////////////////////////////////////////////
public class JavaComparator {
    //--------------------------------------------------------------------------
    public static void main(String[] args) {
        ArrayList<Object> al=new ArrayList<Object>();
        
        al.add(new Student(101,"Saurbh",23));
        al.add(new Student(102,"Sachin",28));
        al.add(new Student(103,"Rahul",20));
        
        System.out.println("Sorting by name .........");
        Collections.sort(al,new NameComparator());
        Iterator itr =al.iterator();
        while(itr.hasNext()){
            Student s=(Student) itr.next();
            System.out.println(s.name+" "+s.rolNo+" "+s.age);
        }
        
        
        System.out.println("Sorting by age ...........");
        Collections.sort(al,new AgeComparator());
        Iterator itr2=al.iterator();
        while(itr2.hasNext()){
            Student s=(Student) itr2.next();
            System.out.println(s.name+" "+s.rolNo+" "+s.age);
        }
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
/*
OUTPUT :
Sorting by name .........
Rahul 103 20
Sachin 102 28
Saurbh 101 23
Sorting by age ...........
Rahul 103 20
Saurbh 101 23
Sachin 102 28
*//*
 
 */
package javacomparator;
////////////////////////////////////////////////////////////////////////////////
import java.util.*;
////////////////////////////////////////////////////////////////////////////////
public class NameComparator implements Comparator {
    //--------------------------------------------------------------------------
    @Override
    public int compare(Object o1, Object o2) {
        Student s1=(Student) o1;
        Student s2=(Student) o2;
        
        return s1.name.compareTo(s2.name);
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
package javacomparator;
////////////////////////////////////////////////////////////////////////////////
public class Student {
    int rolNo;
    String name;
    int age;
    //--------------------------------------------------------------------------
    public Student(int rolNo,String name,int age){
        this.rolNo=rolNo;
        this.name=name;
        this.age=age;
    }
    //--------------------------------------------------------------------------
}
////////////////////////////////////////////////////////////////////////////////         